JAVA PROFILE 1.0.1, created Sat Jun 27 22:45:52 2020

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018c, id = 200001, name="main", group="main")
THREAD START (obj=5000018c, id = 200004, name="nfi-gc", group="main")
THREAD START (obj=500008c9, id = 200005, name="TruffleCompilerThread-28", group="main")
THREAD START (obj=50000929, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018c, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD START (obj=5000018c, id = 200008, name="process reaper", group="system")
THREAD START (obj=50002d58, id = 200009, name="system", group="main")
THREAD END (id = 200009)
THREAD START (obj=50002d58, id = 200010, name="system", group="main")
THREAD END (id = 200010)
THREAD START (obj=500008c9, id = 200011, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50002d58, id = 200012, name="Thread-7", group="main")
THREAD START (obj=5000018c, id = 200013, name="pool-1-thread-1", group="main")
THREAD END (id = 200008)
THREAD END (id = 200012)
THREAD START (obj=5000018c, id = 200014, name="Thread-1", group="main")
THREAD START (obj=500008c9, id = 200015, name="Thread-0", group="main")
THREAD START (obj=5000018c, id = 200016, name="Thread-3", group="main")
THREAD END (id = 200016)
THREAD END (id = 200015)
THREAD END (id = 200014)
THREAD END (id = 200001)
TRACE 301633:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:283)
TRACE 301994:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 301755:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:859)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302079:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:286)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:133)
TRACE 302037:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 304234:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:50)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 304362:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 304360:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
TRACE 302298:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 301895:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 302002:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 304642:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:127)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 301684:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4297)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4291)
TRACE 304235:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:51)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 301662:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 301635:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 304901:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:110)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.executeAndSpecialize(ArrayNodeGen.java:115)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:58)
TRACE 304238:
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 301348:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
TRACE 304648:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:75)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:301)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 300069:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:757)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 302016:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 304599:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:92)
TRACE 301939:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 301833:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302875:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 302346:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:115)
TRACE 302008:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 301016:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 304364:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 301185:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:1002)
TRACE 302873:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 301912:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 304359:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
TRACE 301827:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:457)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:238)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:150)
TRACE 300810:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 301732:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:152)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
TRACE 304651:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 303211:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 301961:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1939)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 302415:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 304367:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 301658:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:451)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302217:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302420:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:633)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
TRACE 304618:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 304838:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.getData(NativeDataAccess.java:846)
	com.oracle.truffle.r.runtime.data.RDoubleNativeVectorData.getDoubleAt(RDoubleNativeVectorData.java:98)
	com.oracle.truffle.r.runtime.data.RDoubleNativeVectorDataGen$RDoubleVectorDataLibraryExports$Uncached.getDoubleAt(RDoubleNativeVectorDataGen.java:239)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
TRACE 300992:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302563:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 301512:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 301847:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 302509:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 301216:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:257)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:736)
TRACE 304418:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:137)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:128)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:326)
TRACE 303386:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 304970:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
TRACE 301871:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 302471:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:250)
TRACE 304421:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 300997:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302659:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302734:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302684:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1013)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1007)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 303214:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 302004:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 300969:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 302713:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 304832:
	com.oracle.truffle.r.runtime.data.RDoubleVector.getLength(RDoubleVector.java:202)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:360)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
TRACE 301815:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 301722:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
TRACE 304363:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:360)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 304295:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 302482:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:790)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304329:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:75)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:301)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 304643:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 304795:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 302061:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302271:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302026:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 302231:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:647)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:747)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 303088:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 303074:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:381)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 301767:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:571)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 301880:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 302356:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 304621:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 301857:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4435)
TRACE 302255:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:557)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302349:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 302879:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 304423:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 301078:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 302462:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 302176:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:896)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302215:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 300979:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300987:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301733:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 302806:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 300973:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 302411:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 303384:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 304230:
	com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble(MersenneTwister.java:185)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
TRACE 300983:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 301788:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:841)
TRACE 302776:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:105)
TRACE 304976:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
TRACE 302738:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 304272:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.executeAndSpecialize(Rf_copyMatrixCallGen.java:125)
TRACE 304296:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:127)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 301339:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 302184:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:508)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:355)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:419)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:578)
TRACE 302689:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 301515:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 302053:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:376)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302384:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302876:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 304971:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.setDoubleImpl(RDoubleVector.java:380)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setDouble(VectorAccess.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
TRACE 301813:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4667)
TRACE 302193:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
TRACE 302464:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1144)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
TRACE 302706:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
TRACE 301065:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1200)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:949)
TRACE 301934:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 302621:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:500)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 302795:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 304649:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 301869:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
TRACE 302197:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302362:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
TRACE 304626:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302705:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:694)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302871:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:809)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302919:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 304347:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 302611:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:640)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303080:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303191:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:908)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303252:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:162)
TRACE 303556:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1266)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:364)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 300289:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:316)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
	java.util.jar.JarFile.getJarEntry(JarFile.java:223)
TRACE 301687:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:103)
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
TRACE 301874:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302084:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
TRACE 302250:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
TRACE 302938:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1301)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302961:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 300643:
	sun.misc.Unsafe.defineAnonymousClass(Unsafe.java:Unknown line)
	java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)
	java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
	java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)
TRACE 301058:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:286)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SlowPathExecuteNode.slowPathExecute(FunctionExecuteNode.java:265)
TRACE 301409:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302015:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302133:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 302264:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:278)
TRACE 302779:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 302815:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:103)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:80)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
TRACE 303582:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
TRACE 301910:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302547:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1295)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1286)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 302693:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:880)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302727:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302853:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302925:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303135:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:795)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:368)
TRACE 304283:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 300815:
	java.lang.ClassLoader.loadClass(ClassLoader.java:431)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 301746:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 302253:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:904)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 302344:
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic(HotSpotResolvedJavaFieldImpl.java:164)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isSyntheticEnumSwitchMap(JavaConstantFieldProvider.java:148)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField(JavaConstantFieldProvider.java:122)
	org.graalvm.compiler.hotspot.meta.HotSpotConstantFieldProvider.isStableField(HotSpotConstantFieldProvider.java:60)
TRACE 302445:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 302489:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:969)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 302585:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:3008)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2987)
	com.oracle.truffle.r.runtime.RSerialize.access$2700(RSerialize.java:135)
TRACE 303017:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:80)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
TRACE 303460:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 304231:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 301224:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:735)
TRACE 302038:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:198)
TRACE 302408:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 302812:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:125)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:112)
	org.graalvm.compiler.graph.Node.clone(Node.java:1064)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 303002:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 303013:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:886)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303068:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 300857:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 301966:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302292:
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
TRACE 302425:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate(FrameSlotChangeMonitor.java:910)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 302864:
	org.graalvm.compiler.graph.InputEdges.update(InputEdges.java:66)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1250)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 303643:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
TRACE 304623:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 300978:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 300981:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:454)
TRACE 301106:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:364)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:86)
TRACE 301188:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:556)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:510)
TRACE 301893:
	com.oracle.truffle.r.runtime.data.RBaseObject.<init>(RBaseObject.java:34)
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:40)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
TRACE 302544:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:253)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 302626:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:152)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:119)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
TRACE 302903:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 303784:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 300261:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:348)
	sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
TRACE 300901:
	java.lang.invoke.MethodHandleNatives.resolve(MethodHandleNatives.java:Unknown line)
	java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)
	java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)
	java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)
TRACE 301369:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 301739:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 302347:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
TRACE 302499:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302571:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:685)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 302596:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1045)
TRACE 303190:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303345:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
TRACE 303439:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:93)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303474:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 301092:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 301525:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301832:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4808)
TRACE 301911:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 302136:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:291)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302414:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302530:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:811)
TRACE 302729:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
TRACE 302796:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:155)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302860:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1762)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1738)
TRACE 302866:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
TRACE 303069:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303226:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303452:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:829)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 300707:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 301336:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.CallArgumentsNode.evaluateFlattenObjects(CallArgumentsNode.java:242)
TRACE 301527:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.FrameSlotNode$PresentFrameSlotNode.hasValue(FrameSlotNode.java:181)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 301745:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 301822:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.hasAnnotations(HotSpotResolvedJavaFieldImpl.java:180)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:194)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getAnnotations(GraalTruffleRuntime.java:1074)
TRACE 302073:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope(ComputeInliningRelevance.java:145)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:97)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 302373:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:486)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:144)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 302607:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.AbstractMergeNode.addForwardEnd(AbstractMergeNode.java:70)
TRACE 302680:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1227)
TRACE 302802:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:416)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
TRACE 303019:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:142)
TRACE 303451:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304365:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 301010:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 302206:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1(UnsafeArrayTypeReader.java:131)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.read(AbstractTypeReader.java:43)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.getUV(AbstractTypeReader.java:35)
	org.graalvm.compiler.core.common.util.TypeReader.getUVInt(TypeReader.java:83)
TRACE 302310:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:240)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302679:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1065)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 302794:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
TRACE 302819:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 302964:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 303485:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 303510:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 303574:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:610)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 304622:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 300991:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301324:
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments(ArgumentMatcher.java:192)
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.matchArgumentsEvaluated(ArgumentMatcher.java:186)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsExplicit.prepare(PrepareArguments.java:211)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsExplicitNodeGen.execute(PrepareArgumentsFactory.java:170)
TRACE 301907:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 302218:
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:170)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readFieldValue(HotSpotConstantReflectionProvider.java:173)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.readValue(ConstantFoldUtil.java:51)
TRACE 302315:
	com.oracle.truffle.r.runtime.RArguments.getCall(RArguments.java:255)
	com.oracle.truffle.r.nodes.function.opt.OptForcedEagerPromiseNode.execute(OptForcedEagerPromiseNode.java:142)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
TRACE 302324:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2(PipelineToCastNode.java:404)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$$Lambda$724.73150370.test(<Unknown Source>:Unknown line)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 302376:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302405:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 302574:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302603:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
TRACE 302722:
	com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute(AccessArgumentNode.java:94)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 302778:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302977:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 303038:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:65)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 303062:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.isShareable(RSharingAttributeStorage.java:134)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.execute(WrapArgumentBaseNode.java:68)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:624)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
TRACE 303145:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303151:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303225:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval(FixPointIntervalBuilder.java:168)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:124)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303298:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303453:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303534:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:102)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 304297:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
TRACE 300853:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749)
TRACE 300975:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301453:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNodeGen.execute(ValueForwardingNodeGen.java:74)
TRACE 301806:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 301964:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:326)
TRACE 301971:
	java.lang.Class.isAssignableFrom(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.isAssignableFrom(HotSpotJDKReflection.java:69)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isAssignableFrom(HotSpotResolvedObjectTypeImpl.java:414)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isInObject(HotSpotResolvedJavaFieldImpl.java:114)
TRACE 302077:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:198)
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302119:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:802)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302196:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 302216:
	java.lang.Class.isArray(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getLength(HotSpotJDKReflection.java:239)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayLength(HotSpotConstantReflectionProvider.java:80)
	org.graalvm.compiler.nodes.ConstantNode.findLength(ConstantNode.java:569)
TRACE 302396:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:387)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302522:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302533:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 302541:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302592:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302656:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 302939:
	org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>(PrintableDominatorOptimizationProblem.java:35)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:107)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 303046:
	com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest(ConditionalMapNode.java:82)
	com.oracle.truffle.r.nodes.unary.ConditionalMapNodeGen.execute(ConditionalMapNodeGen.java:44)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 303072:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
TRACE 303188:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:812)
TRACE 303302:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303434:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:587)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303513:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:509)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:333)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 304284:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 300799:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:370)
	java.util.jar.JarFile.getInputStream(JarFile.java:447)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:987)
TRACE 300971:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301103:
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet(ParserATNSimulator.java:818)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 301190:
	java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:88)
	java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:77)
	com.oracle.truffle.r.runtime.conn.DelegateRConnection.createGZIPDelegateInputConnection(DelegateRConnection.java:649)
	com.oracle.truffle.r.runtime.conn.FileConnections.createDelegateConnection(FileConnections.java:278)
TRACE 301205:
	java.lang.Class.isArray(Class.java:Unknown line)
	java.lang.Class.getSimpleName(Class.java:1306)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:81)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:77)
TRACE 301317:
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.isCallTargetCloningAllowed(OptimizedDirectCallNode.java:117)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.canSplit(TruffleSplittingStrategy.java:116)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.shouldSplit(TruffleSplittingStrategy.java:83)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.beforeCall(TruffleSplittingStrategy.java:56)
TRACE 301322:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getBuiltinClass(NodeWithArgumentCasts.java:132)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getCasts(NodeWithArgumentCasts.java:111)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts.getStaticCasts(NodeWithArgumentCasts.java:42)
TRACE 301718:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeNonFunctionFrameDescriptor(FrameSlotChangeMonitor.java:940)
TRACE 302149:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
TRACE 302161:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.Return.returnFunction(Return.java:108)
	com.oracle.truffle.r.nodes.builtin.base.ReturnNodeGen.execute(ReturnNodeGen.java:37)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 302189:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302204:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:802)
TRACE 302233:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302267:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1432)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302287:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
TRACE 302305:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:169)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302416:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 302609:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1242)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302725:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 302791:
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:535)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCodeBody(AMD64HotSpotBackend.java:318)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCode(AMD64HotSpotBackend.java:246)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:208)
TRACE 302985:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 302991:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 303083:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
TRACE 303234:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:197)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303262:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:284)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:467)
TRACE 303406:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 303612:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1321)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:725)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:230)
TRACE 303682:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:267)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:454)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 303706:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:149)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:59)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$2.doValue(LinearScanAssignLocationsPhase.java:189)
TRACE 304066:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 304368:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:148)
TRACE 304483:
	jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.getMaxCallTargetOffset(HotSpotCodeCacheProvider.java:186)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getMaxCallTargetOffset(HotSpotForeignCallLinkageImpl.java:216)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitForeignCallOp(AMD64LIRGenerator.java:563)
TRACE 300896:
	java.util.zip.ZipFile.getNextEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$500(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:523)
	java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:514)
TRACE 300967:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
TRACE 301681:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301752:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4372)
TRACE 301975:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:124)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:83)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302104:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302159:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:395)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302341:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
TRACE 302493:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:235)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 302519:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302874:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 302992:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:840)
TRACE 303031:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
TRACE 303066:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 303124:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303161:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 303267:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:934)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$4.apply(GraphEffectList.java:275)
TRACE 303271:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303490:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303566:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 304070:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 304279:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.FrameState.addVirtualObjectMapping(FrameState.java:288)
TRACE 300072:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 301157:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	sun.nio.fs.NativeBuffers.copyCStringToNativeBuffer(NativeBuffers.java:127)
	sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixNativeDispatcher.java:50)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:447)
TRACE 301529:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrCached(GetFixedPropertyNode.java:100)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetNamesPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:448)
	com.oracle.truffle.r.nodes.attributes.GetFixedAttributeNode.getAttrFromAttributable(GetFixedAttributeNode.java:78)
TRACE 301698:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.handleException(BytecodeParser.java:1318)
TRACE 301882:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302120:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302122:
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:40)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:76)
TRACE 302242:
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:609)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302375:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:163)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302461:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
TRACE 302591:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302695:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:74)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302704:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:758)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$28.214363666.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
TRACE 302755:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 302907:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303000:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 303023:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:896)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 303061:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:332)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:301)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
TRACE 303099:
	org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks(NullCheckOptimizer.java:56)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:43)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:37)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 303112:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:357)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303159:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303165:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:354)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:103)
TRACE 303255:
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeStaticallyBound(HotSpotResolvedJavaMethodImpl.java:246)
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:764)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:732)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
TRACE 303259:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
TRACE 303396:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 303409:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:375)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303424:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.analyzeBlock(ConstantLoadOptimization.java:257)
TRACE 303427:
	org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath(DominatorOptimizationProblem.java:128)
	org.graalvm.compiler.lir.constopt.ConstantTree.markBlocks(ConstantTree.java:176)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 303449:
	java.util.ArrayList.forEach(ArrayList.java:1257)
	org.graalvm.compiler.lir.constopt.DefUseTree.forEach(DefUseTree.java:84)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:109)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
TRACE 303478:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 303668:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 303689:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:454)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303730:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
TRACE 303819:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 303821:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putUV(UnsafeArrayTypeWriter.java:210)
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
TRACE 303992:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:756)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 304221:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 304366:
	java.util.ArrayList.addAll(ArrayList.java:581)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:122)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
TRACE 304392:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.rng.RRNG.getContextState(RRNG.java:253)
	com.oracle.truffle.r.runtime.rng.RRNG.currentGenerator(RRNG.java:273)
	com.oracle.truffle.r.runtime.rng.RRNG.unifRand(RRNG.java:288)
TRACE 301109:
	org.antlr.v4.runtime.misc.FlexibleHashMap.get(FlexibleHashMap.java:91)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:549)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301652:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
TRACE 301932:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:202)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
TRACE 302334:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.canonical(BinaryArithmeticNode.java:90)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:172)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:47)
TRACE 302382:
	com.oracle.truffle.r.nodes.function.opt.UnShareObjectNodeGen.execute(UnShareObjectNodeGen.java:26)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302402:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1299)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
TRACE 302442:
	com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess.getStore(FastPathVectorAccess.java:54)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.randomAccess(VectorAccess.java:428)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.randomAccess(VectorAccess.java:410)
	com.oracle.truffle.r.nodes.access.vector.ExtractListElement.doList(ExtractListElement.java:68)
TRACE 302473:
	org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual(VirtualObjectState.java:71)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:628)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 302498:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:71)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302526:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 302598:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:168)
TRACE 302651:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:617)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:404)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302658:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 302772:
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:179)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:903)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302801:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache(PEReadEliminationClosure.java:403)
TRACE 302809:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 302931:
	com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute(PromiseNode.java:166)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302936:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:774)
	org.graalvm.compiler.nodes.ValueNode.replaceAtUsages(ValueNode.java:219)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:763)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
TRACE 302976:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.computeStamp(PiNode.java:172)
TRACE 302978:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:207)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 302980:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet(AbstractObjectStamp.java:142)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:136)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 302984:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:943)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:241)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
TRACE 302989:
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply(GraphEffectList.java:154)
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 303011:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1416)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1407)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 303012:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 303035:
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
TRACE 303043:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:790)
TRACE 303081:
	org.graalvm.compiler.options.NestedBooleanOptionKey.getValue(NestedBooleanOptionKey.java:37)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves(LinearScanEliminateSpillMovePhase.java:126)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.run(LinearScanEliminateSpillMovePhase.java:80)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303116:
	com.oracle.truffle.r.nodes.control.BreakNode.execute(BreakNode.java:43)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 303210:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$12(LinearScanLifetimeAnalysisPhase.java:777)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$30.1532744364.doState(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
TRACE 303218:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303276:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias(PartialEscapeClosure.java:1289)
	org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject(VirtualizerToolImpl.java:328)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.virtualize(CommitAllocationNode.java:144)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 303316:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:626)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 303318:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RIntVectorDataLibraryGen$UncachedDispatch.isWriteable(RIntVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RIntVector.isMaterialized(RIntVector.java:105)
	com.oracle.truffle.r.nodes.attributes.CopyAttributesNode.containsMetadata(CopyAttributesNode.java:72)
TRACE 303336:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:771)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303338:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:483)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:474)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:377)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
TRACE 303344:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303413:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:187)
TRACE 303418:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:339)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303445:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildBeforeOpId(Interval.java:940)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:537)
TRACE 303653:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:210)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
TRACE 303736:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:171)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 303982:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:93)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 304153:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:478)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 304246:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:85)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:221)
TRACE 304282:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
TRACE 304402:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt(VectorAccess.java:323)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$8.perform(BinaryMapNode.java:350)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304998:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 300872:
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 301302:
	sun.text.normalizer.NormalizerBase$NFDMode.normalize(NormalizerBase.java:297)
	sun.text.normalizer.NormalizerBase$Mode.normalize(NormalizerBase.java:209)
	sun.text.normalizer.NormalizerBase.next(NormalizerBase.java:1460)
	sun.text.normalizer.NormalizerBase.nextNormalize(NormalizerBase.java:1493)
TRACE 301356:
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:515)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:527)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:498)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:527)
TRACE 301416:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.api.nodes.Node.copy(Node.java:491)
	com.oracle.truffle.api.nodes.RootNode.copy(RootNode.java:180)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:154)
TRACE 301657:
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
TRACE 301728:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.checkUnwind(BytecodeParser.java:3003)
TRACE 301758:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3088)
TRACE 301853:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1016)
TRACE 301861:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethodFlags(HotSpotResolvedJavaMethodImpl.java:198)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:268)
TRACE 302042:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:393)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302043:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:893)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302064:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:209)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302115:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranch(AMD64LIRGenerator.java:330)
TRACE 302128:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302154:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:204)
	org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:181)
	org.graalvm.collections.EconomicMapImpl.create(EconomicMapImpl.java:158)
TRACE 302155:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.function.RCallNode$GetTempNode.execute(RCallNode.java:848)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 302190:
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
TRACE 302295:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:759)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302475:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302495:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 302552:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
TRACE 302666:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:969)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:802)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 302678:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:275)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302681:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 302721:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:130)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 302739:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:684)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:284)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:467)
TRACE 302782:
	org.graalvm.compiler.nodes.ConstantNode.forInt(ConstantNode.java:351)
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:199)
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:210)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:62)
TRACE 302788:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 302804:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.Arrays$ArrayList.toArray(Arrays.java:3823)
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.<init>(CommitAllocationNode.java:77)
TRACE 302923:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:799)
TRACE 302988:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 303044:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.clone(Node.java:1076)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 303086:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:324)
TRACE 303127:
	org.graalvm.compiler.nodes.FrameState.<init>(FrameState.java:162)
	org.graalvm.compiler.nodes.FrameState.duplicateModified(FrameState.java:393)
	org.graalvm.compiler.replacements.PEGraphDecoder.ensureOuterStateDecoded(PEGraphDecoder.java:1313)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1358)
TRACE 303138:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:159)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 303141:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 303178:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 303189:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
TRACE 303201:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
TRACE 303228:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 303245:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303266:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
TRACE 303287:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processEnd(ConditionalEliminationPhase.java:607)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:508)
TRACE 303299:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 303310:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:292)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303320:
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue(BaseWriteVariableNode.java:128)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.shareObjectValue(BaseWriteVariableNode.java:103)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 303360:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 303366:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$8(LinearScanLifetimeAnalysisPhase.java:739)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$26.2037588672.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
TRACE 303428:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:146)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.access$100(ConstantLoadOptimization.java:96)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:85)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:73)
TRACE 303462:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
TRACE 303477:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
TRACE 303527:
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:639)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
TRACE 303610:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
TRACE 303617:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303655:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 303697:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase$$Lambda$14.216387660.accept(<Unknown Source>:Unknown line)
	java.lang.Iterable.forEach(Iterable.java:75)
TRACE 303741:
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:215)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:165)
TRACE 303837:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 303872:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>(PartialEscapeClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.<init>(PEReadEliminationClosure.java:93)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.createEffectsClosure(PartialEscapePhase.java:95)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:93)
TRACE 303884:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 303986:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:441)
TRACE 304124:
	org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd(GraphDecoder.java:956)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:709)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 304191:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
TRACE 304203:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:460)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 304232:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 304327:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1066)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 304374:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:85)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots(LSStackSlotAllocator.java:417)
TRACE 304380:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:539)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:698)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
TRACE 304759:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 300158:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300814:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 300832:
	sun.reflect.ConstantPool.getUTF8At0(ConstantPool.java:Unknown line)
	sun.reflect.ConstantPool.getUTF8At(ConstantPool.java:53)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:279)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 300844:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 300970:
	org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions(ATNState.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300984:
	java.util.HashMap.putVal(HashMap.java:629)
	java.util.HashMap.put(HashMap.java:612)
	org.antlr.v4.runtime.misc.DoubleKeyMap.put(DoubleKeyMap.java:31)
	org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons(PredictionContext.java:234)
TRACE 300990:
	org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons(PredictionContext.java:240)
	org.antlr.v4.runtime.atn.PredictionContext.merge(PredictionContext.java:155)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
TRACE 301105:
	java.util.HashMap.resize(HashMap.java:735)
	java.util.HashMap.putVal(HashMap.java:663)
	java.util.HashMap.put(HashMap.java:612)
	org.antlr.v4.runtime.misc.DoubleKeyMap.put(DoubleKeyMap.java:26)
TRACE 301174:
	com.oracle.truffle.api.nodes.Node.adoptAndCountHelper(Node.java:290)
	com.oracle.truffle.api.nodes.NodeUtil.adoptChildrenAndCountHelper(NodeUtil.java:320)
	com.oracle.truffle.api.nodes.Node.adoptAndCountHelper(Node.java:293)
	com.oracle.truffle.api.nodes.NodeUtil.adoptChildrenAndCountHelper(NodeUtil.java:332)
TRACE 301399:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301441:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:184)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 301471:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301686:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301700:
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:198)
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:210)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:62)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:47)
TRACE 301710:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.core.common.type.TypeReference.filterInterfaceTypesOut(TypeReference.java:145)
	org.graalvm.compiler.core.common.type.TypeReference.create(TypeReference.java:93)
TRACE 301719:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:227)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 301780:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.isConstructor(HotSpotResolvedJavaMethodImpl.java:374)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:450)
TRACE 301785:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:285)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 301821:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:569)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:564)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 301904:
	java.util.TreeMap.getEntry(TreeMap.java:359)
	java.util.TreeMap.get(TreeMap.java:278)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackage.lookupByName(RBuiltinPackage.java:126)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackages.lookupBuiltinDescriptor(RBuiltinPackages.java:192)
TRACE 301946:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.Node.clone(Node.java:1062)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 301958:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:72)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1161)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302012:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RIntVectorDataLibraryGen$UncachedDispatch.isWriteable(RIntVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RIntVector.isShareable(RIntVector.java:100)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.isShareable(RSharingAttributeStorage.java:134)
TRACE 302023:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302086:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 302148:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302150:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxLocals(ResolvedJavaMethodBytecode.java:79)
TRACE 302163:
	org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget.isValid(HotSpotOptimizedCallTarget.java:95)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.interpreterCall(OptimizedCallTarget.java:423)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:416)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
TRACE 302209:
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302247:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode.castArg(RBuiltinNode.java:128)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
TRACE 302259:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranchMemory(AMD64LIRGenerator.java:386)
TRACE 302313:
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 302386:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:419)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
TRACE 302412:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:129)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 302440:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:284)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302492:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:219)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 302497:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:908)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
TRACE 302551:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:451)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 302582:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData(RedundantMoveElimination.java:202)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:147)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 302606:
	org.graalvm.compiler.graph.Edges.initializeList(Edges.java:221)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1298)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
TRACE 302622:
	org.graalvm.compiler.nodes.ValueNode.updateStamp(ValueNode.java:84)
	org.graalvm.compiler.nodes.PiNode.inferStamp(PiNode.java:168)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
TRACE 302623:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:727)
TRACE 302632:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:214)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 302682:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:341)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302783:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl$FieldInfo.getName(HotSpotResolvedObjectTypeImpl.java:683)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getName(HotSpotResolvedJavaFieldImpl.java:124)
TRACE 302784:
	java.lang.ClassValue.getFromBackup(ClassValue.java:206)
	java.lang.ClassValue.get(ClassValue.java:115)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:490)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
TRACE 302858:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getArrayDimensions(GraalTruffleRuntime.java:316)
TRACE 302882:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors(ReentrantBlockIterator.java:189)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:157)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:94)
TRACE 302933:
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1397)
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1185)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:677)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 302948:
	org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness(LocalLiveness.java:331)
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:103)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1017)
TRACE 303005:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:788)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:807)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:912)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 303015:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:147)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:94)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303084:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:303)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:212)
TRACE 303091:
	org.graalvm.compiler.lir.util.IndexedValueMap.forEach(IndexedValueMap.java:130)
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:94)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
TRACE 303092:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval(FixPointIntervalBuilder.java:177)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:141)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303106:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 303108:
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
TRACE 303115:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getTagAt(HotSpotConstantPool.java:304)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupConstant(HotSpotConstantPool.java:514)
	org.graalvm.compiler.java.BytecodeParser.lookupConstant(BytecodeParser.java:4325)
TRACE 303139:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:735)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:718)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 303174:
	com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:73)
	com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromFullPromise(PromiseHelperNode.java:231)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluateImpl(PromiseHelperNode.java:211)
TRACE 303221:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303222:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:242)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303233:
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:151)
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:139)
	org.graalvm.compiler.nodes.calc.IsNullNode.canonicalized(IsNullNode.java:113)
	org.graalvm.compiler.nodes.calc.IsNullNode.canonical(IsNullNode.java:106)
TRACE 303235:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
TRACE 303333:
	com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute(PromiseHelperNodeFactory.java:52)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromEagerPromise(PromiseHelperNode.java:285)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluateImpl(PromiseHelperNode.java:213)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.visibleEvaluate(PromiseHelperNode.java:185)
TRACE 303364:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.util.IndexedValueMap.visitEach(IndexedValueMap.java:140)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:113)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303416:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:393)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303440:
	java.util.BitSet.clone(BitSet.java:1102)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:364)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303450:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 303454:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.eliminateMoves(RedundantMoveElimination.java:366)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:163)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303480:
	org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind(PEGraphDecoder.java:632)
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:179)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:903)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
TRACE 303504:
	org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin(AbstractBeginNode.java:65)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1038)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303506:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 303563:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303641:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:187)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 303712:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 303795:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:380)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303840:
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.Phase.apply(Phase.java:42)
	org.graalvm.compiler.phases.Phase.apply(Phase.java:38)
TRACE 303854:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 304016:
	java.util.ArrayDeque.poll(ArrayDeque.java:466)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1381)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
TRACE 304021:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 304255:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 304298:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 304340:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
TRACE 304352:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.trimClone(LinearScanLifetimeAnalysisPhase.java:408)
TRACE 304373:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:204)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:165)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:239)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
TRACE 304427:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:143)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 304601:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:294)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 304664:
	org.graalvm.compiler.graph.Graph.grow(Graph.java:1073)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 300309:
	jdk.vm.ci.hotspot.CompilerToVM.lookupClass(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.createClass(HotSpotJVMCIRuntime.java:472)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$1.computeValue(HotSpotJVMCIRuntime.java:482)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$1.computeValue(HotSpotJVMCIRuntime.java:479)
TRACE 300697:
	java.lang.ClassLoader.findLoadedClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1032)
	java.lang.ClassLoader.loadClass(ClassLoader.java:401)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 300847:
	java.lang.Class.getDeclaredFields0(Class.java:Unknown line)
	java.lang.Class.privateGetDeclaredFields(Class.java:2583)
	java.lang.Class.getDeclaredFields(Class.java:1916)
	com.oracle.truffle.api.nodes.NodeClassImpl.collectInstanceFields(NodeClassImpl.java:107)
TRACE 301309:
	java.text.Collator.getStrength(Collator.java:347)
	java.text.CollationElementIterator.strengthOrder(CollationElementIterator.java:393)
	java.text.CollationElementIterator.next(CollationElementIterator.java:261)
	java.text.RuleBasedCollator.compare(RuleBasedCollator.java:404)
TRACE 301343:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.RCompression.gzipUncompress(RCompression.java:155)
	com.oracle.truffle.r.runtime.RCompression.uncompress(RCompression.java:112)
	com.oracle.truffle.r.nodes.builtin.base.HiddenInternalFunctions$LazyLoadDBFetch.lazyLoadDBFetchInternal(HiddenInternalFunctions.java:286)
TRACE 301345:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeFunctionFrameDescriptor(FrameSlotChangeMonitor.java:945)
TRACE 301368:
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
TRACE 301371:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ROptions$ContextStateImpl.updateDotOptions(ROptions.java:139)
	com.oracle.truffle.r.runtime.ROptions$ContextStateImpl.setValue(ROptions.java:111)
TRACE 301401:
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
TRACE 301406:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 301526:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
TRACE 301682:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
TRACE 301683:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCodeSize(HotSpotResolvedJavaMethodImpl.java:263)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCode(HotSpotResolvedJavaMethodImpl.java:251)
TRACE 301818:
	java.lang.Object.getClass(Object.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getLength(HotSpotJDKReflection.java:239)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayLength(HotSpotConstantReflectionProvider.java:80)
	org.graalvm.compiler.nodes.ConstantNode.findLength(ConstantNode.java:569)
TRACE 301835:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 301848:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 301962:
	jdk.vm.ci.hotspot.CompilerToVM.asReflectionField(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getField(HotSpotJDKReflection.java:471)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getFieldAnnotations(HotSpotJDKReflection.java:155)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:197)
TRACE 302022:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:203)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302131:
	com.oracle.truffle.r.nodes.builtin.base.IsTypeFunctionsFactory$IsIntegerNodeGen.execute(IsTypeFunctionsFactory.java:849)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302168:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:125)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:80)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 302219:
	org.graalvm.compiler.nodes.util.GraphUtil.markUsages(GraphUtil.java:230)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:127)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:742)
TRACE 302224:
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:62)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302254:
	com.oracle.truffle.r.nodes.function.PostProcessArgumentsNode.execute(PostProcessArgumentsNode.java:83)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:338)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 302262:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302280:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase.run(MarkBasePointersPhase.java:50)
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase.run(MarkBasePointersPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302306:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:186)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302326:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forcePromisesUnrolled(RCallNode.java:1126)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forcePromises(RCallNode.java:1116)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises(RCallNode.java:1073)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302330:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall(SetVisibilityNode.java:84)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:66)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302338:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getArithmeticOp(BinaryArithmeticNode.java:80)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.foldStamp(BinaryArithmeticNode.java:131)
	org.graalvm.compiler.nodes.calc.BinaryNode.inferStamp(BinaryNode.java:79)
TRACE 302357:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
TRACE 302374:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302378:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1321)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:981)
	org.graalvm.compiler.nodes.StructuredGraph.removeFixed(StructuredGraph.java:689)
TRACE 302421:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302536:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.prototypeMarkWord(HotSpotResolvedObjectTypeImpl.java:895)
	org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets$Templates.lower(HotSpotAllocationSnippets.java:662)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:313)
TRACE 302559:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranch(AMD64LIRGenerator.java:328)
TRACE 302640:
	java.util.TimSort.binarySort(TimSort.java:296)
	java.util.TimSort.sort(TimSort.java:221)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 302746:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
TRACE 302857:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:392)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302893:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302910:
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:119)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:102)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase.run(FrameStateAssignmentPhase.java:127)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302956:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:67)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 302965:
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 302970:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 302972:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302973:
	java.util.TimSort.binarySort(TimSort.java:296)
	java.util.TimSort.sort(TimSort.java:239)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 302981:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:234)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
TRACE 302993:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeStore(PEReadEliminationClosure.java:215)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:122)
TRACE 302995:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:394)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 303014:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:224)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 303104:
	jdk.vm.ci.hotspot.CompilerToVM.getHostClass(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getHostClass(HotSpotResolvedObjectTypeImpl.java:424)
	org.graalvm.compiler.java.BytecodeParser.emitCheckForInvokeSuperSpecial(BytecodeParser.java:2011)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1893)
TRACE 303137:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:191)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303251:
	org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph(GraphDecoder.java:1534)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:145)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 303263:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$CollectVirtualObjectsClosure.apply(PartialEscapeClosure.java:155)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$CollectVirtualObjectsClosure.apply(PartialEscapeClosure.java:133)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
TRACE 303292:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:76)
	com.oracle.truffle.r.runtime.data.model.RAbstractAtomicVector.<init>(RAbstractAtomicVector.java:42)
TRACE 303326:
	jdk.vm.ci.hotspot.CompilerToVM.isMature(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotMethodData.isProfileMature(HotSpotMethodData.java:319)
	jdk.vm.ci.hotspot.HotSpotProfilingInfo.<init>(HotSpotProfilingInfo.java:50)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getProfilingInfo(HotSpotResolvedJavaMethodImpl.java:490)
TRACE 303351:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 303362:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:139)
TRACE 303374:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:246)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303379:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:46)
	org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46)
	org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:32)
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:69)
TRACE 303381:
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:908)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
	org.graalvm.compiler.replacements.SnippetTemplate.inlineSnippet(SnippetTemplate.java:1547)
TRACE 303382:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:631)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.doCachedAssumption(PromiseHelperNode.java:528)
TRACE 303417:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 303441:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	com.oracle.truffle.api.frame.FrameDescriptor.findFrameSlot(FrameDescriptor.java:206)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.findOrAddFrameSlot(FrameSlotChangeMonitor.java:768)
TRACE 303472:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.replacements.PEGraphDecoder.deleteInvoke(PEGraphDecoder.java:1146)
TRACE 303473:
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase$1.visit(SSALinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.ssa.SSAUtil.forEachPhiValuePair(SSAUtil.java:103)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:96)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
TRACE 303476:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:205)
TRACE 303511:
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:219)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
	org.graalvm.compiler.loop.LoopEx.isOutsideLoop(LoopEx.java:127)
TRACE 303521:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized(PartialEscapeClosure.java:446)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeWithCommit(PartialEscapeBlockState.java:255)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeBefore(PartialEscapeBlockState.java:198)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.ensureMaterialized(PartialEscapeClosure.java:435)
TRACE 303529:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303558:
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:70)
	org.graalvm.compiler.phases.graph.FixedNodeRelativeFrequencyCache.findBegin(FixedNodeRelativeFrequencyCache.java:146)
	org.graalvm.compiler.phases.graph.FixedNodeRelativeFrequencyCache.applyAsDouble(FixedNodeRelativeFrequencyCache.java:92)
	org.graalvm.compiler.phases.graph.FixedNodeRelativeFrequencyCache.applyAsDouble(FixedNodeRelativeFrequencyCache.java:50)
TRACE 303565:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:382)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 303576:
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:132)
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:59)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303592:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:833)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303593:
	java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:946)
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:292)
	com.oracle.truffle.api.library.DynamicDispatchLibraryGen$UncachedDispatch.dispatch(DynamicDispatchLibrary.java:407)
	com.oracle.truffle.api.library.LibraryFactory.dispatch(LibraryFactory.java:396)
TRACE 303602:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.access$100(FixPointIntervalBuilder.java:184)
TRACE 303611:
	com.oracle.truffle.api.object.DynamicObject.setShape(DynamicObject.java:154)
	com.oracle.truffle.api.object.Layout$Access.setShape(Layout.java:265)
	com.oracle.truffle.object.DynamicObjectImpl.setShapeImpl(DynamicObjectImpl.java:78)
	com.oracle.truffle.object.DynamicObjectImpl.<init>(DynamicObjectImpl.java:59)
TRACE 303615:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewStamp(ConditionalEliminationPhase.java:851)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:641)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 303622:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genNewInstance(BytecodeParser.java:4505)
TRACE 303623:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 303646:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:735)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:718)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 303702:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:236)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303714:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toJavaValue(DebugInfoBuilder.java:346)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
TRACE 303737:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303743:
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:136)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:110)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.allocateStackSlots(LSStackSlotAllocator.java:105)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.run(LSStackSlotAllocator.java:97)
TRACE 303789:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1047)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303829:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303858:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.visibleExecute(RCallSpecialNode.java:393)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
	com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:73)
	com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
TRACE 303865:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303869:
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 303896:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.graph.Node.replaceAtPredecessor(Node.java:911)
TRACE 303909:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:172)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:235)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
TRACE 303924:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure(ParserATNSimulator.java:1448)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet(ParserATNSimulator.java:856)
TRACE 303941:
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:694)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
	com.oracle.truffle.r.parser.RParser.basic_expr(RParser.java:2861)
TRACE 303978:
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:62)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303983:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 303985:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny(LinearScanWalker.java:185)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:709)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303989:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi(SchedulePhase.java:918)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:945)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 303993:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.nodes.BeginNode.simplify(BeginNode.java:72)
TRACE 304017:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode(GraphDecoder.java:1390)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
TRACE 304201:
	org.graalvm.compiler.core.amd64.AMD64CompressAddressLowering.improve(AMD64CompressAddressLowering.java:52)
	org.graalvm.compiler.core.amd64.AMD64AddressLowering.lower(AMD64AddressLowering.java:54)
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:64)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304214:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd(FixReadsPhase.java:369)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:281)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 304249:
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd(EdgeMoveOptimizer.java:170)
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.access$000(EdgeMoveOptimizer.java:78)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:70)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:57)
TRACE 304264:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.PhiNode.addInput(PhiNode.java:158)
TRACE 304301:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 304311:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:790)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 304320:
	org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter(FilteredNodeIterable.java:58)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:143)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:261)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
TRACE 304331:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
TRACE 304333:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 304346:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304382:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
TRACE 304399:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:205)
TRACE 304453:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:399)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 304454:
	org.graalvm.compiler.virtual.phases.ea.ReadEliminationClosure.processNode(ReadEliminationClosure.java:78)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
TRACE 304516:
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.access$100(FixPointIntervalBuilder.java:184)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:131)
TRACE 304598:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix(JavaUpCallsRFFIImpl.java:495)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCall.execute(Rf_allocMatrixCall.java:70)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_allocMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 304638:
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:303)
TRACE 304650:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 304652:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 304731:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ReassociateInvariantPhase.run(ReassociateInvariantPhase.java:49)
TRACE 304887:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.isWriteable(RDoubleVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RDoubleVector.isMaterialized(RDoubleVector.java:111)
	com.oracle.truffle.r.nodes.attributes.CopyAttributesNode.containsMetadata(CopyAttributesNode.java:72)
TRACE 304897:
	com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add(Collections.java:65)
	com.oracle.truffle.r.nodes.builtin.base.Unique.doUniqueCachedString(Unique.java:106)
	com.oracle.truffle.r.nodes.builtin.base.UniqueNodeGen.execute(UniqueNodeGen.java:59)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 304988:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:150)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:141)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.copyIntNativeData(NativeDataAccess.java:648)
TRACE 305004:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
CPU SAMPLES BEGIN (total = 34570) Sat Jun 27 22:47:51 2020
rank   self  accum   count trace method
   1 26.51% 26.51%    9165 301633 java.io.FileInputStream.open0
   2  3.26% 29.77%    1128 301994 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   3  2.96% 32.74%    1024 301755 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   4  2.34% 35.08%     810 302079 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   5  2.19% 37.27%     757 302037 jdk.vm.ci.hotspot.CompilerToVM.installCode
   6  1.66% 38.93%     573 304234 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
   7  1.57% 40.50%     543 304362 com.oracle.truffle.api.library.LibraryFactory.getUncached
   8  1.53% 42.03%     529 304360 com.oracle.truffle.api.library.LibraryFactory.getUncached
   9  1.22% 43.25%     422 302298 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  10  1.15% 44.40%     398 301895 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  11  1.14% 45.54%     393 302002 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  12  1.00% 46.54%     347 304642 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  13  1.00% 47.54%     346 301684 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
  14  0.97% 48.51%     334 304235 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  15  0.95% 49.46%     330 301662 java.lang.Throwable.fillInStackTrace
  16  0.91% 50.38%     316 301635 java.lang.Throwable.fillInStackTrace
  17  0.74% 51.11%     255 304901 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  18  0.62% 51.73%     213 304238 com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand
  19  0.60% 52.33%     208 301348 sun.nio.fs.UnixNativeDispatcher.access0
  20  0.60% 52.93%     208 304648 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  21  0.55% 53.48%     189 300069 java.lang.ClassLoader.defineClass1
  22  0.53% 54.01%     184 302016 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  23  0.53% 54.54%     183 304599 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  24  0.53% 55.07%     182 301939 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  25  0.52% 55.59%     179 301833 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  26  0.51% 56.10%     177 302875 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  27  0.51% 56.61%     176 302346 org.graalvm.collections.EconomicMapImpl.findLinear
  28  0.45% 57.06%     155 302008 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  29  0.41% 57.47%     143 301016 java.lang.String.intern
  30  0.36% 57.82%     123 304364 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt
  31  0.35% 58.18%     122 301185 java.lang.String.intern
  32  0.35% 58.53%     121 302873 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  33  0.35% 58.87%     120 301912 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  34  0.35% 59.22%     120 304359 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt
  35  0.33% 59.55%     114 301827 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  36  0.32% 59.87%     109 300810 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  37  0.31% 60.18%     108 301732 java.lang.System.identityHashCode
  38  0.29% 60.47%     101 304651 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  39  0.28% 60.75%      98 303211 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  40  0.28% 61.03%      96 301961 com.oracle.truffle.api.TruffleFile.checkAccess
  41  0.27% 61.30%      92 302415 org.graalvm.collections.EconomicMapImpl.getHashIndex
  42  0.26% 61.56%      89 304367 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  43  0.25% 61.81%      88 301658 sun.nio.fs.UnixNativeDispatcher.access
  44  0.25% 62.07%      88 302217 org.graalvm.collections.EconomicMapImpl.getHashIndex
  45  0.24% 62.30%      82 302420 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  46  0.23% 62.54%      81 304618 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  47  0.23% 62.77%      79 304838 com.oracle.truffle.r.runtime.data.NativeDataAccess.getData
  48  0.22% 62.99%      77 300992 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  49  0.22% 63.21%      77 302563 org.graalvm.compiler.lir.ValueConsumer.visitValue
  50  0.20% 63.41%      70 301512 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
  51  0.20% 63.61%      69 301847 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  52  0.20% 63.81%      69 302509 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  53  0.20% 64.01%      68 301216 sun.nio.fs.UnixNativeDispatcher.realpath0
  54  0.19% 64.20%      67 304418 sun.misc.Unsafe.copyMemory
  55  0.19% 64.39%      66 303386 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
  56  0.18% 64.57%      61 304970 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
  57  0.17% 64.74%      60 301871 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  58  0.17% 64.92%      60 302471 org.graalvm.compiler.graph.Graph.findDuplicate
  59  0.17% 65.09%      59 304421 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
  60  0.16% 65.25%      57 300997 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
  61  0.16% 65.42%      56 302659 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  62  0.16% 65.58%      56 302734 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  63  0.16% 65.74%      55 302684 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  64  0.16% 65.90%      55 303214 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
  65  0.15% 66.05%      53 302004 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  66  0.15% 66.20%      52 300969 java.lang.System.identityHashCode
  67  0.15% 66.35%      51 302713 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  68  0.14% 66.49%      50 304832 com.oracle.truffle.r.runtime.data.RDoubleVector.getLength
  69  0.14% 66.63%      49 301815 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  70  0.14% 66.77%      48 301722 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  71  0.14% 66.91%      48 304363 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  72  0.14% 67.05%      47 304295 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  73  0.13% 67.18%      46 302482 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  74  0.13% 67.31%      46 304329 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  75  0.13% 67.45%      46 304643 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
  76  0.13% 67.58%      46 304795 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
  77  0.13% 67.71%      44 302061 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  78  0.13% 67.83%      44 302271 java.lang.Object.hashCode
  79  0.12% 67.96%      43 302026 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  80  0.12% 68.08%      43 302231 org.graalvm.compiler.graph.NodeClass.deepEquals0
  81  0.12% 68.21%      43 303088 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  82  0.12% 68.33%      42 303074 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  83  0.12% 68.45%      41 301767 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  84  0.12% 68.57%      41 301880 java.lang.System.identityHashCode
  85  0.12% 68.68%      41 302356 java.lang.Object.hashCode
  86  0.12% 68.80%      40 304621 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
  87  0.11% 68.91%      39 301857 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  88  0.11% 69.03%      39 302255 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  89  0.11% 69.14%      39 302349 org.graalvm.collections.EconomicMapImpl.find
  90  0.11% 69.25%      39 302879 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  91  0.11% 69.36%      39 304423 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
  92  0.11% 69.47%      38 301078 java.lang.String.intern
  93  0.11% 69.58%      38 302462 org.graalvm.collections.EconomicMapImpl.getHashIndex
  94  0.11% 69.69%      37 302176 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  95  0.11% 69.80%      37 302215 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  96  0.10% 69.90%      36 300979 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
  97  0.10% 70.00%      35 300987 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
  98  0.10% 70.10%      35 301733 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
  99  0.10% 70.21%      35 302806 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 100  0.10% 70.30%      34 300973 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 101  0.10% 70.40%      34 302411 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 102  0.10% 70.50%      34 303384 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 103  0.10% 70.60%      34 304230 com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble
 104  0.10% 70.69%      33 300983 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 105  0.10% 70.79%      33 301788 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 106  0.10% 70.89%      33 302776 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
 107  0.10% 70.98%      33 304976 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
 108  0.09% 71.07%      32 302738 org.graalvm.compiler.graph.NodeClass.applyEdges
 109  0.09% 71.17%      32 304272 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
 110  0.09% 71.26%      32 304296 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 111  0.09% 71.35%      31 301339 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 112  0.09% 71.44%      31 302184 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 113  0.09% 71.53%      31 302689 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 114  0.09% 71.61%      30 301515 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 115  0.09% 71.70%      30 302053 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 116  0.09% 71.79%      30 302384 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 117  0.09% 71.87%      30 302876 org.graalvm.compiler.nodes.LogicNegationNode.implies
 118  0.09% 71.96%      30 304971 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt
 119  0.08% 72.04%      28 301813 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 120  0.08% 72.12%      28 302193 org.graalvm.collections.EconomicMapImpl.getHashIndex
 121  0.08% 72.20%      28 302464 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 122  0.08% 72.29%      28 302706 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 123  0.08% 72.36%      27 301065 java.lang.String.intern
 124  0.08% 72.44%      27 301934 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 125  0.08% 72.52%      27 302621 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 126  0.08% 72.60%      27 302795 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 127  0.08% 72.68%      27 304649 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 128  0.08% 72.75%      26 301869 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
 129  0.08% 72.83%      26 302197 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 130  0.08% 72.90%      26 302362 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 131  0.08% 72.98%      26 304626 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 132  0.07% 73.05%      25 302705 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 133  0.07% 73.12%      25 302871 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 134  0.07% 73.19%      25 302919 org.graalvm.collections.EconomicMapImpl.getHashIndex
 135  0.07% 73.27%      25 304347 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 136  0.07% 73.34%      24 302611 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 137  0.07% 73.40%      24 303080 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval
 138  0.07% 73.47%      24 303191 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 139  0.07% 73.54%      24 303252 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 140  0.07% 73.61%      24 303556 org.graalvm.compiler.graph.NodeClass.applyEdges
 141  0.07% 73.68%      23 300289 java.util.zip.ZipFile.getEntry
 142  0.07% 73.75%      23 301687 sun.nio.fs.UnixException.rethrowAsIOException
 143  0.07% 73.81%      23 301874 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 144  0.07% 73.88%      23 302084 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 145  0.07% 73.95%      23 302250 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 146  0.07% 74.01%      23 302938 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 147  0.07% 74.08%      23 302961 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 148  0.06% 74.14%      22 300643 sun.misc.Unsafe.defineAnonymousClass
 149  0.06% 74.21%      22 301058 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
 150  0.06% 74.27%      22 301409 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 151  0.06% 74.33%      22 302015 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 152  0.06% 74.40%      22 302133 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 153  0.06% 74.46%      22 302264 org.graalvm.compiler.graph.NodeClass.dataEquals
 154  0.06% 74.52%      22 302779 org.graalvm.compiler.lir.ValueConsumer.visitValue
 155  0.06% 74.59%      22 302815 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode
 156  0.06% 74.65%      22 303582 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 157  0.06% 74.71%      21 301910 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 158  0.06% 74.77%      21 302547 org.graalvm.compiler.graph.NodeClass.applyHelper
 159  0.06% 74.83%      21 302693 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 160  0.06% 74.89%      21 302727 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 161  0.06% 74.96%      21 302853 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 162  0.06% 75.02%      21 302925 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 163  0.06% 75.08%      21 303135 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 164  0.06% 75.14%      21 304283 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 165  0.06% 75.20%      20 300815 java.lang.ClassLoader.loadClass
 166  0.06% 75.25%      20 301746 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 167  0.06% 75.31%      20 302253 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 168  0.06% 75.37%      20 302344 jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic
 169  0.06% 75.43%      20 302445 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 170  0.06% 75.48%      20 302489 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 171  0.06% 75.54%      20 302585 com.oracle.truffle.r.runtime.RSource.fromSrcfile
 172  0.06% 75.60%      20 303017 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 173  0.06% 75.66%      20 303460 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
 174  0.06% 75.72%      20 304231 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 175  0.05% 75.77%      19 301224 java.lang.String.intern
 176  0.05% 75.83%      19 302038 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 177  0.05% 75.88%      19 302408 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 178  0.05% 75.94%      19 302812 org.graalvm.compiler.core.common.Fields.copy
 179  0.05% 75.99%      19 303002 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 180  0.05% 76.05%      19 303013 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 181  0.05% 76.10%      19 303068 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 182  0.05% 76.15%      18 300857 java.lang.Throwable.fillInStackTrace
 183  0.05% 76.20%      18 301966 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 184  0.05% 76.26%      18 302292 com.oracle.truffle.r.runtime.nodes.RNode.voidExecute
 185  0.05% 76.31%      18 302425 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate
 186  0.05% 76.36%      18 302864 org.graalvm.compiler.graph.InputEdges.update
 187  0.05% 76.41%      18 303643 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 188  0.05% 76.47%      18 304623 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 189  0.05% 76.51%      17 300978 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 190  0.05% 76.56%      17 300981 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 191  0.05% 76.61%      17 301106 java.lang.String.intern
 192  0.05% 76.66%      17 301188 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 193  0.05% 76.71%      17 301893 com.oracle.truffle.r.runtime.data.RBaseObject.<init>
 194  0.05% 76.76%      17 302544 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 195  0.05% 76.81%      17 302626 org.graalvm.collections.EconomicMapImpl.add
 196  0.05% 76.86%      17 302903 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes
 197  0.05% 76.91%      17 303784 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 198  0.05% 76.95%      16 300261 java.lang.Class.forName0
 199  0.05% 77.00%      16 300901 java.lang.invoke.MethodHandleNatives.resolve
 200  0.05% 77.05%      16 301369 java.lang.Object.hashCode
 201  0.05% 77.09%      16 301739 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
 202  0.05% 77.14%      16 302347 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 203  0.05% 77.19%      16 302499 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 204  0.05% 77.23%      16 302571 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 205  0.05% 77.28%      16 302596 org.graalvm.compiler.graph.NodeWorkList.<init>
 206  0.05% 77.32%      16 303190 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 207  0.05% 77.37%      16 303345 org.graalvm.collections.EconomicMapImpl.find
 208  0.05% 77.42%      16 303439 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets
 209  0.05% 77.46%      16 303474 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 210  0.04% 77.51%      15 301092 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 211  0.04% 77.55%      15 301525 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call
 212  0.04% 77.59%      15 301832 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 213  0.04% 77.64%      15 301911 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 214  0.04% 77.68%      15 302136 org.graalvm.compiler.nodes.GraphEncoder.encode
 215  0.04% 77.72%      15 302414 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 216  0.04% 77.77%      15 302530 java.lang.String.intern
 217  0.04% 77.81%      15 302729 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 218  0.04% 77.85%      15 302796 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 219  0.04% 77.90%      15 302860 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
 220  0.04% 77.94%      15 302866 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 221  0.04% 77.98%      15 303069 org.graalvm.compiler.lir.ValueConsumer.visitValue
 222  0.04% 78.03%      15 303226 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 223  0.04% 78.07%      15 303452 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 224  0.04% 78.11%      14 300707 java.util.zip.ZipFile.read
 225  0.04% 78.15%      14 301336 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 226  0.04% 78.19%      14 301527 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 227  0.04% 78.23%      14 301745 java.lang.System.identityHashCode
 228  0.04% 78.27%      14 301822 sun.misc.Unsafe.getAddress
 229  0.04% 78.31%      14 302073 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope
 230  0.04% 78.35%      14 302373 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 231  0.04% 78.39%      14 302607 org.graalvm.compiler.graph.NodeInputList.update
 232  0.04% 78.44%      14 302680 org.graalvm.collections.EconomicMapImpl.findLinear
 233  0.04% 78.48%      14 302802 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 234  0.04% 78.52%      14 303019 org.graalvm.compiler.graph.NodeClass.applyEdges
 235  0.04% 78.56%      14 303451 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 236  0.04% 78.60%      14 304365 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 237  0.04% 78.63%      13 301010 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 238  0.04% 78.67%      13 302206 org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1
 239  0.04% 78.71%      13 302310 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 240  0.04% 78.75%      13 302679 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 241  0.04% 78.79%      13 302794 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 242  0.04% 78.82%      13 302819 org.graalvm.collections.EconomicMapImpl.compareKeys
 243  0.04% 78.86%      13 302964 org.graalvm.collections.EconomicMapImpl.compareKeys
 244  0.04% 78.90%      13 303485 org.graalvm.compiler.nodes.ValueNode.stamp
 245  0.04% 78.94%      13 303510 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 246  0.04% 78.97%      13 303574 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 247  0.04% 79.01%      13 304622 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 248  0.03% 79.05%      12 300991 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 249  0.03% 79.08%      12 301324 com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments
 250  0.03% 79.11%      12 301907 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare
 251  0.03% 79.15%      12 302218 jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue
 252  0.03% 79.18%      12 302315 com.oracle.truffle.r.runtime.RArguments.getCall
 253  0.03% 79.22%      12 302324 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2
 254  0.03% 79.25%      12 302376 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 255  0.03% 79.29%      12 302405 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 256  0.03% 79.32%      12 302574 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 257  0.03% 79.36%      12 302603 org.graalvm.collections.EconomicMapImpl.find
 258  0.03% 79.39%      12 302722 com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute
 259  0.03% 79.43%      12 302778 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 260  0.03% 79.46%      12 302977 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 261  0.03% 79.50%      12 303038 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 262  0.03% 79.53%      12 303062 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.isShareable
 263  0.03% 79.57%      12 303145 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 264  0.03% 79.60%      12 303151 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 265  0.03% 79.64%      12 303225 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval
 266  0.03% 79.67%      12 303298 org.graalvm.compiler.graph.Graph.findDuplicate
 267  0.03% 79.70%      12 303453 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 268  0.03% 79.74%      12 303534 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 269  0.03% 79.77%      12 304297 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 270  0.03% 79.81%      11 300853 java.util.zip.ZipFile.read
 271  0.03% 79.84%      11 300975 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 272  0.03% 79.87%      11 301453 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 273  0.03% 79.90%      11 301806 org.graalvm.compiler.nodes.GraphDecoder.decode
 274  0.03% 79.93%      11 301964 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 275  0.03% 79.97%      11 301971 java.lang.Class.isAssignableFrom
 276  0.03% 80.00%      11 302077 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute
 277  0.03% 80.03%      11 302119 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 278  0.03% 80.06%      11 302196 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 279  0.03% 80.09%      11 302216 java.lang.Class.isArray
 280  0.03% 80.12%      11 302396 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 281  0.03% 80.16%      11 302522 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 282  0.03% 80.19%      11 302533 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 283  0.03% 80.22%      11 302541 sun.nio.fs.UnixNativeDispatcher.access
 284  0.03% 80.25%      11 302592 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 285  0.03% 80.28%      11 302656 com.oracle.truffle.api.TruffleFile.checkAccess
 286  0.03% 80.32%      11 302939 org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>
 287  0.03% 80.35%      11 303046 com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest
 288  0.03% 80.38%      11 303072 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 289  0.03% 80.41%      11 303188 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 290  0.03% 80.44%      11 303302 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 291  0.03% 80.47%      11 303434 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 292  0.03% 80.51%      11 303513 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 293  0.03% 80.54%      11 304284 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 294  0.03% 80.57%      10 300799 java.util.zip.ZipFile.getEntry
 295  0.03% 80.60%      10 300971 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 296  0.03% 80.62%      10 301103 org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet
 297  0.03% 80.65%      10 301190 java.util.zip.InflaterInputStream.<init>
 298  0.03% 80.68%      10 301205 java.lang.Class.isArray
 299  0.03% 80.71%      10 301317 org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.isCallTargetCloningAllowed
 300  0.03% 80.74%      10 301322 java.lang.Class.getSuperclass
 301  0.03% 80.77%      10 301718 java.lang.Object.hashCode
 302  0.03% 80.80%      10 302149 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 303  0.03% 80.83%      10 302161 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 304  0.03% 80.86%      10 302189 org.graalvm.compiler.graph.NodeWorkList.addAll
 305  0.03% 80.89%      10 302204 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 306  0.03% 80.91%      10 302233 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 307  0.03% 80.94%      10 302267 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 308  0.03% 80.97%      10 302287 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 309  0.03% 81.00%      10 302305 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 310  0.03% 81.03%      10 302416 org.graalvm.collections.EconomicMapImpl.createHash
 311  0.03% 81.06%      10 302609 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 312  0.03% 81.09%      10 302725 org.graalvm.compiler.graph.NodeClass.applyEdges
 313  0.03% 81.12%      10 302791 org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit
 314  0.03% 81.15%      10 302985 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 315  0.03% 81.17%      10 302991 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 316  0.03% 81.20%      10 303083 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 317  0.03% 81.23%      10 303234 org.graalvm.compiler.nodes.GraphEncoder.prepare
 318  0.03% 81.26%      10 303262 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 319  0.03% 81.29%      10 303406 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 320  0.03% 81.32%      10 303612 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 321  0.03% 81.35%      10 303682 org.graalvm.compiler.core.match.MatchPattern.matchShape
 322  0.03% 81.38%      10 303706 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand
 323  0.03% 81.41%      10 304066 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 324  0.03% 81.43%      10 304368 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 325  0.03% 81.46%      10 304483 jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset
 326  0.03% 81.49%       9 300896 java.util.zip.ZipFile.getNextEntry
 327  0.03% 81.52%       9 300967 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 328  0.03% 81.54%       9 301681 sun.nio.fs.UnixException.rethrowAsIOException
 329  0.03% 81.57%       9 301752 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 330  0.03% 81.59%       9 301975 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs
 331  0.03% 81.62%       9 302104 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 332  0.03% 81.65%       9 302159 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 333  0.03% 81.67%       9 302341 org.graalvm.compiler.nodes.ValueNode.stamp
 334  0.03% 81.70%       9 302493 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 335  0.03% 81.72%       9 302519 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 336  0.03% 81.75%       9 302874 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 337  0.03% 81.78%       9 302992 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 338  0.03% 81.80%       9 303031 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 339  0.03% 81.83%       9 303066 org.graalvm.compiler.lir.ValueConsumer.visitValue
 340  0.03% 81.85%       9 303124 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 341  0.03% 81.88%       9 303161 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 342  0.03% 81.91%       9 303267 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 343  0.03% 81.93%       9 303271 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 344  0.03% 81.96%       9 303490 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 345  0.03% 81.98%       9 303566 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 346  0.03% 82.01%       9 304070 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 347  0.03% 82.04%       9 304279 org.graalvm.compiler.graph.NodeInputList.update
 348  0.02% 82.06%       8 300072 java.lang.ClassLoader.findBootstrapClass
 349  0.02% 82.08%       8 301157 sun.misc.Unsafe.copyMemory
 350  0.02% 82.11%       8 301529 com.oracle.truffle.api.object.Location.get
 351  0.02% 82.13%       8 301698 java.lang.Object.clone
 352  0.02% 82.15%       8 301882 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 353  0.02% 82.18%       8 302120 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 354  0.02% 82.20%       8 302122 com.oracle.truffle.r.runtime.data.RAttributable.<init>
 355  0.02% 82.22%       8 302242 org.graalvm.compiler.phases.common.FixReadsPhase.run
 356  0.02% 82.24%       8 302375 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 357  0.02% 82.27%       8 302461 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 358  0.02% 82.29%       8 302591 org.graalvm.compiler.nodes.GraphEncoder.encode
 359  0.02% 82.31%       8 302695 org.graalvm.compiler.core.LIRGenerationPhase.run
 360  0.02% 82.34%       8 302704 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 361  0.02% 82.36%       8 302755 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 362  0.02% 82.38%       8 302907 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 363  0.02% 82.41%       8 303000 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 364  0.02% 82.43%       8 303023 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 365  0.02% 82.45%       8 303061 org.graalvm.compiler.nodes.ValueNode.getStackKind
 366  0.02% 82.48%       8 303099 org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks
 367  0.02% 82.50%       8 303112 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 368  0.02% 82.52%       8 303159 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 369  0.02% 82.55%       8 303165 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 370  0.02% 82.57%       8 303255 jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeStaticallyBound
 371  0.02% 82.59%       8 303259 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 372  0.02% 82.61%       8 303396 org.graalvm.compiler.lir.ValueConsumer.visitValue
 373  0.02% 82.64%       8 303409 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 374  0.02% 82.66%       8 303424 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 375  0.02% 82.68%       8 303427 org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath
 376  0.02% 82.71%       8 303449 java.util.ArrayList.forEach
 377  0.02% 82.73%       8 303478 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 378  0.02% 82.75%       8 303668 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 379  0.02% 82.78%       8 303689 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 380  0.02% 82.80%       8 303730 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 381  0.02% 82.82%       8 303819 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 382  0.02% 82.85%       8 303821 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 383  0.02% 82.87%       8 303992 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 384  0.02% 82.89%       8 304221 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 385  0.02% 82.92%       8 304366 java.util.ArrayList.addAll
 386  0.02% 82.94%       8 304392 com.oracle.truffle.r.runtime.context.RContext.getInstance
 387  0.02% 82.96%       7 301109 org.antlr.v4.runtime.misc.FlexibleHashMap.get
 388  0.02% 82.98%       7 301652 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 389  0.02% 83.00%       7 301932 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode
 390  0.02% 83.02%       7 302334 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 391  0.02% 83.04%       7 302382 com.oracle.truffle.r.nodes.function.opt.UnShareObjectNodeGen.execute
 392  0.02% 83.06%       7 302402 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages
 393  0.02% 83.08%       7 302442 com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess.getStore
 394  0.02% 83.10%       7 302473 org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual
 395  0.02% 83.12%       7 302498 org.graalvm.compiler.core.LIRGenerationPhase.run
 396  0.02% 83.14%       7 302526 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 397  0.02% 83.16%       7 302598 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 398  0.02% 83.18%       7 302651 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 399  0.02% 83.20%       7 302658 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 400  0.02% 83.22%       7 302772 org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>
 401  0.02% 83.24%       7 302801 org.graalvm.collections.EconomicMapImpl.getHashIndex
 402  0.02% 83.26%       7 302809 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 403  0.02% 83.28%       7 302931 com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute
 404  0.02% 83.30%       7 302936 org.graalvm.compiler.graph.Node.replaceAtUsages
 405  0.02% 83.32%       7 302976 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 406  0.02% 83.34%       7 302978 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 407  0.02% 83.36%       7 302980 org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet
 408  0.02% 83.38%       7 302984 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit
 409  0.02% 83.40%       7 302989 org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply
 410  0.02% 83.42%       7 303011 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 411  0.02% 83.45%       7 303012 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 412  0.02% 83.47%       7 303035 org.graalvm.collections.EconomicMapImpl.put
 413  0.02% 83.49%       7 303043 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 414  0.02% 83.51%       7 303081 org.graalvm.compiler.options.NestedBooleanOptionKey.getValue
 415  0.02% 83.53%       7 303116 com.oracle.truffle.r.nodes.control.BreakNode.execute
 416  0.02% 83.55%       7 303210 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 417  0.02% 83.57%       7 303218 org.graalvm.compiler.lir.ValueConsumer.visitValue
 418  0.02% 83.59%       7 303276 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias
 419  0.02% 83.61%       7 303316 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 420  0.02% 83.63%       7 303318 com.oracle.truffle.api.library.LibraryFactory.getUncached
 421  0.02% 83.65%       7 303336 org.graalvm.compiler.graph.Graph.findDuplicate
 422  0.02% 83.67%       7 303338 org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode
 423  0.02% 83.69%       7 303344 org.graalvm.collections.EconomicMapImpl.findLinear
 424  0.02% 83.71%       7 303413 org.graalvm.collections.EconomicMapImpl.find
 425  0.02% 83.73%       7 303418 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 426  0.02% 83.75%       7 303445 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 427  0.02% 83.77%       7 303653 org.graalvm.compiler.nodes.spi.NodeWithState.states
 428  0.02% 83.79%       7 303736 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 429  0.02% 83.81%       7 303982 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 430  0.02% 83.83%       7 304153 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 431  0.02% 83.85%       7 304246 org.graalvm.compiler.lir.LIRFrameState.forEachState
 432  0.02% 83.87%       7 304282 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 433  0.02% 83.89%       7 304402 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt
 434  0.02% 83.91%       7 304998 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 435  0.02% 83.93%       6 300872 java.lang.ClassLoader.loadClass
 436  0.02% 83.95%       6 301302 sun.text.normalizer.NormalizerBase$NFDMode.normalize
 437  0.02% 83.96%       6 301356 com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive
 438  0.02% 83.98%       6 301416 java.lang.Object.clone
 439  0.02% 84.00%       6 301657 com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess
 440  0.02% 84.02%       6 301728 java.lang.Object.clone
 441  0.02% 84.03%       6 301758 java.lang.Object.clone
 442  0.02% 84.05%       6 301853 sun.misc.Unsafe.getAddress
 443  0.02% 84.07%       6 301861 sun.misc.Unsafe.getAddress
 444  0.02% 84.08%       6 302042 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 445  0.02% 84.10%       6 302043 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 446  0.02% 84.12%       6 302064 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 447  0.02% 84.14%       6 302115 java.lang.Object.clone
 448  0.02% 84.15%       6 302128 org.graalvm.compiler.lir.dfa.LocationMarker.build
 449  0.02% 84.17%       6 302154 java.lang.Object.clone
 450  0.02% 84.19%       6 302155 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 451  0.02% 84.21%       6 302190 com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch
 452  0.02% 84.22%       6 302295 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 453  0.02% 84.24%       6 302475 org.graalvm.compiler.nodes.spi.NodeWithState.states
 454  0.02% 84.26%       6 302495 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 455  0.02% 84.28%       6 302552 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 456  0.02% 84.29%       6 302666 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 457  0.02% 84.31%       6 302678 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks
 458  0.02% 84.33%       6 302681 sun.nio.fs.UnixFileSystemProvider.checkAccess
 459  0.02% 84.34%       6 302721 org.graalvm.compiler.core.common.type.AbstractObjectStamp.join
 460  0.02% 84.36%       6 302739 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 461  0.02% 84.38%       6 302782 org.graalvm.compiler.nodes.ConstantNode.forInt
 462  0.02% 84.40%       6 302788 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 463  0.02% 84.41%       6 302804 java.lang.Object.clone
 464  0.02% 84.43%       6 302923 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 465  0.02% 84.45%       6 302988 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 466  0.02% 84.47%       6 303044 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 467  0.02% 84.48%       6 303086 org.graalvm.compiler.lir.ValueConsumer.visitValue
 468  0.02% 84.50%       6 303127 org.graalvm.compiler.nodes.FrameState.<init>
 469  0.02% 84.52%       6 303138 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 470  0.02% 84.54%       6 303141 org.graalvm.compiler.nodes.LogicNegationNode.implies
 471  0.02% 84.55%       6 303178 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute
 472  0.02% 84.57%       6 303189 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 473  0.02% 84.59%       6 303201 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode
 474  0.02% 84.61%       6 303228 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 475  0.02% 84.62%       6 303245 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 476  0.02% 84.64%       6 303266 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 477  0.02% 84.66%       6 303287 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 478  0.02% 84.67%       6 303299 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
 479  0.02% 84.69%       6 303310 org.graalvm.compiler.nodes.IfNode.simplify
 480  0.02% 84.71%       6 303320 com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue
 481  0.02% 84.73%       6 303360 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 482  0.02% 84.74%       6 303366 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$8
 483  0.02% 84.76%       6 303428 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply
 484  0.02% 84.78%       6 303462 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 485  0.02% 84.80%       6 303477 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 486  0.02% 84.81%       6 303527 org.graalvm.compiler.nodes.FrameState.applyToVirtual
 487  0.02% 84.83%       6 303610 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 488  0.02% 84.85%       6 303617 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 489  0.02% 84.87%       6 303655 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 490  0.02% 84.88%       6 303697 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 491  0.02% 84.90%       6 303741 org.graalvm.compiler.lir.LIRInstructionClass.forEachUse
 492  0.02% 84.92%       6 303837 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 493  0.02% 84.93%       6 303872 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>
 494  0.02% 84.95%       6 303884 org.graalvm.collections.EconomicMapImpl.add
 495  0.02% 84.97%       6 303986 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 496  0.02% 84.99%       6 304124 org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd
 497  0.02% 85.00%       6 304191 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 498  0.02% 85.02%       6 304203 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 499  0.02% 85.04%       6 304232 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 500  0.02% 85.06%       6 304327 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 501  0.02% 85.07%       6 304374 org.graalvm.compiler.lir.LIRFrameState.forEachState
 502  0.02% 85.09%       6 304380 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling
 503  0.02% 85.11%       6 304759 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 504  0.01% 85.12%       5 300158 java.lang.ClassLoader.findBootstrapClass
 505  0.01% 85.14%       5 300814 java.security.AccessController.doPrivileged
 506  0.01% 85.15%       5 300832 sun.reflect.ConstantPool.getUTF8At0
 507  0.01% 85.17%       5 300844 java.security.AccessController.doPrivileged
 508  0.01% 85.18%       5 300970 org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions
 509  0.01% 85.20%       5 300984 java.util.HashMap.putVal
 510  0.01% 85.21%       5 300990 org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons
 511  0.01% 85.22%       5 301105 java.util.HashMap.resize
 512  0.01% 85.24%       5 301174 com.oracle.truffle.api.nodes.Node.adoptAndCountHelper
 513  0.01% 85.25%       5 301399 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 514  0.01% 85.27%       5 301441 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 515  0.01% 85.28%       5 301471 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call
 516  0.01% 85.30%       5 301686 java.lang.Class.isPrimitive
 517  0.01% 85.31%       5 301700 org.graalvm.compiler.nodes.ConstantNode.forConstant
 518  0.01% 85.33%       5 301710 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 519  0.01% 85.34%       5 301719 org.graalvm.compiler.nodes.GraphEncoder.encode
 520  0.01% 85.35%       5 301780 sun.misc.Unsafe.getAddress
 521  0.01% 85.37%       5 301785 org.graalvm.compiler.nodes.IfNode.simplify
 522  0.01% 85.38%       5 301821 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 523  0.01% 85.40%       5 301904 java.util.TreeMap.getEntry
 524  0.01% 85.41%       5 301946 sun.misc.Unsafe.allocateInstance
 525  0.01% 85.43%       5 301958 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 526  0.01% 85.44%       5 302012 com.oracle.truffle.api.library.LibraryFactory.getUncached
 527  0.01% 85.46%       5 302023 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 528  0.01% 85.47%       5 302086 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 529  0.01% 85.48%       5 302148 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 530  0.01% 85.50%       5 302150 sun.misc.Unsafe.getAddress
 531  0.01% 85.51%       5 302163 org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget.isValid
 532  0.01% 85.53%       5 302209 org.graalvm.compiler.graph.Graph.register
 533  0.01% 85.54%       5 302247 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 534  0.01% 85.56%       5 302259 java.lang.Object.clone
 535  0.01% 85.57%       5 302313 org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid
 536  0.01% 85.59%       5 302386 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 537  0.01% 85.60%       5 302412 org.graalvm.compiler.nodes.ValueNode.stamp
 538  0.01% 85.61%       5 302440 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 539  0.01% 85.63%       5 302492 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 540  0.01% 85.64%       5 302497 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 541  0.01% 85.66%       5 302551 org.graalvm.collections.EconomicMapImpl.find
 542  0.01% 85.67%       5 302582 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
 543  0.01% 85.69%       5 302606 org.graalvm.compiler.graph.Edges.initializeList
 544  0.01% 85.70%       5 302622 org.graalvm.compiler.nodes.ValueNode.updateStamp
 545  0.01% 85.72%       5 302623 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 546  0.01% 85.73%       5 302632 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 547  0.01% 85.74%       5 302682 org.graalvm.compiler.nodes.IfNode.simplify
 548  0.01% 85.76%       5 302783 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 549  0.01% 85.77%       5 302784 java.lang.ClassValue.getFromBackup
 550  0.01% 85.79%       5 302858 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 551  0.01% 85.80%       5 302882 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors
 552  0.01% 85.82%       5 302933 org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder
 553  0.01% 85.83%       5 302948 org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness
 554  0.01% 85.85%       5 303005 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 555  0.01% 85.86%       5 303015 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply
 556  0.01% 85.88%       5 303084 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 557  0.01% 85.89%       5 303091 org.graalvm.compiler.lir.util.IndexedValueMap.forEach
 558  0.01% 85.90%       5 303092 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval
 559  0.01% 85.92%       5 303106 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 560  0.01% 85.93%       5 303108 com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute
 561  0.01% 85.95%       5 303115 sun.misc.Unsafe.getAddress
 562  0.01% 85.96%       5 303139 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 563  0.01% 85.98%       5 303174 com.oracle.truffle.r.nodes.InlineCacheNode.doCached
 564  0.01% 85.99%       5 303221 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 565  0.01% 86.01%       5 303222 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 566  0.01% 86.02%       5 303233 org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull
 567  0.01% 86.03%       5 303235 org.graalvm.collections.EconomicMapImpl.find
 568  0.01% 86.05%       5 303333 com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute
 569  0.01% 86.06%       5 303364 org.graalvm.compiler.lir.ValueConsumer.visitValue
 570  0.01% 86.08%       5 303416 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 571  0.01% 86.09%       5 303440 java.util.BitSet.clone
 572  0.01% 86.11%       5 303450 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test
 573  0.01% 86.12%       5 303454 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 574  0.01% 86.14%       5 303480 org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind
 575  0.01% 86.15%       5 303504 org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin
 576  0.01% 86.16%       5 303506 org.graalvm.compiler.nodes.GraphDecoder.decode
 577  0.01% 86.18%       5 303563 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 578  0.01% 86.19%       5 303641 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply
 579  0.01% 86.21%       5 303712 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 580  0.01% 86.22%       5 303795 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 581  0.01% 86.24%       5 303840 org.graalvm.compiler.phases.Phase.run
 582  0.01% 86.25%       5 303854 org.graalvm.compiler.nodes.LogicNode.implies
 583  0.01% 86.27%       5 304016 java.util.ArrayDeque.poll
 584  0.01% 86.28%       5 304021 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 585  0.01% 86.29%       5 304255 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 586  0.01% 86.31%       5 304298 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 587  0.01% 86.32%       5 304340 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 588  0.01% 86.34%       5 304352 java.util.Arrays.copyOf
 589  0.01% 86.35%       5 304373 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 590  0.01% 86.37%       5 304427 java.util.Objects.equals
 591  0.01% 86.38%       5 304601 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 592  0.01% 86.40%       5 304664 org.graalvm.compiler.graph.Graph.grow
 593  0.01% 86.41%       4 300309 jdk.vm.ci.hotspot.CompilerToVM.lookupClass
 594  0.01% 86.42%       4 300697 java.lang.ClassLoader.findLoadedClass0
 595  0.01% 86.43%       4 300847 java.lang.Class.getDeclaredFields0
 596  0.01% 86.44%       4 301309 java.text.Collator.getStrength
 597  0.01% 86.45%       4 301343 com.oracle.truffle.r.runtime.context.RContext.getInstance
 598  0.01% 86.47%       4 301345 java.lang.Object.hashCode
 599  0.01% 86.48%       4 301368 com.oracle.truffle.r.nodes.function.RCallNode.call
 600  0.01% 86.49%       4 301371 java.lang.String.intern
 601  0.01% 86.50%       4 301401 org.antlr.v4.runtime.atn.SingletonPredictionContext.equals
 602  0.01% 86.51%       4 301406 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 603  0.01% 86.52%       4 301526 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate
 604  0.01% 86.53%       4 301682 java.lang.Class.isPrimitive
 605  0.01% 86.55%       4 301683 sun.misc.Unsafe.getAddress
 606  0.01% 86.56%       4 301818 java.lang.Object.getClass
 607  0.01% 86.57%       4 301835 org.graalvm.compiler.nodes.GraphDecoder.decode
 608  0.01% 86.58%       4 301848 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 609  0.01% 86.59%       4 301962 jdk.vm.ci.hotspot.CompilerToVM.asReflectionField
 610  0.01% 86.60%       4 302022 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0
 611  0.01% 86.62%       4 302131 com.oracle.truffle.r.nodes.builtin.base.IsTypeFunctionsFactory$IsIntegerNodeGen.execute
 612  0.01% 86.63%       4 302168 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 613  0.01% 86.64%       4 302219 org.graalvm.compiler.nodes.util.GraphUtil.markUsages
 614  0.01% 86.65%       4 302224 org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run
 615  0.01% 86.66%       4 302254 com.oracle.truffle.r.nodes.function.PostProcessArgumentsNode.execute
 616  0.01% 86.67%       4 302262 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 617  0.01% 86.68%       4 302280 org.graalvm.compiler.lir.dfa.LocationMarker.build
 618  0.01% 86.70%       4 302306 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0
 619  0.01% 86.71%       4 302326 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forcePromisesUnrolled
 620  0.01% 86.72%       4 302330 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall
 621  0.01% 86.73%       4 302338 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 622  0.01% 86.74%       4 302357 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute
 623  0.01% 86.75%       4 302374 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 624  0.01% 86.77%       4 302378 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 625  0.01% 86.78%       4 302421 org.graalvm.compiler.graph.NodeWorkList.addAll
 626  0.01% 86.79%       4 302536 sun.misc.Unsafe.getAddress
 627  0.01% 86.80%       4 302559 java.lang.Object.clone
 628  0.01% 86.81%       4 302640 java.util.TimSort.binarySort
 629  0.01% 86.82%       4 302746 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter
 630  0.01% 86.84%       4 302857 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 631  0.01% 86.85%       4 302893 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 632  0.01% 86.86%       4 302910 org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply
 633  0.01% 86.87%       4 302956 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 634  0.01% 86.88%       4 302965 org.graalvm.compiler.graph.NodeClass.valueNumber
 635  0.01% 86.89%       4 302970 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 636  0.01% 86.90%       4 302972 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 637  0.01% 86.92%       4 302973 java.util.TimSort.binarySort
 638  0.01% 86.93%       4 302981 org.graalvm.compiler.graph.NodeWorkList.addAll
 639  0.01% 86.94%       4 302993 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 640  0.01% 86.95%       4 302995 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 641  0.01% 86.96%       4 303014 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 642  0.01% 86.97%       4 303104 jdk.vm.ci.hotspot.CompilerToVM.getHostClass
 643  0.01% 86.99%       4 303137 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 644  0.01% 87.00%       4 303251 org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph
 645  0.01% 87.01%       4 303263 org.graalvm.collections.EconomicMapImpl.add
 646  0.01% 87.02%       4 303292 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>
 647  0.01% 87.03%       4 303326 jdk.vm.ci.hotspot.CompilerToVM.isMature
 648  0.01% 87.04%       4 303351 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 649  0.01% 87.06%       4 303362 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 650  0.01% 87.07%       4 303374 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed
 651  0.01% 87.08%       4 303379 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 652  0.01% 87.09%       4 303381 org.graalvm.compiler.graph.NodeClass.addGraphDuplicate
 653  0.01% 87.10%       4 303382 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 654  0.01% 87.11%       4 303417 java.lang.System.identityHashCode
 655  0.01% 87.12%       4 303441 org.graalvm.collections.EconomicMapImpl.find
 656  0.01% 87.14%       4 303472 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 657  0.01% 87.15%       4 303473 org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase$1.visit
 658  0.01% 87.16%       4 303476 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 659  0.01% 87.17%       4 303511 org.graalvm.compiler.loop.LoopFragment.computeNodes
 660  0.01% 87.18%       4 303521 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized
 661  0.01% 87.19%       4 303529 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 662  0.01% 87.21%       4 303558 org.graalvm.compiler.graph.iterators.NodeIterable.count
 663  0.01% 87.22%       4 303565 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 664  0.01% 87.23%       4 303576 org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess
 665  0.01% 87.24%       4 303592 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 666  0.01% 87.25%       4 303593 java.util.concurrent.ConcurrentHashMap.get
 667  0.01% 87.26%       4 303602 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
 668  0.01% 87.28%       4 303611 com.oracle.truffle.api.object.DynamicObject.setShape
 669  0.01% 87.29%       4 303615 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewStamp
 670  0.01% 87.30%       4 303622 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 671  0.01% 87.31%       4 303623 java.lang.System.identityHashCode
 672  0.01% 87.32%       4 303646 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 673  0.01% 87.33%       4 303702 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 674  0.01% 87.34%       4 303714 org.graalvm.compiler.core.gen.DebugInfoBuilder.toJavaValue
 675  0.01% 87.36%       4 303737 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 676  0.01% 87.37%       4 303743 org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>
 677  0.01% 87.38%       4 303789 org.graalvm.compiler.graph.Node.replaceAtUsages
 678  0.01% 87.39%       4 303829 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 679  0.01% 87.40%       4 303858 com.oracle.truffle.r.nodes.function.RCallSpecialNode.visibleExecute
 680  0.01% 87.41%       4 303865 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 681  0.01% 87.43%       4 303869 com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute
 682  0.01% 87.44%       4 303896 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 683  0.01% 87.45%       4 303909 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 684  0.01% 87.46%       4 303924 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 685  0.01% 87.47%       4 303941 org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext
 686  0.01% 87.48%       4 303978 org.graalvm.compiler.phases.common.AddressLoweringPhase.run
 687  0.01% 87.49%       4 303983 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 688  0.01% 87.51%       4 303985 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny
 689  0.01% 87.52%       4 303989 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi
 690  0.01% 87.53%       4 303993 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 691  0.01% 87.54%       4 304017 org.graalvm.collections.EconomicMapImpl.find
 692  0.01% 87.55%       4 304201 org.graalvm.compiler.core.amd64.AMD64CompressAddressLowering.improve
 693  0.01% 87.56%       4 304214 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
 694  0.01% 87.58%       4 304249 org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd
 695  0.01% 87.59%       4 304264 org.graalvm.compiler.graph.NodeInputList.update
 696  0.01% 87.60%       4 304301 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 697  0.01% 87.61%       4 304311 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 698  0.01% 87.62%       4 304320 org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter
 699  0.01% 87.63%       4 304331 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 700  0.01% 87.65%       4 304333 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 701  0.01% 87.66%       4 304346 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 702  0.01% 87.67%       4 304382 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 703  0.01% 87.68%       4 304399 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 704  0.01% 87.69%       4 304453 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 705  0.01% 87.70%       4 304454 org.graalvm.compiler.virtual.phases.ea.ReadEliminationClosure.processNode
 706  0.01% 87.71%       4 304516 org.graalvm.compiler.lir.LIRInstruction.visitEachState
 707  0.01% 87.73%       4 304598 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix
 708  0.01% 87.74%       4 304638 org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent
 709  0.01% 87.75%       4 304650 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 710  0.01% 87.76%       4 304652 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 711  0.01% 87.77%       4 304731 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 712  0.01% 87.78%       4 304887 com.oracle.truffle.api.library.LibraryFactory.getUncached
 713  0.01% 87.80%       4 304897 com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add
 714  0.01% 87.81%       4 304988 sun.misc.Unsafe.copyMemory
 715  0.01% 87.82%       4 305004 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
CPU SAMPLES END
