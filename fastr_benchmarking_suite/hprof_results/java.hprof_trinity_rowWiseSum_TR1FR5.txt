JAVA PROFILE 1.0.1, created Sat Jun 27 22:41:10 2020

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018c, id = 200001, name="main", group="main")
THREAD START (obj=5000018c, id = 200004, name="nfi-gc", group="main")
THREAD START (obj=500008c9, id = 200005, name="TruffleCompilerThread-28", group="main")
THREAD START (obj=50000923, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018c, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD START (obj=5000018c, id = 200008, name="process reaper", group="system")
THREAD START (obj=50002d58, id = 200009, name="system", group="main")
THREAD END (id = 200009)
THREAD START (obj=50002d58, id = 200010, name="system", group="main")
THREAD END (id = 200010)
THREAD START (obj=500008c9, id = 200011, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50002d58, id = 200012, name="Thread-7", group="main")
THREAD START (obj=5000018c, id = 200013, name="pool-1-thread-1", group="main")
THREAD END (id = 200008)
THREAD END (id = 200012)
THREAD START (obj=5000018c, id = 200014, name="Thread-1", group="main")
THREAD START (obj=500008c9, id = 200015, name="Thread-0", group="main")
THREAD START (obj=5000018c, id = 200016, name="Thread-3", group="main")
THREAD END (id = 200016)
THREAD END (id = 200014)
THREAD END (id = 200015)
THREAD END (id = 200001)
TRACE 301627:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:283)
TRACE 301534:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:286)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:133)
TRACE 301792:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 301832:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:859)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302019:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 304420:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
TRACE 304418:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 304264:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:50)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 302252:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 301828:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 301999:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 301466:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4297)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4291)
TRACE 304720:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:127)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 301656:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 301659:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 304265:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:51)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 304260:
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 305003:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:110)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.executeAndSpecialize(ArrayNodeGen.java:115)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:58)
TRACE 301341:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
TRACE 301721:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 301727:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302263:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:115)
TRACE 300071:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:757)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 304421:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
TRACE 304725:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:75)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:301)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 301988:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 304422:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 301979:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302491:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 304682:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:92)
TRACE 304424:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 300808:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 301171:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:1002)
TRACE 301007:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 302802:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 302492:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302626:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 302298:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:457)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:238)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:150)
TRACE 302668:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 302213:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 304704:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 301973:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:633)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
TRACE 301673:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1939)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 304727:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 305085:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
TRACE 301703:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:451)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301838:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:152)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
TRACE 300965:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 304941:
	com.oracle.truffle.r.runtime.data.RDoubleVector.getLength(RDoubleVector.java:202)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:360)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
TRACE 301339:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:257)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:736)
TRACE 304482:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 302615:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 302984:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 304936:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.getData(NativeDataAccess.java:846)
	com.oracle.truffle.r.runtime.data.RDoubleNativeVectorData.getDoubleAt(RDoubleNativeVectorData.java:98)
	com.oracle.truffle.r.runtime.data.RDoubleNativeVectorDataGen$RDoubleVectorDataLibraryExports$Uncached.getDoubleAt(RDoubleNativeVectorDataGen.java:239)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
TRACE 301825:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 305102:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 302353:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:250)
TRACE 302873:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 301985:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302671:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 304466:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:137)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:128)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:326)
TRACE 300950:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 303152:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 302105:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 304979:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.isWriteable(RDoubleVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RDoubleVector.isMaterialized(RDoubleVector.java:111)
	com.oracle.truffle.r.nodes.attributes.CopyAttributesNode.containsMetadata(CopyAttributesNode.java:72)
TRACE 304331:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 301327:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 302135:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1013)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1007)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 301508:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 301678:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4667)
TRACE 302083:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302199:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:557)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304721:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 301672:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
TRACE 301725:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 302729:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 304900:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 304419:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:360)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 300971:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301698:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:571)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 301975:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 302142:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 302042:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 300984:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301789:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:647)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:747)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301837:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 304370:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:75)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:301)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 304481:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 302470:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1144)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
TRACE 302602:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 301791:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4435)
TRACE 302358:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
TRACE 302702:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
TRACE 302223:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:105)
TRACE 304705:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 303143:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:381)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302317:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302324:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302155:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 303424:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 301310:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
TRACE 302797:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 302151:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302197:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 302732:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 302943:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 301726:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 302565:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1266)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:364)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 300959:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 300976:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301793:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
TRACE 302533:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 302688:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:880)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302709:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303945:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 304266:
	com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble(MersenneTwister.java:185)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
TRACE 304681:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix(JavaUpCallsRFFIImpl.java:495)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCall.execute(Rf_allocMatrixCall.java:70)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_allocMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 304724:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 300970:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 300975:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 302541:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 302639:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302717:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:376)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302807:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302561:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:103)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:80)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 303323:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 303363:
	org.graalvm.compiler.graph.NodeMap.set(NodeMap.java:101)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:893)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304309:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.executeAndSpecialize(Rf_copyMatrixCallGen.java:125)
TRACE 304980:
	com.oracle.truffle.r.runtime.data.RDoubleVector.<init>(RDoubleVector.java:58)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:830)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:826)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:822)
TRACE 301821:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:841)
TRACE 302208:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302895:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:162)
TRACE 301076:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 301706:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 302623:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:694)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302147:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
TRACE 302757:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:904)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 301206:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:735)
TRACE 301470:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:198)
TRACE 302785:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:435)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302791:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:278)
TRACE 303349:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:790)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304405:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 302120:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302144:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
TRACE 302440:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303264:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:102)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 304258:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 304319:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 300857:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 300883:
	java.lang.invoke.MethodHandleNatives.resolve(MethodHandleNatives.java:Unknown line)
	java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)
	java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)
	java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)
TRACE 301143:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1200)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:949)
TRACE 302001:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
TRACE 302248:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 302481:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302893:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:500)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 302947:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302953:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:125)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:112)
	org.graalvm.compiler.graph.Node.clone(Node.java:1064)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 303151:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303374:
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.readConstantField(JavaConstantFieldProvider.java:77)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantFieldFast(TruffleConstantFieldProvider.java:103)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantField(TruffleConstantFieldProvider.java:61)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil.tryConstantFold(ConstantFoldUtil.java:47)
TRACE 304709:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302451:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302516:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
TRACE 302562:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1295)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1286)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 302673:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 303074:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 300644:
	sun.misc.Unsafe.defineAnonymousClass(Unsafe.java:Unknown line)
	java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)
	java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
	java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)
TRACE 301164:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 301669:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1762)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1738)
TRACE 302288:
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
TRACE 302297:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302525:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303145:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:809)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303193:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:795)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:368)
TRACE 303266:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 303410:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303439:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 302159:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302160:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:103)
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
TRACE 302904:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:908)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303029:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises(RCallNode.java:1078)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 300497:
	java.lang.ClassLoader.loadClass(ClassLoader.java:431)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 302192:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 302209:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 302284:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 302320:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
TRACE 302450:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:3008)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2987)
	com.oracle.truffle.r.runtime.RSerialize.access$2700(RSerialize.java:135)
TRACE 302490:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302805:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:284)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:467)
TRACE 303137:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
TRACE 303334:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:829)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 304332:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:127)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304714:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 301526:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
TRACE 302179:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302456:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
TRACE 302524:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302980:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:332)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:301)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
TRACE 303346:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
TRACE 303381:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 303476:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 301087:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:364)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:86)
TRACE 301739:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3088)
TRACE 302052:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302564:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:152)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:119)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
TRACE 302592:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:587)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302738:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302919:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 302995:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:802)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 301521:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.isShareable(RSharingAttributeStorage.java:134)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.execute(WrapArgumentBaseNode.java:68)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:624)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
TRACE 301699:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 301935:
	java.lang.Class.isAssignableFrom(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.isAssignableFrom(HotSpotJDKReflection.java:69)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isAssignableFrom(HotSpotResolvedObjectTypeImpl.java:414)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isInObject(HotSpotResolvedJavaFieldImpl.java:114)
TRACE 302194:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302557:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
TRACE 302903:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 302998:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:685)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 303327:
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:93)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303462:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 303496:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:640)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303582:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:886)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304990:
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.createAttributes(RAbstractVector.java:737)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.initDimsNamesDimNames(RAbstractVector.java:713)
	com.oracle.truffle.r.runtime.data.RDataFactory$VectorFactory.initializeAttributes(RDataFactory.java:145)
	com.oracle.truffle.r.runtime.data.RDataFactory$BaseVectorFactory.createLogicalVector(RDataFactory.java:235)
TRACE 300498:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:316)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
	java.util.jar.JarFile.getJarEntry(JarFile.java:223)
TRACE 301183:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301217:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:286)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SlowPathExecuteNode.slowPathExecute(FunctionExecuteNode.java:265)
TRACE 301517:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
TRACE 301881:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 301886:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:198)
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 301917:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.Node.clone(Node.java:1062)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 302109:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302174:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
TRACE 302452:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1(UnsafeArrayTypeReader.java:131)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.read(AbstractTypeReader.java:43)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.getUV(AbstractTypeReader.java:35)
	org.graalvm.compiler.core.common.util.TypeReader.getUVInt(TypeReader.java:83)
TRACE 302469:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.Arrays$ArrayList.toArray(Arrays.java:3823)
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.<init>(CommitAllocationNode.java:77)
TRACE 302772:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:326)
TRACE 303075:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 303348:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 303470:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval(FixPointIntervalBuilder.java:168)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:124)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 304320:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 300074:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 300806:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:370)
	java.util.jar.JarFile.getInputStream(JarFile.java:447)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:987)
TRACE 301676:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:811)
TRACE 302344:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 302363:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:228)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 302563:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
TRACE 302740:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 302834:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 303007:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
TRACE 303269:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:253)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303446:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:149)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:59)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$2.doValue(LinearScanAssignLocationsPhase.java:189)
TRACE 304336:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
TRACE 304411:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:375)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 304728:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 305081:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.copyIntNativeData(NativeDataAccess.java:647)
	com.oracle.truffle.r.runtime.data.RIntNativeVectorData.getReadonlyIntData(RIntNativeVectorData.java:80)
	com.oracle.truffle.r.runtime.data.RIntNativeVectorDataGen$RIntVectorDataLibraryExports$Uncached.getReadonlyIntData(RIntNativeVectorDataGen.java:218)
	com.oracle.truffle.r.runtime.data.RIntVectorDataLibrary.getIntDataCopy(RIntVectorDataLibrary.java:89)
TRACE 300161:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 300861:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749)
TRACE 301530:
	com.oracle.truffle.r.runtime.data.RBaseObject.<init>(RBaseObject.java:34)
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:40)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
TRACE 302367:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302498:
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:170)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readFieldValue(HotSpotConstantReflectionProvider.java:173)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.readValue(ConstantFoldUtil.java:51)
TRACE 302693:
	org.graalvm.compiler.nodes.GraphDecoder.handlePhiFunctions(GraphDecoder.java:1147)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:754)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302695:
	org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath(DominatorOptimizationProblem.java:128)
	org.graalvm.compiler.lir.constopt.ConstantTree.markBlocks(ConstantTree.java:176)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 302879:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 302971:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:65)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 302994:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
TRACE 303265:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.CallArgumentsNode.evaluateFlattenObjects(CallArgumentsNode.java:242)
TRACE 303290:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 303633:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303702:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:508)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:355)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:419)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:578)
TRACE 300823:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 301209:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2(PipelineToCastNode.java:404)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$$Lambda$724.73150370.test(<Unknown Source>:Unknown line)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 301755:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1416)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1407)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302126:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
TRACE 302338:
	com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute(PromiseNode.java:166)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302342:
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1063)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302566:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 302576:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302618:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302796:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 303054:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303153:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves(LinearScanEliminateSpillMovePhase.java:126)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.run(LinearScanEliminateSpillMovePhase.java:80)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303774:
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:215)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:165)
TRACE 304229:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:934)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$4.apply(GraphEffectList.java:275)
TRACE 304278:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304429:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 305086:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 305155:
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:806)
	com.oracle.truffle.r.runtime.RType.create(RType.java:276)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:256)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 300969:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301391:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301835:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1321)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:725)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:230)
TRACE 301922:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4372)
TRACE 301967:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:159)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302064:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1045)
TRACE 302107:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.object.DynamicObjectImpl.clone(DynamicObjectImpl.java:175)
	com.oracle.truffle.object.DynamicObjectBasic.cloneWithShape(DynamicObjectBasic.java:216)
	com.oracle.truffle.object.DynamicObjectImpl.copy(DynamicObjectImpl.java:322)
TRACE 302211:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
TRACE 302237:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNodeGen.execute(ValueForwardingNodeGen.java:74)
TRACE 302514:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1295)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302653:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302705:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302845:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:788)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:807)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:912)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 302867:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302910:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:155)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302989:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
TRACE 303551:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303776:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:85)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots(LSStackSlotAllocator.java:417)
TRACE 304270:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 305088:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
TRACE 300985:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:454)
TRACE 301139:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.api.nodes.Node.copy(Node.java:491)
	com.oracle.truffle.api.nodes.RootNode.copy(RootNode.java:180)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:154)
TRACE 301167:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getBuiltinClass(NodeWithArgumentCasts.java:132)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getCasts(NodeWithArgumentCasts.java:111)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts.getStaticCasts(NodeWithArgumentCasts.java:42)
TRACE 301189:
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
TRACE 301529:
	com.oracle.truffle.r.runtime.RArguments.getCall(RArguments.java:255)
	com.oracle.truffle.r.nodes.function.opt.OptForcedEagerPromiseNode.execute(OptForcedEagerPromiseNode.java:142)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
TRACE 301950:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301970:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:163)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302025:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxLocals(ResolvedJavaMethodBytecode.java:79)
TRACE 302041:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.handleException(BytecodeParser.java:1318)
TRACE 302088:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302104:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
TRACE 302110:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:284)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302130:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:240)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302176:
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:62)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302201:
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:609)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302307:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:486)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:144)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 302387:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:354)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:103)
TRACE 302487:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302513:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
TRACE 302526:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302551:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:756)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302594:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302659:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302880:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:229)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302937:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:207)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 302983:
	org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>(PrintableDominatorOptimizationProblem.java:35)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:107)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 303015:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1432)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303182:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
TRACE 303552:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 303603:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:610)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303671:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:840)
TRACE 303748:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 303960:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 304279:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 304447:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.rng.RRNG.getContextState(RRNG.java:253)
	com.oracle.truffle.r.runtime.rng.RRNG.currentGenerator(RRNG.java:273)
	com.oracle.truffle.r.runtime.rng.RRNG.unifRand(RRNG.java:288)
TRACE 301001:
	org.antlr.v4.runtime.misc.FlexibleHashMap.get(FlexibleHashMap.java:91)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:549)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301146:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 301157:
	java.lang.Class.isArray(Class.java:Unknown line)
	java.lang.Class.getSimpleName(Class.java:1306)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:81)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:77)
TRACE 301174:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:556)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:510)
TRACE 301439:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301467:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:72)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1161)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302161:
	org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:319)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:293)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302166:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.Return.returnFunction(Return.java:108)
	com.oracle.truffle.r.nodes.builtin.base.ReturnNodeGen.execute(ReturnNodeGen.java:37)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 302243:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RIntVectorDataLibraryGen$UncachedDispatch.isWriteable(RIntVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RIntVector.isMaterialized(RIntVector.java:105)
	com.oracle.truffle.r.nodes.attributes.CopyAttributesNode.containsMetadata(CopyAttributesNode.java:72)
TRACE 302295:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 302306:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302331:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 302476:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:429)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302518:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:478)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 302555:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 302614:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getTagAt(HotSpotConstantPool.java:304)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupConstant(HotSpotConstantPool.java:514)
	org.graalvm.compiler.java.BytecodeParser.lookupConstant(BytecodeParser.java:4325)
TRACE 302675:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:969)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 302728:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 302777:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.prototypeMarkWord(HotSpotResolvedObjectTypeImpl.java:895)
	org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets$Templates.lower(HotSpotAllocationSnippets.java:662)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:313)
TRACE 302801:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$12(LinearScanLifetimeAnalysisPhase.java:777)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$30.1532744364.doState(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
TRACE 302929:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 302941:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:790)
TRACE 302951:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.nodes.FixedWithNextNode.setNext(FixedWithNextNode.java:46)
TRACE 302960:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 303009:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:441)
TRACE 303020:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall(SetVisibilityNode.java:84)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:66)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 303025:
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:153)
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
TRACE 303073:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 303203:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.FrameSlotNode$PresentFrameSlotNode.hasValue(FrameSlotNode.java:181)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303284:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:454)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
	org.graalvm.compiler.core.LIRGenerationPhase.matchBlock(LIRGenerationPhase.java:92)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:72)
TRACE 303288:
	com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute(AccessArgumentNode.java:94)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 303324:
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:294)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:151)
TRACE 303353:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 303355:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd(FixReadsPhase.java:369)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:281)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303361:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 303384:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 303423:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
TRACE 303434:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303452:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4808)
TRACE 303829:
	org.graalvm.compiler.graph.InputEdges.update(InputEdges.java:66)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1250)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 303880:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
TRACE 304048:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 304378:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
TRACE 304726:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 300973:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1467)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301150:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 301321:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:416)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
TRACE 301329:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301671:
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments(ArgumentMatcher.java:192)
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.matchArgumentsEvaluated(ArgumentMatcher.java:186)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsExplicit.prepare(PrepareArguments.java:211)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsExplicitNodeGen.execute(PrepareArgumentsFactory.java:170)
TRACE 301713:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:204)
	org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:181)
	org.graalvm.collections.EconomicMapImpl.create(EconomicMapImpl.java:158)
TRACE 301795:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 301899:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:124)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:83)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302047:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302150:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:282)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302257:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putUV(UnsafeArrayTypeWriter.java:210)
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
TRACE 302289:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:168)
TRACE 302327:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302412:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:802)
TRACE 302449:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:197)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302464:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:460)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 302497:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:85)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:221)
TRACE 302510:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 302543:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:394)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302548:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302694:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:454)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302775:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 302892:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.replacements.PEGraphDecoder.deleteInvoke(PEGraphDecoder.java:1146)
TRACE 302905:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:129)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 302955:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
TRACE 302963:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:626)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 302996:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.eliminateMoves(RedundantMoveElimination.java:366)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:163)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303017:
	jdk.vm.ci.hotspot.CompilerToVM.asReflectionField(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getField(HotSpotJDKReflection.java:471)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getFieldAnnotations(HotSpotJDKReflection.java:155)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:197)
TRACE 303062:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode(GraphDecoder.java:1390)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
TRACE 303063:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.function.RCallNode$GetTempNode.execute(RCallNode.java:848)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303066:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:76)
	com.oracle.truffle.r.runtime.data.model.RAbstractAtomicVector.<init>(RAbstractAtomicVector.java:42)
TRACE 303285:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:483)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:474)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:377)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
TRACE 303321:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:146)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.access$100(ConstantLoadOptimization.java:96)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:85)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:73)
TRACE 303330:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 303365:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:451)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 303406:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:148)
TRACE 303433:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:478)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 303442:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny(LinearScanWalker.java:185)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:709)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303794:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:191)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 304232:
	org.graalvm.compiler.graph.NodeMap.set(NodeMap.java:101)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:893)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
TRACE 300260:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:348)
	sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
TRACE 300706:
	java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 300882:
	java.util.zip.ZipFile.getNextEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$500(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:523)
	java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:514)
TRACE 301092:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 301211:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrCached(GetFixedPropertyNode.java:100)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetNamesPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:448)
	com.oracle.truffle.r.nodes.attributes.GetFixedAttributeNode.getAttrFromAttributable(GetFixedAttributeNode.java:78)
TRACE 301326:
	java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:88)
	java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:77)
	com.oracle.truffle.r.runtime.conn.DelegateRConnection.createGZIPDelegateInputConnection(DelegateRConnection.java:649)
	com.oracle.truffle.r.runtime.conn.FileConnections.createDelegateConnection(FileConnections.java:278)
TRACE 301701:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:190)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 301876:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302053:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 302132:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302222:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getTemporaries(HotSpotForeignCallLinkageImpl.java:211)
	org.graalvm.compiler.lir.gen.LIRGenerator.emitForeignCall(LIRGenerator.java:482)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRGenerator.emitForeignCall(AMD64HotSpotLIRGenerator.java:398)
TRACE 302255:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:169)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302258:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:203)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302336:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.foldPendingTest(ConditionalEliminationPhase.java:745)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$2.foldGuard(ConditionalEliminationPhase.java:305)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:321)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302407:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:387)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302419:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:74)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302453:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 302560:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:357)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302610:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1300)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302646:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1298)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1286)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 302647:
	com.oracle.truffle.r.nodes.access.ConstantNode.execute(ConstantNode.java:76)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302684:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:393)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302787:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 302851:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.clone(Node.java:1076)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 302891:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302920:
	org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual(VirtualObjectState.java:71)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:628)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 302997:
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:535)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCodeBody(AMD64HotSpotBackend.java:318)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCode(AMD64HotSpotBackend.java:246)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:208)
TRACE 303110:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
TRACE 303200:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope(ComputeInliningRelevance.java:145)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:97)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 303289:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 303317:
	java.util.ArrayList.addAll(ArrayList.java:581)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:122)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
TRACE 303326:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 303336:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildBeforeOpId(Interval.java:940)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:537)
TRACE 303463:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303497:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 303549:
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
TRACE 303579:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeLoad(PEReadEliminationClosure.java:192)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:120)
TRACE 303586:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303624:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:246)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303625:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
TRACE 303648:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303850:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 303879:
	org.graalvm.compiler.graph.Graph.grow(Graph.java:1073)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 303942:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 303948:
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd(EdgeMoveOptimizer.java:170)
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.access$000(EdgeMoveOptimizer.java:78)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:70)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:57)
TRACE 304329:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304436:
	java.util.BitSet.clone(BitSet.java:1102)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:364)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 304443:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval(FixPointIntervalBuilder.java:177)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:141)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 304478:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:205)
TRACE 304568:
	jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.getMaxCallTargetOffset(HotSpotCodeCacheProvider.java:186)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getMaxCallTargetOffset(HotSpotForeignCallLinkageImpl.java:216)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitForeignCallOp(AMD64LIRGenerator.java:563)
TRACE 305130:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:150)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:141)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.copyIntNativeData(NativeDataAccess.java:648)
TRACE 301004:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure(ParserATNSimulator.java:1448)
TRACE 301173:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeFunctionFrameDescriptor(FrameSlotChangeMonitor.java:945)
TRACE 301387:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
TRACE 301471:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeNonFunctionFrameDescriptor(FrameSlotChangeMonitor.java:940)
TRACE 301688:
	java.lang.System.identityHashCode(System.java:Unknown line)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.createCallTarget(Closure.java:235)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.generateCallTarget(Closure.java:231)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCache.get(Closure.java:295)
TRACE 301720:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCodeSize(HotSpotResolvedJavaMethodImpl.java:263)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCode(HotSpotResolvedJavaMethodImpl.java:251)
TRACE 301781:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:896)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301902:
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl(BinaryBooleanScalarNode.java:124)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.doCached(BinaryBooleanScalarNode.java:114)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNodeGen$LogicalScalarCastNodeGen.executeCast(BinaryBooleanScalarNodeGen.java:71)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode.binary(BinaryBooleanScalarNode.java:85)
TRACE 301912:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301942:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:202)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
TRACE 301977:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302020:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:897)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302050:
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply(GraphEffectList.java:154)
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 302097:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302115:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	com.oracle.truffle.api.frame.FrameDescriptor.findFrameSlot(FrameDescriptor.java:206)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.findOrAddFrameSlot(FrameSlotChangeMonitor.java:768)
TRACE 302246:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302249:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302321:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:759)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302360:
	com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctions$GetDimNamesAttributeNode.getDimNames(SpecialAttributesFunctions.java:828)
	com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctions$GetNamesAttributeNode.getVectorNames(SpecialAttributesFunctions.java:436)
	com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctionsFactory$GetNamesAttributeNodeGen.execute(SpecialAttributesFunctionsFactory.java:482)
	com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctions$GetNamesAttributeNode.getNames(SpecialAttributesFunctions.java:417)
TRACE 302438:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302448:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	java.lang.Enum.getDeclaringClass(Enum.java:199)
	java.util.EnumSet.of(EnumSet.java:259)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.<init>(EconomicSetNodeEventListener.java:52)
TRACE 302462:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:323)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
TRACE 302466:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:71)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302628:
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:732)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302664:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.core.common.type.TypeReference.filterInterfaceTypesOut(TypeReference.java:145)
	org.graalvm.compiler.core.common.type.TypeReference.create(TypeReference.java:93)
TRACE 302722:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:234)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
TRACE 302803:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302812:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 302840:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:617)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:404)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302855:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:399)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302887:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 302902:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
TRACE 302927:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 302933:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1065)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 302958:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:224)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 302978:
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 303005:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303013:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.replacements.PEGraphDecoder.getInvocationPlugin(PEGraphDecoder.java:841)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:794)
TRACE 303043:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 303045:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:259)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303104:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority(SchedulePhase.java:1092)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:1012)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:993)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.access$100(SchedulePhase.java:973)
TRACE 303113:
	org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness(LocalLiveness.java:331)
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:103)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1017)
TRACE 303161:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303179:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 303281:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:894)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303318:
	java.util.ArrayList.forEach(ArrayList.java:1257)
	org.graalvm.compiler.lir.constopt.DefUseTree.forEach(DefUseTree.java:84)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:109)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
TRACE 303373:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:130)
TRACE 303398:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303430:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:235)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303457:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:392)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303485:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getArithmeticOp(BinaryArithmeticNode.java:80)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.foldStamp(BinaryArithmeticNode.java:131)
	org.graalvm.compiler.nodes.calc.BinaryNode.inferStamp(BinaryNode.java:79)
TRACE 303494:
	org.graalvm.compiler.graph.NodeClass.registerAtSuccessorsAsPredecessor(NodeClass.java:1351)
	org.graalvm.compiler.graph.Node.initialize(Node.java:626)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 303527:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:799)
TRACE 303545:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:509)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:333)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303567:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:225)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 303602:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.fillKillSet(SchedulePhase.java:391)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:259)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303631:
	org.graalvm.compiler.lir.util.IndexedValueMap.forEach(IndexedValueMap.java:130)
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:94)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
TRACE 303650:
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2(ConditionalEliminationPhase.java:359)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$$Lambda$919.1326479730.rewire(<Unknown Source>:Unknown line)
TRACE 303692:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:327)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 303897:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias(PartialEscapeClosure.java:1289)
	org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject(VirtualizerToolImpl.java:328)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.virtualize(CommitAllocationNode.java:144)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 303940:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:339)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303990:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 304059:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove(MoveResolver.java:295)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSAMoveResolver.createMove(SSAMoveResolver.java:163)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:278)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:350)
TRACE 304061:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:78)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 304268:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:758)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$28.214363666.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
TRACE 304327:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 304428:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:749)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$27.1537789253.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 304433:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 304491:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genNewInstance(BytecodeParser.java:4505)
TRACE 304742:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:294)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 304796:
	org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter(FilteredNodeIterable.java:58)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:143)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:261)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
TRACE 304932:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.trimClone(LinearScanLifetimeAnalysisPhase.java:408)
TRACE 304995:
	com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add(Collections.java:65)
	com.oracle.truffle.r.nodes.builtin.base.Unique.doUniqueCachedString(Unique.java:106)
	com.oracle.truffle.r.nodes.builtin.base.UniqueNodeGen.execute(UniqueNodeGen.java:59)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 300963:
	org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions(ATNState.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300983:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301212:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	sun.nio.fs.NativeBuffers.copyCStringToNativeBuffer(NativeBuffers.java:127)
	sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixNativeDispatcher.java:50)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:447)
TRACE 301414:
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
TRACE 301429:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 301468:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:394)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 301505:
	com.oracle.truffle.r.nodes.function.opt.UnShareObjectNodeGen.execute(UnShareObjectNodeGen.java:26)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 301507:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:631)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.doCachedAssumption(PromiseHelperNode.java:528)
TRACE 301695:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.checkUnwind(BytecodeParser.java:3003)
TRACE 301718:
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:210)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:62)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:47)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantField(TruffleConstantFieldProvider.java:83)
TRACE 301823:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:67)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 302006:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.BitSet.clone(BitSet.java:1101)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
TRACE 302058:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:812)
TRACE 302217:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranch(AMD64LIRGenerator.java:330)
TRACE 302232:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:338)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:419)
TRACE 302268:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:187)
TRACE 302303:
	java.lang.Class.isArray(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readArrayElement(HotSpotJDKReflection.java:248)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayElement(HotSpotConstantReflectionProvider.java:89)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.tryConstantFold(LoadIndexedNode.java:188)
TRACE 302314:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1321)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:981)
	org.graalvm.compiler.nodes.StructuredGraph.removeFixed(StructuredGraph.java:689)
TRACE 302345:
	org.graalvm.compiler.nodes.calc.ShiftNode.getOp(ShiftNode.java:70)
	org.graalvm.compiler.nodes.calc.ShiftNode.canonical(ShiftNode.java:86)
	org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode.canonical(UnsignedRightShiftNode.java:74)
	org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode.canonical(UnsignedRightShiftNode.java:46)
TRACE 302350:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.ObjectState.<init>(ObjectState.java:87)
	org.graalvm.compiler.virtual.phases.ea.ObjectState.cloneState(ObjectState.java:95)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.getObjectStateForModification(PartialEscapeBlockState.java:150)
TRACE 302489:
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.FrameState.duplicateModified(FrameState.java:370)
	org.graalvm.compiler.replacements.PEGraphDecoder.ensureOuterStateDecoded(PEGraphDecoder.java:1313)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1358)
TRACE 302586:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:782)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302596:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 302606:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:460)
TRACE 302621:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:758)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$28.214363666.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
TRACE 302674:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:943)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:241)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
TRACE 302701:
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302718:
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:40)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:76)
TRACE 302814:
	org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks(NullCheckOptimizer.java:56)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:43)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:37)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302881:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl$FieldInfo.getName(HotSpotResolvedObjectTypeImpl.java:683)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getName(HotSpotResolvedJavaFieldImpl.java:124)
TRACE 302896:
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1397)
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1185)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:677)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 302901:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302966:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1227)
TRACE 303044:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
TRACE 303115:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:287)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303121:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:864)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303123:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303140:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:749)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$27.1537789253.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
TRACE 303163:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:380)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303180:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1337)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 303188:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303218:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate(FrameSlotChangeMonitor.java:910)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 303224:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache(PEReadEliminationClosure.java:403)
TRACE 303245:
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:102)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase.run(FrameStateAssignmentPhase.java:127)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303246:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:214)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 303308:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 303364:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:465)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303372:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303386:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303420:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.clone(Node.java:1076)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 303421:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1066)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
TRACE 303448:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:139)
TRACE 303471:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 303473:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:569)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:564)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 303483:
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run(ConvertDeoptimizeToGuardPhase.java:92)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run(ConvertDeoptimizeToGuardPhase.java:84)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303498:
	org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd(GraphDecoder.java:956)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:709)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303529:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303537:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processLoop(ReentrantBlockIterator.java:77)
TRACE 303540:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:395)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 303541:
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:639)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.loop.LoopFragment.lambda$computeNodes$1(LoopFragment.java:210)
TRACE 303548:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.FrameState.addVirtualObjectMapping(FrameState.java:288)
TRACE 303597:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303622:
	org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>(Interval.java:354)
	org.graalvm.compiler.lir.alloc.lsra.Interval.<init>(Interval.java:734)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.createInterval(LinearScan.java:363)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.getOrCreateInterval(LinearScan.java:431)
TRACE 303652:
	org.graalvm.compiler.nodes.StructuredGraph$1$1.hasNext(StructuredGraph.java:640)
	org.graalvm.compiler.truffle.compiler.phases.DeoptimizeOnExceptionPhase.run(DeoptimizeOnExceptionPhase.java:54)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303722:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$1.doValue(LinearScanAssignLocationsPhase.java:181)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:245)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
TRACE 303762:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.noAllocationPossible(LinearScanWalker.java:937)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 303800:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1242)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303842:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 303932:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray(UnsafeArrayTypeWriter.java:100)
	org.graalvm.compiler.nodes.GraphEncoder.getEncoding(GraphEncoder.java:312)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:165)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303933:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:771)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304077:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualizable(PartialEscapeClosure.java:255)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:230)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
TRACE 304105:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.constopt.VariableMap.forEach(VariableMap.java:73)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:142)
TRACE 304117:
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:136)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:110)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.allocateStackSlots(LSStackSlotAllocator.java:105)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.run(LSStackSlotAllocator.java:97)
TRACE 304154:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 304287:
	org.graalvm.compiler.lir.LIRFrameState.processValues(LIRFrameState.java:131)
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
TRACE 304379:
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.postprocess(LoweringPhase.java:441)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:610)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:404)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304550:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:191)
TRACE 304571:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:93)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.484812242.accept(<Unknown Source>:Unknown line)
TRACE 304575:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:478)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
TRACE 304588:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:465)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 304619:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$914.1202923699.accept(<Unknown Source>:Unknown line)
	java.lang.Iterable.forEach(Iterable.java:75)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:346)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304665:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:352)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 304697:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 304751:
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:662)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 304753:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.tryFold(InstanceOfNode.java:190)
TRACE 304799:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:786)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:807)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:912)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 300159:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300827:
	java.util.jar.JarFile.getMetaInfEntryNames(JarFile.java:Unknown line)
	java.util.jar.JarFile.getManEntry(JarFile.java:498)
	java.util.jar.JarFile.getManifestFromReference(JarFile.java:188)
	java.util.jar.JarFile.getManifest(JarFile.java:180)
TRACE 300955:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1464)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300972:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301093:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301162:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:66)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
TRACE 301317:
	java.util.zip.ZipFile.getEntryTime(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:586)
	java.util.zip.ZipFile.access$900(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
TRACE 301388:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet(ParserATNSimulator.java:815)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
TRACE 301438:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:184)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 301662:
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
TRACE 301664:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:307)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 301682:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301710:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:689)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
TRACE 301780:
	org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons(PredictionContext.java:240)
	org.antlr.v4.runtime.atn.PredictionContext.merge(PredictionContext.java:155)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
TRACE 301830:
	jdk.vm.ci.hotspot.CompilerToVM.getBytecode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCode(HotSpotResolvedJavaMethodImpl.java:255)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getCode(ResolvedJavaMethodBytecode.java:64)
	org.graalvm.compiler.java.BytecodeParser.<init>(BytecodeParser.java:914)
TRACE 302162:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302186:
	com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply(CachedExtractVectorNode.java:165)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doExtractDefaultCached(ExtractVectorNode.java:128)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:69)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 302193:
	com.oracle.truffle.r.runtime.ops.na.NACheck.enable(NACheck.java:173)
	com.oracle.truffle.r.nodes.primitive.BinaryMapNAFunctionNode.enable(BinaryMapNAFunctionNode.java:38)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:215)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:118)
TRACE 302229:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:122)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.access$100(ConstantLoadOptimization.java:96)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:85)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:73)
TRACE 302290:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genNewObjectArray(BytecodeParser.java:4594)
TRACE 302309:
	com.oracle.truffle.r.nodes.control.RLengthNode.doCachedContainer(RLengthNode.java:99)
	com.oracle.truffle.r.nodes.control.RLengthNodeGen.executeInteger(RLengthNodeGen.java:84)
	com.oracle.truffle.r.nodes.builtin.base.Length.getLength(Length.java:45)
	com.oracle.truffle.r.nodes.builtin.base.LengthNodeGen.execute(LengthNodeGen.java:26)
TRACE 302359:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:684)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:284)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:467)
TRACE 302392:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302422:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase.run(MarkBasePointersPhase.java:50)
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase.run(MarkBasePointersPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302433:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302437:
	org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize(StructuredGraph.java:1054)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:85)
	org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:279)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)
TRACE 302507:
	jdk.vm.ci.hotspot.CompilerToVM.getHostClass(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getHostClass(HotSpotResolvedObjectTypeImpl.java:424)
	org.graalvm.compiler.java.BytecodeParser.emitCheckForInvokeSuperSpecial(BytecodeParser.java:2011)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1893)
TRACE 302571:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302582:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302641:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.LoopBeginNode.orderedLoopEnds(LoopBeginNode.java:187)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopPredecessors(ControlFlowGraph.java:556)
TRACE 302669:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerLowerThanNode$LowerOp.findSynonym(IntegerLowerThanNode.java:190)
	org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp.findSynonym(IntegerBelowNode.java:89)
	org.graalvm.compiler.nodes.calc.IntegerLowerThanNode$LowerOp.canonical(IntegerLowerThanNode.java:136)
TRACE 302680:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	org.graalvm.compiler.word.WordOperationPlugin.interceptType(WordOperationPlugin.java:130)
TRACE 302682:
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:119)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:102)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase.run(FrameStateAssignmentPhase.java:127)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302697:
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase$Marker$BasePointersSet.equals(MarkBasePointersPhase.java:101)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:106)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
TRACE 302704:
	java.lang.ClassValue.get(ClassValue.java:102)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:490)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
TRACE 302720:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302733:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:453)
TRACE 302774:
	java.util.ArrayDeque.poll(ArrayDeque.java:466)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1381)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
TRACE 302810:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
TRACE 302811:
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots(LSStackSlotAllocator.java:419)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:178)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.allocateStackSlots(LSStackSlotAllocator.java:105)
TRACE 302844:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:275)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302854:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.getMetaAccess(CanonicalizerPhase.java:541)
	org.graalvm.compiler.nodes.memory.ReadNode.canonicalizeRead(ReadNode.java:128)
	org.graalvm.compiler.nodes.memory.ReadNode.canonical(ReadNode.java:105)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
TRACE 302888:
	java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1043)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:952)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302894:
	org.graalvm.compiler.core.common.type.StampPair.hashCode(StampPair.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302946:
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:151)
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:139)
	org.graalvm.compiler.nodes.calc.IsNullNode.canonicalized(IsNullNode.java:113)
	org.graalvm.compiler.nodes.calc.IsNullNode.canonical(IsNullNode.java:106)
TRACE 303037:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper(NodeClass.java:1449)
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1440)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
TRACE 303038:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1191)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 303039:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303087:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 303088:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 303098:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:219)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 303099:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:908)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
TRACE 303124:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
TRACE 303132:
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:62)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303138:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:303)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.analyzeBlock(ConstantLoadOptimization.java:258)
TRACE 303165:
	java.util.TimSort.binarySort(TimSort.java:296)
	java.util.TimSort.sort(TimSort.java:221)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 303206:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNode.getAttrCached(GetPropertyNode.java:52)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNodeGen.execute(GetPropertyNodeGen.java:45)
	com.oracle.truffle.r.nodes.access.AccessSlotNode.getSlotS4Cached(AccessSlotNode.java:68)
TRACE 303208:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 303209:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph$ChainedNodeEventListener.changed(Graph.java:647)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
TRACE 303236:
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.visibleEvaluate(PromiseHelperNode.java:185)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:297)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
TRACE 303268:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue(BaseWriteVariableNode.java:128)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.shareObjectValue(BaseWriteVariableNode.java:103)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
TRACE 303275:
	org.graalvm.compiler.nodes.memory.ReadNode.canonicalizeRead(ReadNode.java:143)
	org.graalvm.compiler.nodes.memory.ReadNode.canonical(ReadNode.java:105)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 303278:
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.isCallTargetCloningAllowed(OptimizedDirectCallNode.java:117)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.canSplit(TruffleSplittingStrategy.java:116)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.shouldSplit(TruffleSplittingStrategy.java:83)
	org.graalvm.compiler.truffle.runtime.TruffleSplittingStrategy.beforeCall(TruffleSplittingStrategy.java:56)
TRACE 303297:
	com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.searchGeneric(SearchFirstStringNode.java:210)
	com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.apply(SearchFirstStringNode.java:103)
	com.oracle.truffle.r.nodes.access.vector.PositionCharacterLookupNode.execute(PositionCharacterLookupNode.java:66)
	com.oracle.truffle.r.nodes.access.vector.PositionCheckNode.execute(PositionCheckNode.java:210)
TRACE 303306:
	org.graalvm.compiler.lir.gen.LIRGenerator.getLIRKind(LIRGenerator.java:568)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitBranch(NodeLIRBuilder.java:551)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitIf(NodeLIRBuilder.java:542)
	org.graalvm.compiler.nodes.IfNode.generate(IfNode.java:179)
TRACE 303368:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303418:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ReassociateInvariantPhase.run(ReassociateInvariantPhase.java:49)
TRACE 303435:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:364)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303436:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.isMoveToSelf(MoveResolver.java:245)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.safeToProcessMove(MoveResolver.java:235)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.moveInsertPosition(MoveResolver.java:461)
TRACE 303475:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData(RedundantMoveElimination.java:202)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:147)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 303557:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 303560:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.phases.common.inlining.info.ExactInlineInfo.shouldInline(ExactInlineInfo.java:107)
	org.graalvm.compiler.phases.common.inlining.policy.GreedyInliningPolicy.isWorthInlining(GreedyInliningPolicy.java:84)
TRACE 303561:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	java.lang.Iterable.forEach(Iterable.java:74)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:222)
TRACE 303565:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putSV(UnsafeArrayTypeWriter.java:204)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:396)
TRACE 303584:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:833)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303591:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:574)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303613:
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1441)
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1169)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:678)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 303643:
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue(BaseWriteVariableNode.java:128)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.shareObjectValue(BaseWriteVariableNode.java:103)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 303649:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:242)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303673:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 303687:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
TRACE 303691:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351)
	org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:630)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:170)
TRACE 303706:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:436)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
TRACE 303728:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
TRACE 303737:
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode(PromiseNode.java:561)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArguments(PromiseNode.java:541)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.execute(PromiseNode.java:458)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303741:
	java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1043)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.getStringIdentifiersAndValues(REnvTruffleFrameAccess.java:258)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.ls(REnvTruffleFrameAccess.java:201)
	com.oracle.truffle.r.runtime.env.REnvironment.ls(REnvironment.java:1057)
TRACE 303745:
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1036)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 303769:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit(PartialEscapeClosure.java:577)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processLoopExit(PartialEscapeClosure.java:547)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:332)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:80)
TRACE 303772:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:204)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:165)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:239)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
TRACE 303811:
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:764)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:732)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 303813:
	org.graalvm.compiler.core.common.calc.Condition.foldCondition(Condition.java:397)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.optimizeConditional(CompareNode.java:270)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonicalizeSymmetricConstant(CompareNode.java:190)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:323)
TRACE 303818:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:87)
TRACE 303823:
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:65)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 303840:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1332)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 303953:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.IntegerStamp.meet(IntegerStamp.java:345)
	org.graalvm.compiler.nodes.type.StampTool.meetOrNull(StampTool.java:69)
	org.graalvm.compiler.nodes.ValuePhiNode.inferStamp(ValuePhiNode.java:73)
TRACE 303967:
	java.util.ArrayList.addAll(ArrayList.java:581)
	org.graalvm.compiler.nodes.FrameState.duplicateModified(FrameState.java:390)
	org.graalvm.compiler.replacements.PEGraphDecoder.ensureOuterStateDecoded(PEGraphDecoder.java:1313)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1358)
TRACE 303996:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 304017:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:261)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
TRACE 304018:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 304093:
	org.graalvm.compiler.nodes.ValueNode.hasUsagesOtherThan(ValueNode.java:213)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.shouldSwapInputs(BinaryArithmeticNode.java:372)
	org.graalvm.compiler.nodes.calc.AddNode.generate(AddNode.java:196)
	org.graalvm.compiler.nodes.spi.ArithmeticLIRLowerable.generate(ArithmeticLIRLowerable.java:33)
TRACE 304175:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 304199:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:219)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
TRACE 304215:
	org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.queueSuccessors(InliningIterator.java:105)
	org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.apply(InliningIterator.java:86)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.<init>(CallsiteHolderExplorable.java:85)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.<init>(InliningData.java:137)
TRACE 304314:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:292)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304339:
	org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject(VirtualizerToolImpl.java:328)
	org.graalvm.compiler.nodes.extended.BoxNode.virtualize(BoxNode.java:108)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualizable(PartialEscapeClosure.java:255)
TRACE 304341:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processEnd(ConditionalEliminationPhase.java:607)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:508)
TRACE 304380:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:477)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:355)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:419)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:578)
TRACE 304399:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:462)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304400:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304408:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:148)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:294)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:613)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
TRACE 304456:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt(VectorAccess.java:323)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$8.perform(BinaryMapNode.java:350)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304483:
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp(CompilationResultBuilder.java:572)
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitBlock(CompilationResultBuilder.java:559)
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:534)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCodeBody(AMD64HotSpotBackend.java:318)
TRACE 304522:
	org.graalvm.compiler.nodes.FrameState.<init>(FrameState.java:200)
	org.graalvm.compiler.java.FrameStateBuilder.create(FrameStateBuilder.java:351)
	org.graalvm.compiler.java.FrameStateBuilder.create(FrameStateBuilder.java:318)
	org.graalvm.compiler.java.BytecodeParser.createFrameState(BytecodeParser.java:3920)
TRACE 304567:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:625)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 304648:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:68)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:258)
TRACE 304719:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 304783:
	org.graalvm.compiler.nodes.PhiNode.canonical(PhiNode.java:49)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304786:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 304788:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 304911:
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.onInterpreterCall(OptimizedDirectCallNode.java:151)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:64)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
CPU SAMPLES BEGIN (total = 38184) Sat Jun 27 22:43:22 2020
rank   self  accum   count trace method
   1 27.04% 27.04%   10326 301627 java.io.FileInputStream.open0
   2  3.23% 30.28%    1235 301534 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   3  3.23% 33.50%    1232 301792 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   4  2.79% 36.30%    1067 301832 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   5  2.21% 38.51%     844 302019 jdk.vm.ci.hotspot.CompilerToVM.installCode
   6  1.68% 40.19%     642 304420 com.oracle.truffle.api.library.LibraryFactory.getUncached
   7  1.63% 41.82%     624 304418 com.oracle.truffle.api.library.LibraryFactory.getUncached
   8  1.40% 43.22%     533 304264 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
   9  1.26% 44.48%     480 302252 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  10  1.20% 45.68%     458 301828 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  11  1.03% 46.71%     393 301999 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  12  0.96% 47.67%     368 301466 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
  13  0.92% 48.59%     352 304720 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  14  0.87% 49.46%     331 301656 java.lang.Throwable.fillInStackTrace
  15  0.84% 50.30%     320 301659 java.lang.Throwable.fillInStackTrace
  16  0.73% 51.02%     278 304265 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  17  0.63% 51.66%     242 304260 com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand
  18  0.63% 52.29%     241 305003 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  19  0.58% 52.87%     221 301341 sun.nio.fs.UnixNativeDispatcher.access0
  20  0.56% 53.43%     214 301721 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  21  0.54% 53.97%     205 301727 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  22  0.53% 54.49%     202 302263 org.graalvm.collections.EconomicMapImpl.findLinear
  23  0.51% 55.01%     196 300071 java.lang.ClassLoader.defineClass1
  24  0.51% 55.52%     194 304421 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt
  25  0.51% 56.02%     194 304725 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  26  0.48% 56.51%     184 301988 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  27  0.48% 56.98%     182 304422 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt
  28  0.46% 57.44%     175 301979 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  29  0.45% 57.89%     171 302491 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  30  0.44% 58.33%     169 304682 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  31  0.43% 58.76%     165 304424 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  32  0.36% 59.12%     136 300808 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  33  0.34% 59.46%     129 301171 java.lang.String.intern
  34  0.34% 59.79%     128 301007 java.lang.String.intern
  35  0.30% 60.10%     116 302802 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  36  0.30% 60.39%     114 302492 org.graalvm.collections.EconomicMapImpl.getHashIndex
  37  0.29% 60.69%     111 302626 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  38  0.29% 60.97%     109 302298 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  39  0.27% 61.25%     105 302668 org.graalvm.collections.EconomicMapImpl.getHashIndex
  40  0.26% 61.51%     101 302213 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  41  0.24% 61.75%      93 304704 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  42  0.24% 61.99%      92 301973 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  43  0.24% 62.23%      91 301673 com.oracle.truffle.api.TruffleFile.checkAccess
  44  0.24% 62.47%      91 304727 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  45  0.23% 62.70%      88 305085 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
  46  0.23% 62.93%      87 301703 sun.nio.fs.UnixNativeDispatcher.access
  47  0.23% 63.16%      87 301838 java.lang.System.identityHashCode
  48  0.22% 63.38%      85 300965 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  49  0.22% 63.60%      84 304941 com.oracle.truffle.r.runtime.data.RDoubleVector.getLength
  50  0.21% 63.81%      82 301339 sun.nio.fs.UnixNativeDispatcher.realpath0
  51  0.21% 64.03%      82 304482 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
  52  0.20% 64.23%      76 302615 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  53  0.20% 64.43%      76 302984 org.graalvm.compiler.lir.ValueConsumer.visitValue
  54  0.19% 64.62%      74 304936 com.oracle.truffle.r.runtime.data.NativeDataAccess.getData
  55  0.19% 64.81%      73 301825 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  56  0.19% 65.00%      73 305102 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix
  57  0.19% 65.19%      71 302353 org.graalvm.compiler.graph.Graph.findDuplicate
  58  0.19% 65.38%      71 302873 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  59  0.18% 65.55%      68 301985 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  60  0.18% 65.73%      67 302671 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  61  0.18% 65.90%      67 304466 sun.misc.Unsafe.copyMemory
  62  0.17% 66.08%      66 300950 java.lang.System.identityHashCode
  63  0.17% 66.25%      65 303152 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
  64  0.16% 66.41%      63 302105 java.lang.Object.hashCode
  65  0.16% 66.58%      63 304979 com.oracle.truffle.api.library.LibraryFactory.getUncached
  66  0.16% 66.74%      62 304331 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  67  0.16% 66.90%      61 301327 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
  68  0.15% 67.05%      59 302135 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  69  0.14% 67.20%      55 301508 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  70  0.14% 67.34%      55 301678 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  71  0.14% 67.49%      55 302083 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  72  0.14% 67.63%      55 302199 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  73  0.14% 67.77%      54 304721 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
  74  0.14% 67.91%      53 301672 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  75  0.14% 68.05%      53 301725 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  76  0.14% 68.19%      53 302729 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  77  0.14% 68.33%      53 304900 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
  78  0.14% 68.46%      52 304419 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  79  0.13% 68.60%      51 300971 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
  80  0.13% 68.73%      50 301698 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  81  0.13% 68.86%      50 301975 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  82  0.13% 68.99%      50 302142 java.lang.Object.hashCode
  83  0.13% 69.12%      49 302042 java.lang.System.identityHashCode
  84  0.13% 69.24%      48 300984 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
  85  0.12% 69.36%      44 301789 org.graalvm.compiler.graph.NodeClass.deepEquals0
  86  0.12% 69.47%      44 301837 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  87  0.12% 69.59%      44 304370 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  88  0.11% 69.70%      43 304481 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
  89  0.11% 69.81%      42 302470 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
  90  0.11% 69.92%      42 302602 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
  91  0.11% 70.03%      41 301791 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  92  0.11% 70.14%      41 302358 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
  93  0.11% 70.24%      41 302702 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
  94  0.10% 70.35%      40 302223 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
  95  0.10% 70.45%      40 304705 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
  96  0.10% 70.56%      39 303143 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  97  0.10% 70.66%      38 302317 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  98  0.10% 70.75%      38 302324 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  99  0.10% 70.85%      37 302155 org.graalvm.collections.EconomicMapImpl.find
 100  0.10% 70.95%      37 303424 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 101  0.09% 71.04%      36 301310 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 102  0.09% 71.14%      36 302797 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
 103  0.09% 71.23%      35 302151 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 104  0.09% 71.32%      35 302197 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 105  0.09% 71.41%      35 302732 org.graalvm.compiler.graph.NodeClass.applyEdges
 106  0.09% 71.50%      35 302943 org.graalvm.collections.EconomicMapImpl.getHashIndex
 107  0.09% 71.59%      34 301726 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 108  0.09% 71.68%      34 302565 org.graalvm.compiler.graph.NodeClass.applyEdges
 109  0.09% 71.77%      33 300959 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 110  0.09% 71.85%      33 300976 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 111  0.09% 71.94%      33 301793 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
 112  0.09% 72.03%      33 302533 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 113  0.09% 72.11%      33 302688 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 114  0.09% 72.20%      33 302709 org.graalvm.compiler.lir.ValueConsumer.visitValue
 115  0.09% 72.29%      33 303945 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 116  0.09% 72.37%      33 304266 com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble
 117  0.09% 72.46%      33 304681 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix
 118  0.09% 72.55%      33 304724 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 119  0.08% 72.63%      32 300970 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 120  0.08% 72.71%      31 300975 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 121  0.08% 72.79%      31 302541 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 122  0.08% 72.87%      31 302639 org.graalvm.compiler.nodes.LogicNegationNode.implies
 123  0.08% 72.95%      31 302717 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 124  0.08% 73.04%      31 302807 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval
 125  0.08% 73.11%      30 302561 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 126  0.08% 73.19%      30 303323 org.graalvm.compiler.lir.ValueConsumer.visitValue
 127  0.08% 73.27%      30 303363 org.graalvm.compiler.graph.NodeMap.set
 128  0.08% 73.35%      30 304309 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
 129  0.08% 73.43%      30 304980 com.oracle.truffle.r.runtime.data.RDoubleVector.<init>
 130  0.08% 73.50%      29 301821 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 131  0.08% 73.58%      29 302208 org.graalvm.collections.EconomicMapImpl.compareKeys
 132  0.08% 73.66%      29 302895 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 133  0.07% 73.73%      28 301076 java.lang.String.intern
 134  0.07% 73.80%      28 301706 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 135  0.07% 73.88%      28 302623 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 136  0.07% 73.95%      27 302147 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 137  0.07% 74.02%      27 302757 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 138  0.07% 74.09%      26 301206 java.lang.String.intern
 139  0.07% 74.15%      26 301470 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 140  0.07% 74.22%      26 302785 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 141  0.07% 74.29%      26 302791 org.graalvm.compiler.graph.NodeClass.dataEquals
 142  0.07% 74.36%      26 303349 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 143  0.07% 74.43%      26 304405 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 144  0.07% 74.49%      25 302120 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 145  0.07% 74.56%      25 302144 org.graalvm.collections.EconomicMapImpl.getHashIndex
 146  0.06% 74.62%      24 302440 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 147  0.06% 74.68%      24 303264 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 148  0.06% 74.75%      24 304258 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 149  0.06% 74.81%      24 304319 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 150  0.06% 74.87%      23 300857 java.lang.Throwable.fillInStackTrace
 151  0.06% 74.93%      23 300883 java.lang.invoke.MethodHandleNatives.resolve
 152  0.06% 74.99%      23 301143 java.lang.String.intern
 153  0.06% 75.05%      23 302001 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 154  0.06% 75.11%      23 302248 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 155  0.06% 75.17%      23 302481 sun.nio.fs.UnixNativeDispatcher.access
 156  0.06% 75.23%      23 302893 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 157  0.06% 75.29%      23 302947 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 158  0.06% 75.35%      23 302953 org.graalvm.compiler.core.common.Fields.copy
 159  0.06% 75.41%      23 303151 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 160  0.06% 75.47%      23 303374 org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.readConstantField
 161  0.06% 75.53%      23 304709 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 162  0.06% 75.59%      22 302451 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 163  0.06% 75.65%      22 302516 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 164  0.06% 75.70%      22 302562 org.graalvm.compiler.graph.NodeClass.applyHelper
 165  0.06% 75.76%      22 302673 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes
 166  0.06% 75.82%      22 303074 java.lang.System.identityHashCode
 167  0.05% 75.87%      21 300644 sun.misc.Unsafe.defineAnonymousClass
 168  0.05% 75.93%      21 301164 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 169  0.05% 75.98%      21 301669 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
 170  0.05% 76.04%      21 302288 com.oracle.truffle.r.runtime.nodes.RNode.voidExecute
 171  0.05% 76.09%      21 302297 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 172  0.05% 76.15%      21 302525 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 173  0.05% 76.20%      21 303145 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 174  0.05% 76.26%      21 303193 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 175  0.05% 76.31%      21 303266 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 176  0.05% 76.37%      21 303410 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 177  0.05% 76.42%      21 303439 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
 178  0.05% 76.48%      20 302159 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 179  0.05% 76.53%      20 302160 sun.nio.fs.UnixException.rethrowAsIOException
 180  0.05% 76.58%      20 302904 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 181  0.05% 76.63%      20 303029 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises
 182  0.05% 76.68%      19 300497 java.lang.ClassLoader.loadClass
 183  0.05% 76.73%      19 302192 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 184  0.05% 76.78%      19 302209 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 185  0.05% 76.83%      19 302284 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 186  0.05% 76.88%      19 302320 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 187  0.05% 76.93%      19 302450 com.oracle.truffle.r.runtime.RSource.fromSrcfile
 188  0.05% 76.98%      19 302490 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 189  0.05% 77.03%      19 302805 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 190  0.05% 77.08%      19 303137 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 191  0.05% 77.13%      19 303334 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 192  0.05% 77.18%      19 304332 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 193  0.05% 77.23%      19 304714 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 194  0.05% 77.28%      18 301526 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 195  0.05% 77.33%      18 302179 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 196  0.05% 77.37%      18 302456 org.graalvm.collections.EconomicMapImpl.find
 197  0.05% 77.42%      18 302524 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 198  0.05% 77.47%      18 302980 org.graalvm.compiler.nodes.ValueNode.getStackKind
 199  0.05% 77.51%      18 303346 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 200  0.05% 77.56%      18 303381 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 201  0.05% 77.61%      18 303476 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 202  0.04% 77.65%      17 301087 java.lang.String.intern
 203  0.04% 77.70%      17 301739 java.lang.Object.clone
 204  0.04% 77.74%      17 302052 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 205  0.04% 77.79%      17 302564 org.graalvm.collections.EconomicMapImpl.add
 206  0.04% 77.83%      17 302592 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 207  0.04% 77.88%      17 302738 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 208  0.04% 77.92%      17 302919 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 209  0.04% 77.96%      17 302995 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 210  0.04% 78.01%      16 301521 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.isShareable
 211  0.04% 78.05%      16 301699 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 212  0.04% 78.09%      16 301935 java.lang.Class.isAssignableFrom
 213  0.04% 78.13%      16 302194 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 214  0.04% 78.17%      16 302557 org.graalvm.collections.EconomicMapImpl.find
 215  0.04% 78.22%      16 302903 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 216  0.04% 78.26%      16 302998 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 217  0.04% 78.30%      16 303327 org.graalvm.compiler.lir.LIRInstruction.visitEachState
 218  0.04% 78.34%      16 303462 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 219  0.04% 78.38%      16 303496 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 220  0.04% 78.43%      16 303582 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 221  0.04% 78.47%      16 304990 com.oracle.truffle.r.runtime.data.model.RAbstractVector.createAttributes
 222  0.04% 78.51%      15 300498 java.util.zip.ZipFile.getEntry
 223  0.04% 78.55%      15 301183 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare
 224  0.04% 78.59%      15 301217 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
 225  0.04% 78.62%      15 301517 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 226  0.04% 78.66%      15 301881 org.graalvm.compiler.nodes.GraphDecoder.decode
 227  0.04% 78.70%      15 301886 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute
 228  0.04% 78.74%      15 301917 sun.misc.Unsafe.allocateInstance
 229  0.04% 78.78%      15 302109 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 230  0.04% 78.82%      15 302174 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 231  0.04% 78.86%      15 302452 org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1
 232  0.04% 78.90%      15 302469 java.lang.Object.clone
 233  0.04% 78.94%      15 302772 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 234  0.04% 78.98%      15 303075 org.graalvm.collections.EconomicMapImpl.getHashIndex
 235  0.04% 79.02%      15 303348 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 236  0.04% 79.06%      15 303470 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval
 237  0.04% 79.10%      15 304320 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 238  0.04% 79.13%      14 300074 java.lang.ClassLoader.findBootstrapClass
 239  0.04% 79.17%      14 300806 java.util.zip.ZipFile.getEntry
 240  0.04% 79.21%      14 301676 java.lang.String.intern
 241  0.04% 79.24%      14 302344 java.lang.System.identityHashCode
 242  0.04% 79.28%      14 302363 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 243  0.04% 79.32%      14 302563 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 244  0.04% 79.35%      14 302740 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 245  0.04% 79.39%      14 302834 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 246  0.04% 79.43%      14 303007 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 247  0.04% 79.46%      14 303269 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 248  0.04% 79.50%      14 303446 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand
 249  0.04% 79.54%      14 304336 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 250  0.04% 79.57%      14 304411 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 251  0.04% 79.61%      14 304728 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 252  0.04% 79.65%      14 305081 com.oracle.truffle.r.runtime.data.NativeDataAccess.copyIntNativeData
 253  0.03% 79.68%      13 300161 java.util.zip.ZipFile.read
 254  0.03% 79.71%      13 300861 java.util.zip.ZipFile.read
 255  0.03% 79.75%      13 301530 com.oracle.truffle.r.runtime.data.RBaseObject.<init>
 256  0.03% 79.78%      13 302367 org.graalvm.compiler.graph.NodeWorkList.addAll
 257  0.03% 79.82%      13 302498 jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue
 258  0.03% 79.85%      13 302693 org.graalvm.compiler.nodes.GraphDecoder.handlePhiFunctions
 259  0.03% 79.88%      13 302695 org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath
 260  0.03% 79.92%      13 302879 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 261  0.03% 79.95%      13 302971 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 262  0.03% 79.99%      13 302994 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 263  0.03% 80.02%      13 303265 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 264  0.03% 80.05%      13 303290 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 265  0.03% 80.09%      13 303633 org.graalvm.compiler.lir.ValueConsumer.visitValue
 266  0.03% 80.12%      13 303702 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 267  0.03% 80.15%      12 300823 java.security.AccessController.doPrivileged
 268  0.03% 80.19%      12 301209 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2
 269  0.03% 80.22%      12 301755 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 270  0.03% 80.25%      12 302126 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 271  0.03% 80.28%      12 302338 com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute
 272  0.03% 80.31%      12 302342 org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining
 273  0.03% 80.34%      12 302566 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 274  0.03% 80.37%      12 302576 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 275  0.03% 80.41%      12 302618 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 276  0.03% 80.44%      12 302796 org.graalvm.compiler.lir.ValueConsumer.visitValue
 277  0.03% 80.47%      12 303054 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 278  0.03% 80.50%      12 303153 org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves
 279  0.03% 80.53%      12 303774 org.graalvm.compiler.lir.LIRInstructionClass.forEachUse
 280  0.03% 80.56%      12 304229 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 281  0.03% 80.59%      12 304278 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 282  0.03% 80.63%      12 304429 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 283  0.03% 80.66%      12 305086 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 284  0.03% 80.69%      12 305155 com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector
 285  0.03% 80.72%      11 300969 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 286  0.03% 80.75%      11 301391 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call
 287  0.03% 80.77%      11 301835 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 288  0.03% 80.80%      11 301922 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 289  0.03% 80.83%      11 301967 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 290  0.03% 80.86%      11 302064 org.graalvm.compiler.graph.NodeWorkList.<init>
 291  0.03% 80.89%      11 302107 java.lang.Object.clone
 292  0.03% 80.92%      11 302211 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute
 293  0.03% 80.95%      11 302237 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 294  0.03% 80.98%      11 302514 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 295  0.03% 81.01%      11 302653 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 296  0.03% 81.03%      11 302705 org.graalvm.compiler.graph.Graph.findDuplicate
 297  0.03% 81.06%      11 302845 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 298  0.03% 81.09%      11 302867 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 299  0.03% 81.12%      11 302910 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 300  0.03% 81.15%      11 302989 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 301  0.03% 81.18%      11 303551 org.graalvm.collections.EconomicMapImpl.createHash
 302  0.03% 81.21%      11 303776 org.graalvm.compiler.lir.LIRFrameState.forEachState
 303  0.03% 81.24%      11 304270 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 304  0.03% 81.26%      11 305088 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 305  0.03% 81.29%      10 300985 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 306  0.03% 81.32%      10 301139 java.lang.Object.clone
 307  0.03% 81.34%      10 301167 java.lang.Class.getSuperclass
 308  0.03% 81.37%      10 301189 com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute
 309  0.03% 81.40%      10 301529 com.oracle.truffle.r.runtime.RArguments.getCall
 310  0.03% 81.42%      10 301950 sun.nio.fs.UnixException.rethrowAsIOException
 311  0.03% 81.45%      10 301970 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 312  0.03% 81.47%      10 302025 sun.misc.Unsafe.getAddress
 313  0.03% 81.50%      10 302041 java.lang.Object.clone
 314  0.03% 81.53%      10 302088 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 315  0.03% 81.55%      10 302104 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 316  0.03% 81.58%      10 302110 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 317  0.03% 81.60%      10 302130 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 318  0.03% 81.63%      10 302176 org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run
 319  0.03% 81.66%      10 302201 org.graalvm.compiler.phases.common.FixReadsPhase.run
 320  0.03% 81.68%      10 302307 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 321  0.03% 81.71%      10 302387 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 322  0.03% 81.74%      10 302487 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 323  0.03% 81.76%      10 302513 org.graalvm.compiler.nodes.ValueNode.stamp
 324  0.03% 81.79%      10 302526 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 325  0.03% 81.81%      10 302551 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 326  0.03% 81.84%      10 302594 org.graalvm.compiler.graph.NodeWorkList.addAll
 327  0.03% 81.87%      10 302659 org.graalvm.compiler.nodes.spi.NodeWithState.states
 328  0.03% 81.89%      10 302880 org.graalvm.compiler.nodes.GraphEncoder.encode
 329  0.03% 81.92%      10 302937 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 330  0.03% 81.95%      10 302983 org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>
 331  0.03% 81.97%      10 303015 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 332  0.03% 82.00%      10 303182 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 333  0.03% 82.02%      10 303552 org.graalvm.collections.EconomicMapImpl.add
 334  0.03% 82.05%      10 303603 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 335  0.03% 82.08%      10 303671 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 336  0.03% 82.10%      10 303748 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 337  0.03% 82.13%      10 303960 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 338  0.03% 82.15%      10 304279 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 339  0.03% 82.18%      10 304447 com.oracle.truffle.r.runtime.context.RContext.getInstance
 340  0.02% 82.20%       9 301001 org.antlr.v4.runtime.misc.FlexibleHashMap.get
 341  0.02% 82.23%       9 301146 java.lang.Object.hashCode
 342  0.02% 82.25%       9 301157 java.lang.Class.isArray
 343  0.02% 82.28%       9 301174 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 344  0.02% 82.30%       9 301439 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 345  0.02% 82.32%       9 301467 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 346  0.02% 82.35%       9 302161 org.graalvm.collections.EconomicMapImpl.findWithCollision
 347  0.02% 82.37%       9 302166 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 348  0.02% 82.39%       9 302243 com.oracle.truffle.api.library.LibraryFactory.getUncached
 349  0.02% 82.42%       9 302295 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test
 350  0.02% 82.44%       9 302306 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 351  0.02% 82.46%       9 302331 com.oracle.truffle.api.TruffleFile.checkAccess
 352  0.02% 82.49%       9 302476 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 353  0.02% 82.51%       9 302518 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 354  0.02% 82.53%       9 302555 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 355  0.02% 82.56%       9 302614 sun.misc.Unsafe.getAddress
 356  0.02% 82.58%       9 302675 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 357  0.02% 82.61%       9 302728 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 358  0.02% 82.63%       9 302777 sun.misc.Unsafe.getAddress
 359  0.02% 82.65%       9 302801 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 360  0.02% 82.68%       9 302929 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 361  0.02% 82.70%       9 302941 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 362  0.02% 82.72%       9 302951 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 363  0.02% 82.75%       9 302960 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 364  0.02% 82.77%       9 303009 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 365  0.02% 82.79%       9 303020 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall
 366  0.02% 82.82%       9 303025 java.util.ArrayDeque.addLast
 367  0.02% 82.84%       9 303073 org.graalvm.collections.EconomicMapImpl.compareKeys
 368  0.02% 82.86%       9 303203 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 369  0.02% 82.89%       9 303284 org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions
 370  0.02% 82.91%       9 303288 com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute
 371  0.02% 82.94%       9 303324 org.graalvm.compiler.lir.dfa.LocationMarker$1.doState
 372  0.02% 82.96%       9 303353 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 373  0.02% 82.98%       9 303355 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
 374  0.02% 83.01%       9 303361 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 375  0.02% 83.03%       9 303384 org.graalvm.compiler.graph.NodeClass.applyEdges
 376  0.02% 83.05%       9 303423 org.graalvm.compiler.graph.NodeClass.dataEquals
 377  0.02% 83.08%       9 303434 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 378  0.02% 83.10%       9 303452 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 379  0.02% 83.12%       9 303829 org.graalvm.compiler.graph.InputEdges.update
 380  0.02% 83.15%       9 303880 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 381  0.02% 83.17%       9 304048 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 382  0.02% 83.19%       9 304378 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 383  0.02% 83.22%       9 304726 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 384  0.02% 83.24%       8 300973 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 385  0.02% 83.26%       8 301150 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
 386  0.02% 83.28%       8 301321 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 387  0.02% 83.30%       8 301329 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 388  0.02% 83.32%       8 301671 com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments
 389  0.02% 83.34%       8 301713 java.lang.Object.clone
 390  0.02% 83.36%       8 301795 org.graalvm.compiler.nodes.GraphDecoder.decode
 391  0.02% 83.39%       8 301899 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs
 392  0.02% 83.41%       8 302047 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 393  0.02% 83.43%       8 302150 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 394  0.02% 83.45%       8 302257 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 395  0.02% 83.47%       8 302289 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 396  0.02% 83.49%       8 302327 org.graalvm.compiler.nodes.LogicNegationNode.implies
 397  0.02% 83.51%       8 302412 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 398  0.02% 83.53%       8 302449 org.graalvm.compiler.nodes.GraphEncoder.prepare
 399  0.02% 83.55%       8 302464 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 400  0.02% 83.57%       8 302497 org.graalvm.compiler.lir.LIRFrameState.forEachState
 401  0.02% 83.60%       8 302510 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 402  0.02% 83.62%       8 302543 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 403  0.02% 83.64%       8 302548 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 404  0.02% 83.66%       8 302694 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 405  0.02% 83.68%       8 302775 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 406  0.02% 83.70%       8 302892 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 407  0.02% 83.72%       8 302905 org.graalvm.compiler.nodes.ValueNode.stamp
 408  0.02% 83.74%       8 302955 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 409  0.02% 83.76%       8 302963 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 410  0.02% 83.78%       8 302996 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 411  0.02% 83.80%       8 303017 jdk.vm.ci.hotspot.CompilerToVM.asReflectionField
 412  0.02% 83.83%       8 303062 org.graalvm.collections.EconomicMapImpl.find
 413  0.02% 83.85%       8 303063 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 414  0.02% 83.87%       8 303066 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>
 415  0.02% 83.89%       8 303285 org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode
 416  0.02% 83.91%       8 303321 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply
 417  0.02% 83.93%       8 303330 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 418  0.02% 83.95%       8 303365 org.graalvm.collections.EconomicMapImpl.find
 419  0.02% 83.97%       8 303406 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 420  0.02% 83.99%       8 303433 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 421  0.02% 84.01%       8 303442 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny
 422  0.02% 84.04%       8 303794 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 423  0.02% 84.06%       8 304232 org.graalvm.compiler.graph.NodeMap.set
 424  0.02% 84.07%       7 300260 java.lang.Class.forName0
 425  0.02% 84.09%       7 300706 java.net.URLClassLoader.findClass
 426  0.02% 84.11%       7 300882 java.util.zip.ZipFile.getNextEntry
 427  0.02% 84.13%       7 301092 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 428  0.02% 84.15%       7 301211 com.oracle.truffle.api.object.Location.get
 429  0.02% 84.17%       7 301326 java.util.zip.InflaterInputStream.<init>
 430  0.02% 84.18%       7 301701 java.lang.Class.isPrimitive
 431  0.02% 84.20%       7 301876 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 432  0.02% 84.22%       7 302053 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 433  0.02% 84.24%       7 302132 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 434  0.02% 84.26%       7 302222 java.lang.Object.clone
 435  0.02% 84.28%       7 302255 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 436  0.02% 84.29%       7 302258 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0
 437  0.02% 84.31%       7 302336 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.foldPendingTest
 438  0.02% 84.33%       7 302407 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 439  0.02% 84.35%       7 302419 org.graalvm.compiler.core.LIRGenerationPhase.run
 440  0.02% 84.37%       7 302453 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 441  0.02% 84.39%       7 302560 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 442  0.02% 84.40%       7 302610 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 443  0.02% 84.42%       7 302646 org.graalvm.compiler.graph.NodeClass.applyHelper
 444  0.02% 84.44%       7 302647 com.oracle.truffle.r.nodes.access.ConstantNode.execute
 445  0.02% 84.46%       7 302684 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 446  0.02% 84.48%       7 302787 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 447  0.02% 84.50%       7 302851 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 448  0.02% 84.51%       7 302891 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 449  0.02% 84.53%       7 302920 org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual
 450  0.02% 84.55%       7 302997 org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit
 451  0.02% 84.57%       7 303110 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 452  0.02% 84.59%       7 303200 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope
 453  0.02% 84.61%       7 303289 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 454  0.02% 84.62%       7 303317 java.util.ArrayList.addAll
 455  0.02% 84.64%       7 303326 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 456  0.02% 84.66%       7 303336 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 457  0.02% 84.68%       7 303463 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 458  0.02% 84.70%       7 303497 org.graalvm.compiler.nodes.ValueNode.stamp
 459  0.02% 84.72%       7 303549 org.graalvm.collections.EconomicMapImpl.put
 460  0.02% 84.73%       7 303579 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 461  0.02% 84.75%       7 303586 org.graalvm.collections.EconomicMapImpl.findLinear
 462  0.02% 84.77%       7 303624 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed
 463  0.02% 84.79%       7 303625 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 464  0.02% 84.81%       7 303648 org.graalvm.compiler.nodes.LogicNode.implies
 465  0.02% 84.83%       7 303850 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute
 466  0.02% 84.84%       7 303879 org.graalvm.compiler.graph.Graph.grow
 467  0.02% 84.86%       7 303942 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
 468  0.02% 84.88%       7 303948 org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd
 469  0.02% 84.90%       7 304329 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 470  0.02% 84.92%       7 304436 java.util.BitSet.clone
 471  0.02% 84.94%       7 304443 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval
 472  0.02% 84.95%       7 304478 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 473  0.02% 84.97%       7 304568 jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset
 474  0.02% 84.99%       7 305130 sun.misc.Unsafe.copyMemory
 475  0.02% 85.01%       6 301004 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 476  0.02% 85.02%       6 301173 java.lang.Object.hashCode
 477  0.02% 85.04%       6 301387 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 478  0.02% 85.05%       6 301471 java.lang.Object.hashCode
 479  0.02% 85.07%       6 301688 java.lang.System.identityHashCode
 480  0.02% 85.09%       6 301720 sun.misc.Unsafe.getAddress
 481  0.02% 85.10%       6 301781 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 482  0.02% 85.12%       6 301902 com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl
 483  0.02% 85.13%       6 301912 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 484  0.02% 85.15%       6 301942 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode
 485  0.02% 85.16%       6 301977 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 486  0.02% 85.18%       6 302020 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 487  0.02% 85.20%       6 302050 org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply
 488  0.02% 85.21%       6 302097 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 489  0.02% 85.23%       6 302115 org.graalvm.collections.EconomicMapImpl.find
 490  0.02% 85.24%       6 302246 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 491  0.02% 85.26%       6 302249 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 492  0.02% 85.27%       6 302321 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 493  0.02% 85.29%       6 302360 com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctions$GetDimNamesAttributeNode.getDimNames
 494  0.02% 85.31%       6 302438 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 495  0.02% 85.32%       6 302448 java.lang.Class.getSuperclass
 496  0.02% 85.34%       6 302462 org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant
 497  0.02% 85.35%       6 302466 org.graalvm.compiler.core.LIRGenerationPhase.run
 498  0.02% 85.37%       6 302628 org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke
 499  0.02% 85.38%       6 302664 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 500  0.02% 85.40%       6 302722 org.graalvm.compiler.graph.NodeWorkList.addAll
 501  0.02% 85.42%       6 302803 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 502  0.02% 85.43%       6 302812 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 503  0.02% 85.45%       6 302840 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 504  0.02% 85.46%       6 302855 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 505  0.02% 85.48%       6 302887 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 506  0.02% 85.49%       6 302902 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 507  0.02% 85.51%       6 302927 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 508  0.02% 85.53%       6 302933 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 509  0.02% 85.54%       6 302958 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 510  0.02% 85.56%       6 302978 com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject
 511  0.02% 85.57%       6 303005 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 512  0.02% 85.59%       6 303013 org.graalvm.collections.EconomicMapImpl.find
 513  0.02% 85.60%       6 303043 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 514  0.02% 85.62%       6 303045 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 515  0.02% 85.64%       6 303104 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority
 516  0.02% 85.65%       6 303113 org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness
 517  0.02% 85.67%       6 303161 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 518  0.02% 85.68%       6 303179 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 519  0.02% 85.70%       6 303281 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 520  0.02% 85.71%       6 303318 java.util.ArrayList.forEach
 521  0.02% 85.73%       6 303373 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 522  0.02% 85.75%       6 303398 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 523  0.02% 85.76%       6 303430 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 524  0.02% 85.78%       6 303457 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 525  0.02% 85.79%       6 303485 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 526  0.02% 85.81%       6 303494 org.graalvm.compiler.graph.NodeClass.registerAtSuccessorsAsPredecessor
 527  0.02% 85.82%       6 303527 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 528  0.02% 85.84%       6 303545 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 529  0.02% 85.86%       6 303567 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 530  0.02% 85.87%       6 303602 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.fillKillSet
 531  0.02% 85.89%       6 303631 org.graalvm.compiler.lir.util.IndexedValueMap.forEach
 532  0.02% 85.90%       6 303650 org.graalvm.compiler.graph.Node.replaceAtAllUsages
 533  0.02% 85.92%       6 303692 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 534  0.02% 85.93%       6 303897 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias
 535  0.02% 85.95%       6 303940 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 536  0.02% 85.97%       6 303990 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 537  0.02% 85.98%       6 304059 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove
 538  0.02% 86.00%       6 304061 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 539  0.02% 86.01%       6 304268 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 540  0.02% 86.03%       6 304327 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 541  0.02% 86.04%       6 304428 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 542  0.02% 86.06%       6 304433 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 543  0.02% 86.08%       6 304491 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 544  0.02% 86.09%       6 304742 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 545  0.02% 86.11%       6 304796 org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter
 546  0.02% 86.12%       6 304932 java.util.Arrays.copyOf
 547  0.02% 86.14%       6 304995 com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add
 548  0.01% 86.15%       5 300963 org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions
 549  0.01% 86.16%       5 300983 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 550  0.01% 86.18%       5 301212 sun.misc.Unsafe.copyMemory
 551  0.01% 86.19%       5 301414 org.antlr.v4.runtime.atn.SingletonPredictionContext.equals
 552  0.01% 86.20%       5 301429 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 553  0.01% 86.22%       5 301468 java.lang.Class.isPrimitive
 554  0.01% 86.23%       5 301505 com.oracle.truffle.r.nodes.function.opt.UnShareObjectNodeGen.execute
 555  0.01% 86.24%       5 301507 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 556  0.01% 86.26%       5 301695 java.lang.Object.clone
 557  0.01% 86.27%       5 301718 org.graalvm.compiler.nodes.ConstantNode.forConstant
 558  0.01% 86.28%       5 301823 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 559  0.01% 86.30%       5 302006 java.lang.Object.clone
 560  0.01% 86.31%       5 302058 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 561  0.01% 86.32%       5 302217 java.lang.Object.clone
 562  0.01% 86.33%       5 302232 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 563  0.01% 86.35%       5 302268 org.graalvm.collections.EconomicMapImpl.find
 564  0.01% 86.36%       5 302303 java.lang.Class.isArray
 565  0.01% 86.37%       5 302314 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 566  0.01% 86.39%       5 302345 org.graalvm.compiler.nodes.calc.ShiftNode.getOp
 567  0.01% 86.40%       5 302350 java.lang.Object.clone
 568  0.01% 86.41%       5 302489 java.util.ArrayList.<init>
 569  0.01% 86.43%       5 302586 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 570  0.01% 86.44%       5 302596 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 571  0.01% 86.45%       5 302606 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 572  0.01% 86.47%       5 302621 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 573  0.01% 86.48%       5 302674 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit
 574  0.01% 86.49%       5 302701 org.graalvm.compiler.graph.Graph.register
 575  0.01% 86.50%       5 302718 com.oracle.truffle.r.runtime.data.RAttributable.<init>
 576  0.01% 86.52%       5 302814 org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks
 577  0.01% 86.53%       5 302881 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 578  0.01% 86.54%       5 302896 org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder
 579  0.01% 86.56%       5 302901 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 580  0.01% 86.57%       5 302966 org.graalvm.collections.EconomicMapImpl.findLinear
 581  0.01% 86.58%       5 303044 org.graalvm.compiler.graph.Node.safeDelete
 582  0.01% 86.60%       5 303115 org.graalvm.compiler.nodes.IfNode.simplify
 583  0.01% 86.61%       5 303121 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 584  0.01% 86.62%       5 303123 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 585  0.01% 86.64%       5 303140 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 586  0.01% 86.65%       5 303163 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 587  0.01% 86.66%       5 303180 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 588  0.01% 86.68%       5 303188 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 589  0.01% 86.69%       5 303218 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate
 590  0.01% 86.70%       5 303224 org.graalvm.collections.EconomicMapImpl.getHashIndex
 591  0.01% 86.71%       5 303245 org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply
 592  0.01% 86.73%       5 303246 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 593  0.01% 86.74%       5 303308 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 594  0.01% 86.75%       5 303364 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 595  0.01% 86.77%       5 303372 org.graalvm.compiler.nodes.GraphEncoder.encode
 596  0.01% 86.78%       5 303386 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 597  0.01% 86.79%       5 303420 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 598  0.01% 86.81%       5 303421 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 599  0.01% 86.82%       5 303448 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 600  0.01% 86.83%       5 303471 org.graalvm.collections.EconomicMapImpl.compareKeys
 601  0.01% 86.85%       5 303473 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 602  0.01% 86.86%       5 303483 org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run
 603  0.01% 86.87%       5 303498 org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd
 604  0.01% 86.88%       5 303529 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 605  0.01% 86.90%       5 303537 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 606  0.01% 86.91%       5 303540 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 607  0.01% 86.92%       5 303541 org.graalvm.compiler.nodes.FrameState.applyToVirtual
 608  0.01% 86.94%       5 303548 org.graalvm.compiler.graph.NodeInputList.update
 609  0.01% 86.95%       5 303597 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 610  0.01% 86.96%       5 303622 org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>
 611  0.01% 86.98%       5 303652 org.graalvm.compiler.nodes.StructuredGraph$1$1.hasNext
 612  0.01% 86.99%       5 303722 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand
 613  0.01% 87.00%       5 303762 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 614  0.01% 87.02%       5 303800 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 615  0.01% 87.03%       5 303842 org.graalvm.compiler.lir.dfa.LocationMarker.build
 616  0.01% 87.04%       5 303932 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray
 617  0.01% 87.05%       5 303933 org.graalvm.compiler.graph.Graph.findDuplicate
 618  0.01% 87.07%       5 304077 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize
 619  0.01% 87.08%       5 304105 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree
 620  0.01% 87.09%       5 304117 org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>
 621  0.01% 87.11%       5 304154 org.graalvm.compiler.nodes.GraphDecoder.decode
 622  0.01% 87.12%       5 304287 org.graalvm.compiler.lir.LIRFrameState.processValues
 623  0.01% 87.13%       5 304379 org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.postprocess
 624  0.01% 87.15%       5 304550 org.graalvm.collections.EconomicMapImpl.find
 625  0.01% 87.16%       5 304571 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 626  0.01% 87.17%       5 304575 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 627  0.01% 87.19%       5 304588 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 628  0.01% 87.20%       5 304619 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$$Lambda$914.1202923699.accept
 629  0.01% 87.21%       5 304665 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 630  0.01% 87.23%       5 304697 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 631  0.01% 87.24%       5 304751 org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph
 632  0.01% 87.25%       5 304753 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 633  0.01% 87.26%       5 304799 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 634  0.01% 87.27%       4 300159 java.lang.ClassLoader.findBootstrapClass
 635  0.01% 87.29%       4 300827 java.util.jar.JarFile.getMetaInfEntryNames
 636  0.01% 87.30%       4 300955 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 637  0.01% 87.31%       4 300972 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 638  0.01% 87.32%       4 301093 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 639  0.01% 87.33%       4 301162 com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue
 640  0.01% 87.34%       4 301317 java.util.zip.ZipFile.getEntryTime
 641  0.01% 87.35%       4 301388 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
 642  0.01% 87.36%       4 301438 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 643  0.01% 87.37%       4 301662 com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess
 644  0.01% 87.38%       4 301664 sun.nio.fs.UnixFileSystemProvider.checkAccess
 645  0.01% 87.39%       4 301682 java.lang.Class.isPrimitive
 646  0.01% 87.40%       4 301710 java.lang.Class.isPrimitive
 647  0.01% 87.41%       4 301780 org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons
 648  0.01% 87.42%       4 301830 jdk.vm.ci.hotspot.CompilerToVM.getBytecode
 649  0.01% 87.43%       4 302162 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 650  0.01% 87.44%       4 302186 com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply
 651  0.01% 87.45%       4 302193 com.oracle.truffle.r.runtime.ops.na.NACheck.enable
 652  0.01% 87.46%       4 302229 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply
 653  0.01% 87.47%       4 302290 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 654  0.01% 87.48%       4 302309 com.oracle.truffle.r.nodes.control.RLengthNode.doCachedContainer
 655  0.01% 87.49%       4 302359 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 656  0.01% 87.51%       4 302392 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 657  0.01% 87.52%       4 302422 org.graalvm.compiler.lir.dfa.LocationMarker.build
 658  0.01% 87.53%       4 302433 org.graalvm.compiler.lir.dfa.LocationMarker.build
 659  0.01% 87.54%       4 302437 org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize
 660  0.01% 87.55%       4 302507 jdk.vm.ci.hotspot.CompilerToVM.getHostClass
 661  0.01% 87.56%       4 302571 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 662  0.01% 87.57%       4 302582 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 663  0.01% 87.58%       4 302641 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 664  0.01% 87.59%       4 302669 org.graalvm.compiler.nodes.ValueNode.stamp
 665  0.01% 87.60%       4 302680 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 666  0.01% 87.61%       4 302682 org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply
 667  0.01% 87.62%       4 302697 org.graalvm.compiler.lir.dfa.MarkBasePointersPhase$Marker$BasePointersSet.equals
 668  0.01% 87.63%       4 302704 java.lang.ClassValue.get
 669  0.01% 87.64%       4 302720 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 670  0.01% 87.65%       4 302733 org.graalvm.collections.EconomicMapImpl.getHashIndex
 671  0.01% 87.66%       4 302774 java.util.ArrayDeque.poll
 672  0.01% 87.67%       4 302810 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock
 673  0.01% 87.68%       4 302811 org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots
 674  0.01% 87.69%       4 302844 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks
 675  0.01% 87.70%       4 302854 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.getMetaAccess
 676  0.01% 87.71%       4 302888 java.util.Collections$UnmodifiableCollection$1.hasNext
 677  0.01% 87.73%       4 302894 org.graalvm.compiler.core.common.type.StampPair.hashCode
 678  0.01% 87.74%       4 302946 org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull
 679  0.01% 87.75%       4 303037 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper
 680  0.01% 87.76%       4 303038 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 681  0.01% 87.77%       4 303039 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 682  0.01% 87.78%       4 303087 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 683  0.01% 87.79%       4 303088 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 684  0.01% 87.80%       4 303098 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 685  0.01% 87.81%       4 303099 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 686  0.01% 87.82%       4 303124 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode
 687  0.01% 87.83%       4 303132 org.graalvm.compiler.phases.common.AddressLoweringPhase.run
 688  0.01% 87.84%       4 303138 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 689  0.01% 87.85%       4 303165 java.util.TimSort.binarySort
 690  0.01% 87.86%       4 303206 com.oracle.truffle.api.object.Location.get
 691  0.01% 87.87%       4 303208 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 692  0.01% 87.88%       4 303209 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 693  0.01% 87.89%       4 303236 com.oracle.truffle.r.nodes.function.PromiseHelperNode.visibleEvaluate
 694  0.01% 87.90%       4 303268 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 695  0.01% 87.91%       4 303275 org.graalvm.compiler.nodes.memory.ReadNode.canonicalizeRead
 696  0.01% 87.92%       4 303278 org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.isCallTargetCloningAllowed
 697  0.01% 87.93%       4 303297 com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.searchGeneric
 698  0.01% 87.95%       4 303306 org.graalvm.compiler.lir.gen.LIRGenerator.getLIRKind
 699  0.01% 87.96%       4 303368 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 700  0.01% 87.97%       4 303418 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 701  0.01% 87.98%       4 303435 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 702  0.01% 87.99%       4 303436 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.isMoveToSelf
 703  0.01% 88.00%       4 303475 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
 704  0.01% 88.01%       4 303557 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow
 705  0.01% 88.02%       4 303560 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 706  0.01% 88.03%       4 303561 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 707  0.01% 88.04%       4 303565 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 708  0.01% 88.05%       4 303584 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 709  0.01% 88.06%       4 303591 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 710  0.01% 88.07%       4 303613 org.graalvm.compiler.java.BciBlockMapping.fixLoopBits
 711  0.01% 88.08%       4 303643 com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue
 712  0.01% 88.09%       4 303649 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 713  0.01% 88.10%       4 303673 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 714  0.01% 88.11%       4 303687 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 715  0.01% 88.12%       4 303691 org.graalvm.collections.EconomicMapImpl.getHashIndex
 716  0.01% 88.13%       4 303706 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 717  0.01% 88.14%       4 303728 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 718  0.01% 88.15%       4 303737 com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode
 719  0.01% 88.17%       4 303741 java.util.Collections$UnmodifiableCollection$1.hasNext
 720  0.01% 88.18%       4 303745 org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining
 721  0.01% 88.19%       4 303769 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit
 722  0.01% 88.20%       4 303772 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 723  0.01% 88.21%       4 303811 org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget
 724  0.01% 88.22%       4 303813 org.graalvm.compiler.core.common.calc.Condition.foldCondition
 725  0.01% 88.23%       4 303818 org.graalvm.collections.EconomicMapImpl.getHashIndex
 726  0.01% 88.24%       4 303823 com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute
 727  0.01% 88.25%       4 303840 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 728  0.01% 88.26%       4 303953 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 729  0.01% 88.27%       4 303967 java.util.ArrayList.addAll
 730  0.01% 88.28%       4 303996 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 731  0.01% 88.29%       4 304017 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 732  0.01% 88.30%       4 304018 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 733  0.01% 88.31%       4 304093 org.graalvm.compiler.nodes.ValueNode.hasUsagesOtherThan
 734  0.01% 88.32%       4 304175 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 735  0.01% 88.33%       4 304199 org.graalvm.compiler.graph.NodeWorkList.addAll
 736  0.01% 88.34%       4 304215 org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.queueSuccessors
 737  0.01% 88.35%       4 304314 org.graalvm.compiler.nodes.IfNode.simplify
 738  0.01% 88.36%       4 304339 org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject
 739  0.01% 88.37%       4 304341 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 740  0.01% 88.39%       4 304380 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 741  0.01% 88.40%       4 304399 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 742  0.01% 88.41%       4 304400 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 743  0.01% 88.42%       4 304408 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault
 744  0.01% 88.43%       4 304456 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt
 745  0.01% 88.44%       4 304483 org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp
 746  0.01% 88.45%       4 304522 org.graalvm.compiler.nodes.FrameState.<init>
 747  0.01% 88.46%       4 304567 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 748  0.01% 88.47%       4 304648 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 749  0.01% 88.48%       4 304719 org.graalvm.compiler.lir.ValueConsumer.visitValue
 750  0.01% 88.49%       4 304783 org.graalvm.compiler.nodes.PhiNode.canonical
 751  0.01% 88.50%       4 304786 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 752  0.01% 88.51%       4 304788 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 753  0.01% 88.52%       4 304911 org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.onInterpreterCall
CPU SAMPLES END
