JAVA PROFILE 1.0.1, created Wed Jan 13 22:13:46 2021

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018c, id = 200001, name="main", group="main")
THREAD START (obj=5000018c, id = 200004, name="nfi-gc", group="main")
THREAD START (obj=500008ce, id = 200005, name="TruffleCompilerThread-28", group="main")
THREAD START (obj=50000928, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018c, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD START (obj=5000018c, id = 200008, name="process reaper", group="system")
THREAD START (obj=50002d3e, id = 200009, name="system", group="main")
THREAD END (id = 200009)
THREAD START (obj=50002d3e, id = 200010, name="system", group="main")
THREAD END (id = 200010)
THREAD START (obj=500008ce, id = 200011, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50002d3e, id = 200012, name="Thread-7", group="main")
THREAD START (obj=5000018c, id = 200013, name="pool-1-thread-1", group="main")
THREAD END (id = 200008)
THREAD START (obj=5000018c, id = 200015, name="SIGINT handler", group="system")
THREAD START (obj=500008ce, id = 200016, name="Thread-0", group="main")
THREAD END (id = 200016)
THREAD START (obj=5000018c, id = 200017, name="Thread-1", group="main")
THREAD START (obj=5000018c, id = 200018, name="Thread-3", group="main")
THREAD END (id = 200018)
THREAD END (id = 200017)
THREAD END (id = 200015)
TRACE 301617:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:283)
TRACE 301520:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:290)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:133)
TRACE 301691:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:859)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302198:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 301999:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 301756:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 301647:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4297)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4291)
TRACE 301646:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 301648:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 301958:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 304084:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:50)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 302777:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 301199:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
TRACE 304290:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:362)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:353)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 300071:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:757)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 301887:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:117)
TRACE 304086:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:51)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 304087:
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 304682:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:110)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.executeAndSpecialize(ArrayNodeGen.java:115)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:58)
TRACE 301690:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302076:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 301686:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 302321:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 301317:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 301015:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 304215:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 301192:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:962)
TRACE 301832:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 301650:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1939)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 301740:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:457)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:238)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:150)
TRACE 304458:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 301688:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:152)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:581)
TRACE 302083:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1153)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
TRACE 302484:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 301668:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:451)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302641:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 304293:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:353)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 302492:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:581)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:644)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
TRACE 301781:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 304498:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:80)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:300)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 304519:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 304249:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:80)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:300)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 301146:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:257)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:785)
TRACE 302001:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 302312:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302775:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 301802:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302213:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 300947:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 300945:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300958:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302377:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:250)
TRACE 303370:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 304800:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 304791:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 302127:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 304265:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 301685:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 301947:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1013)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1007)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 302593:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 301970:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 302346:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303217:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 304423:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 301676:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 301773:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
TRACE 301963:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302015:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 302586:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:658)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:758)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 300967:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301790:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 301696:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4435)
TRACE 302327:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 301693:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:571)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 301961:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 304079:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 300961:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 300969:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:58)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302251:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302284:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 302635:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302173:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1145)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
TRACE 302308:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:162)
TRACE 302910:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:558)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:274)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 301972:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 304193:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 302171:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4667)
TRACE 300965:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 301178:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:290)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SlowPathExecuteNode.slowPathExecute(FunctionExecuteNode.java:265)
TRACE 302624:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 301203:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:695)
TRACE 302557:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1306)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1297)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 302929:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:791)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303120:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:381)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 304459:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:132)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 300970:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 302320:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302446:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2968)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2947)
	com.oracle.truffle.r.runtime.RSerialize.access$2600(RSerialize.java:136)
TRACE 302660:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 304173:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.executeAndSpecialize(Rf_copyMatrixCallGen.java:125)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:96)
TRACE 301692:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 304197:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 304217:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:132)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 301834:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:841)
TRACE 301873:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 302256:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
TRACE 302670:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
TRACE 304437:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 301168:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 302591:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 304362:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 302116:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 302193:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
TRACE 302211:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:105)
TRACE 300706:
	java.lang.ClassLoader.loadClass(ClassLoader.java:431)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 301992:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:894)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302497:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:640)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302737:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302800:
	org.graalvm.compiler.graph.NodeBitMap.isMarked(NodeBitMap.java:71)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.hasScalarReplacedInputs(EffectsClosure.java:512)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:241)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
TRACE 303199:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:685)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 304097:
	com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble(MersenneTwister.java:185)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
TRACE 301820:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 301848:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302027:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
TRACE 302203:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
TRACE 302276:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 302844:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse(LinearScanLifetimeAnalysisPhase.java:525)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:809)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 304085:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 304844:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:110)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:44)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
TRACE 300964:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 301746:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 302050:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302134:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 303406:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:78)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 301091:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1200)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:909)
TRACE 302000:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
TRACE 302152:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
TRACE 302508:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:500)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 302613:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302872:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302907:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:880)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303401:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:78)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 300151:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:316)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
	java.util.jar.JarFile.getJarEntry(JarFile.java:223)
TRACE 300586:
	sun.misc.Unsafe.defineAnonymousClass(Unsafe.java:Unknown line)
	java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)
	java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
	java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)
TRACE 301731:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 301749:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:512)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:359)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:423)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:582)
TRACE 302372:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302460:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:198)
TRACE 302774:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:694)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302814:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304248:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:246)
TRACE 304438:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 300801:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 300882:
	java.lang.invoke.MethodHandleNatives.resolve(MethodHandleNatives.java:Unknown line)
	java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)
	java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)
	java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)
TRACE 301073:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:417)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:350)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:68)
TRACE 301306:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:364)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:86)
TRACE 301760:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1762)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1738)
TRACE 302230:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
TRACE 302313:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 303391:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 301944:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 302007:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:376)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302289:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 303144:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:795)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:369)
TRACE 304218:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
TRACE 304798:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 300783:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 301036:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 301670:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:103)
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
TRACE 301839:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:74)
	com.oracle.truffle.r.runtime.data.model.RAbstractAtomicVector.<init>(RAbstractAtomicVector.java:40)
TRACE 301915:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 301939:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:159)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302385:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 303014:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 303973:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1277)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:364)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 304365:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 304464:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 304499:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:246)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:119)
TRACE 301315:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:350)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:68)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 301699:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4372)
TRACE 301827:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 301990:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
TRACE 301996:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:204)
	org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:181)
	org.graalvm.collections.EconomicMapImpl.create(EconomicMapImpl.java:158)
TRACE 302397:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
TRACE 302527:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:278)
TRACE 302563:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 302631:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303118:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 304216:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304789:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
TRACE 300074:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 301841:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
TRACE 302029:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302102:
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
TRACE 302281:
	org.graalvm.compiler.graph.InputEdges.update(InputEdges.java:66)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1250)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302439:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302617:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302686:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302833:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 303007:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:125)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:112)
	org.graalvm.compiler.graph.Node.clone(Node.java:1064)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
TRACE 303036:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303239:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:65)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 303607:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 300253:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:348)
	sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
TRACE 301149:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 301166:
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
TRACE 301643:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:771)
TRACE 301667:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 301673:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.allocateInstance(NodeClass.java:856)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1386)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 301682:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301825:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302039:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302140:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 302151:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 302309:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302402:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302682:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:697)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:330)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:457)
TRACE 303117:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
TRACE 303197:
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:93)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303430:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:365)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
TRACE 300966:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:454)
TRACE 301861:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.Arrays$ArrayList.toArray(Arrays.java:3823)
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.<init>(CommitAllocationNode.java:77)
TRACE 301905:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
TRACE 302138:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
TRACE 302155:
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments(ArgumentMatcher.java:192)
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.matchArgumentsEvaluated(ArgumentMatcher.java:186)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsExplicit.prepare(PrepareArguments.java:211)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsExplicitNodeGen.execute(PrepareArgumentsFactory.java:170)
TRACE 302158:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:884)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302237:
	java.lang.Class.isArray(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getLength(HotSpotJDKReflection.java:239)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayLength(HotSpotConstantReflectionProvider.java:80)
	org.graalvm.compiler.nodes.ConstantNode.findLength(ConstantNode.java:569)
TRACE 302467:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1045)
TRACE 302477:
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:535)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCodeBody(AMD64HotSpotBackend.java:318)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCode(AMD64HotSpotBackend.java:246)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:208)
TRACE 302507:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 302538:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 302646:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1065)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 302665:
	java.util.ArrayList.addAll(ArrayList.java:581)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:122)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
TRACE 302676:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 302700:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
TRACE 302947:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:441)
TRACE 302976:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:360)
TRACE 303074:
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic(HotSpotResolvedJavaFieldImpl.java:164)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isSyntheticEnumSwitchMap(JavaConstantFieldProvider.java:148)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField(JavaConstantFieldProvider.java:122)
	org.graalvm.compiler.hotspot.meta.HotSpotConstantFieldProvider.isStableField(HotSpotConstantFieldProvider.java:60)
TRACE 303083:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:905)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
TRACE 303160:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 304313:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.rng.RRNG.getContextState(RRNG.java:253)
	com.oracle.truffle.r.runtime.rng.RRNG.currentGenerator(RRNG.java:273)
	com.oracle.truffle.r.runtime.rng.RRNG.unifRand(RRNG.java:288)
TRACE 300294:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:370)
	java.util.jar.JarFile.getInputStream(JarFile.java:447)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:987)
TRACE 301002:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301700:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3088)
TRACE 301713:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.hasAnnotations(HotSpotResolvedJavaFieldImpl.java:180)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:194)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getAnnotations(GraalTruffleRuntime.java:1102)
TRACE 301795:
	jdk.vm.ci.hotspot.CompilerToVM.asReflectionField(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getField(HotSpotJDKReflection.java:471)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getFieldAnnotations(HotSpotJDKReflection.java:155)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:197)
TRACE 302153:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.Return.returnFunction(Return.java:108)
	com.oracle.truffle.r.nodes.builtin.base.ReturnNodeGen.execute(ReturnNodeGen.java:37)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 302268:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1295)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302325:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
TRACE 302639:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4808)
TRACE 302684:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1421)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302790:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:149)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:59)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$2.doValue(LinearScanAssignLocationsPhase.java:189)
	org.graalvm.compiler.lir.LIRFrameState.processValues(LIRFrameState.java:131)
TRACE 302894:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 303657:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303740:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:152)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:119)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
TRACE 304439:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304781:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304894:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 300150:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300849:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749)
TRACE 301658:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.handleException(BytecodeParser.java:1318)
TRACE 301909:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.Node.clone(Node.java:1062)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 301941:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:163)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302296:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1421)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 302328:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 302637:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 302638:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:588)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:274)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302653:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302658:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302730:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 302890:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:909)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302908:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303121:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:802)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303252:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1403)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1379)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 303330:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:267)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:454)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 303387:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303444:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1153)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:803)
TRACE 301295:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.api.nodes.Node.copy(Node.java:491)
	com.oracle.truffle.api.nodes.RootNode.copy(RootNode.java:180)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:154)
TRACE 301296:
	java.util.zip.ZipFile.getNextEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$500(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:523)
	java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:514)
TRACE 301747:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.checkUnwind(BytecodeParser.java:3003)
TRACE 301862:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:198)
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302043:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302261:
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue(BaseWriteVariableNode.java:128)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.shareObjectValue(BaseWriteVariableNode.java:103)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 302297:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 302348:
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
TRACE 302490:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:240)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302659:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:509)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:333)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302743:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302780:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:829)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 302798:
	org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks(NullCheckOptimizer.java:56)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:43)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:37)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302921:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:970)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 303008:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate(FrameSlotChangeMonitor.java:910)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 303184:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:253)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303215:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.CallArgumentsNode.evaluateFlattenObjects(CallArgumentsNode.java:242)
TRACE 303235:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 303292:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:626)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 303410:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:221)
TRACE 303916:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 304166:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:885)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304267:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304562:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:355)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1276)
	com.oracle.truffle.r.runtime.data.RDoubleVector.allocateNativeContents(RDoubleVector.java:189)
TRACE 300898:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 300968:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301088:
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
TRACE 301208:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:66)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
TRACE 301392:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrCached(GetFixedPropertyNode.java:100)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetNamesPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:448)
	com.oracle.truffle.r.nodes.attributes.GetFixedAttributeNode.getAttrFromAttributable(GetFixedAttributeNode.java:78)
TRACE 301425:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301777:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:242)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 301864:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
TRACE 301874:
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 302221:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.access$100(ReadVariableNode.java:140)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:411)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
TRACE 302247:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302636:
	com.oracle.truffle.r.nodes.access.ConstantNode.execute(ConstantNode.java:76)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302640:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.clone(Node.java:1076)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
TRACE 302695:
	com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute(AccessArgumentNode.java:94)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 302773:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse(LinearScanLifetimeAnalysisPhase.java:525)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:749)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$27.328095587.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
TRACE 302856:
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:524)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:498)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:527)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:498)
TRACE 302880:
	org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph(GraphDecoder.java:1534)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:145)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 302899:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache(PEReadEliminationClosure.java:404)
TRACE 302912:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:648)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 302920:
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:62)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303124:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 303195:
	java.util.ArrayList.forEach(ArrayList.java:1257)
	org.graalvm.compiler.lir.constopt.DefUseTree.forEach(DefUseTree.java:84)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:109)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
TRACE 303250:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNodeGen.execute(ValueForwardingNodeGen.java:74)
TRACE 303293:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:455)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 303311:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
TRACE 303340:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:375)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303346:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
TRACE 303357:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 303386:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
TRACE 303408:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:478)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 303453:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:610)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303694:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:332)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:301)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
TRACE 303853:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:756)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 304317:
	com.oracle.truffle.r.nodes.builtin.base.Sample.doSample(Sample.java:148)
	com.oracle.truffle.r.nodes.builtin.base.SampleNodeGen.executeAndSpecialize(SampleNodeGen.java:131)
	com.oracle.truffle.r.nodes.builtin.base.SampleNodeGen.execute(SampleNodeGen.java:77)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 304461:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:119)
TRACE 304888:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 300863:
	java.lang.Class.getDeclaredFields0(Class.java:Unknown line)
	java.lang.Class.privateGetDeclaredFields(Class.java:2583)
	java.lang.Class.getDeclaredFields(Class.java:1916)
	com.oracle.truffle.api.nodes.NodeClassImpl.collectInstanceFields(NodeClassImpl.java:107)
TRACE 301001:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
TRACE 301193:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	sun.nio.fs.NativeBuffers.copyCStringToNativeBuffer(NativeBuffers.java:127)
	sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixNativeDispatcher.java:50)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:447)
TRACE 301381:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301414:
	com.oracle.truffle.r.nodes.function.WrapArgumentNode.handleShareable(WrapArgumentNode.java:60)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.execute(WrapArgumentBaseNode.java:69)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:624)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
TRACE 301627:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
TRACE 301702:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 301778:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301788:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301796:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:285)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 301851:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:72)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1161)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 301879:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.function.RCallNode$GetTempNode.execute(RCallNode.java:848)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 301916:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 301968:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302021:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302022:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302161:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:201)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 302164:
	com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute(PromiseNode.java:166)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302179:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:294)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:613)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
TRACE 302200:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:114)
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:81)
TRACE 302278:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:429)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302358:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:155)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302366:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:307)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 302373:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:452)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302413:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:894)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 302428:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:71)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302437:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302535:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302549:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302572:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:621)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:408)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302722:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302783:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
TRACE 302820:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 302869:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:294)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 302913:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 302940:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 302958:
	com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest(ConditionalMapNode.java:82)
	com.oracle.truffle.r.nodes.unary.ConditionalMapNodeGen.execute(ConditionalMapNodeGen.java:44)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 302972:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 303011:
	com.oracle.truffle.r.library.methods.MethodsListDispatch$R_getClassFromCache.callGetClassFromCache(MethodsListDispatch.java:173)
	com.oracle.truffle.r.library.methods.MethodsListDispatchFactory$R_getClassFromCacheNodeGen.execute(MethodsListDispatchFactory.java:168)
	com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode$Arg2.call(RExternalBuiltinNode.java:98)
	com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode.call(RExternalBuiltinNode.java:40)
TRACE 303028:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:393)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303089:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:791)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 303114:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getTemporaries(HotSpotForeignCallLinkageImpl.java:211)
	org.graalvm.compiler.lir.gen.LIRGenerator.emitForeignCall(LIRGenerator.java:482)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRGenerator.emitForeignCall(AMD64HotSpotLIRGenerator.java:398)
TRACE 303139:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
TRACE 303153:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 303191:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303222:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval(FixPointIntervalBuilder.java:168)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:124)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303274:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority(SchedulePhase.java:1093)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:1013)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:994)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.access$100(SchedulePhase.java:974)
TRACE 303278:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 303289:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNode.getAttrCached(GetPropertyNode.java:52)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNodeGen.execute(GetPropertyNodeGen.java:45)
	com.oracle.truffle.r.nodes.access.AccessSlotNode.getSlotS4Cached(AccessSlotNode.java:68)
TRACE 303296:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 303327:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.analyzeBlock(ConstantLoadOptimization.java:257)
TRACE 303354:
	org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath(DominatorOptimizationProblem.java:128)
	org.graalvm.compiler.lir.constopt.ConstantTree.markBlocks(ConstantTree.java:176)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 303388:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 303404:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:142)
TRACE 303477:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 303491:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303498:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 303597:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
TRACE 303629:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303859:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 300949:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 300956:
	org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions(ATNState.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301288:
	sun.text.normalizer.NormalizerBase$NFDMode.normalize(NormalizerBase.java:297)
	sun.text.normalizer.NormalizerBase$Mode.normalize(NormalizerBase.java:209)
	sun.text.normalizer.NormalizerBase.next(NormalizerBase.java:1460)
	sun.text.normalizer.NormalizerBase.nextNormalize(NormalizerBase.java:1493)
TRACE 301292:
	java.lang.Class.isArray(Class.java:Unknown line)
	java.lang.Class.getSimpleName(Class.java:1306)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:81)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:77)
TRACE 301319:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeNonFunctionFrameDescriptor(FrameSlotChangeMonitor.java:940)
TRACE 301379:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure(ParserATNSimulator.java:1448)
TRACE 301404:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301444:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	com.oracle.truffle.api.frame.FrameDescriptor.findFrameSlot(FrameDescriptor.java:206)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.findOrAddFrameSlot(FrameSlotChangeMonitor.java:768)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.findOrAddFrameSlot(FrameSlotChangeMonitor.java:762)
TRACE 301672:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.allocateInstance(NodeClass.java:856)
	org.graalvm.compiler.nodes.GraphDecoder.makeStubNode(GraphDecoder.java:1472)
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
TRACE 301743:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1016)
TRACE 301774:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 301785:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301808:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:399)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302106:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.core.common.type.TypeReference.filterInterfaceTypesOut(TypeReference.java:145)
	org.graalvm.compiler.core.common.type.TypeReference.create(TypeReference.java:93)
TRACE 302172:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
TRACE 302177:
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:609)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302187:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 302201:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranch(AMD64LIRGenerator.java:330)
TRACE 302252:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:142)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302280:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxLocals(ResolvedJavaMethodBytecode.java:79)
TRACE 302330:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 302344:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302465:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:292)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302494:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData(RedundantMoveElimination.java:202)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:147)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 302499:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:197)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302558:
	org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual(VirtualObjectState.java:71)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:628)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 302569:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:244)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.computeStamp(PiNode.java:172)
TRACE 302634:
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1441)
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1169)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:678)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 302669:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse(LinearScanLifetimeAnalysisPhase.java:525)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:758)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$28.1389385675.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
TRACE 302673:
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent(AMD64AddressValue.java:80)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:243)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
TRACE 302683:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 302742:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302792:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
TRACE 302821:
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
TRACE 302837:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:74)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302917:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeStore(PEReadEliminationClosure.java:216)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:123)
TRACE 302933:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 302951:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:235)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303005:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303100:
	org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind(PEGraphDecoder.java:632)
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:179)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:811)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 303156:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 303192:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 303214:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:129)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 303305:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:55)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303363:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$12(LinearScanLifetimeAnalysisPhase.java:777)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$30.1062790950.doState(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
TRACE 303465:
	org.graalvm.compiler.lir.dfa.MarkBasePointersPhase$Marker$BasePointersSet.put(MarkBasePointersPhase.java:100)
	org.graalvm.compiler.lir.dfa.LocationMarker$2.visitValue(LocationMarker.java:173)
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
TRACE 303513:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 303515:
	com.oracle.truffle.r.runtime.RArguments.getCall(RArguments.java:255)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1155)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 303633:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:887)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303784:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303957:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:841)
TRACE 304103:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1403)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1379)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:799)
TRACE 304238:
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:245)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:215)
TRACE 304315:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.rng.RRNG.getContextState(RRNG.java:253)
	com.oracle.truffle.r.runtime.rng.RRNG.currentSampleKind(RRNG.java:281)
	com.oracle.truffle.r.runtime.rng.RRNG.unifIndex(RRNG.java:333)
TRACE 304341:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt(VectorAccess.java:323)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$8.perform(BinaryMapNode.java:349)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304896:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 300848:
	sun.reflect.ConstantPool.getUTF8At0(ConstantPool.java:Unknown line)
	sun.reflect.ConstantPool.getUTF8At(ConstantPool.java:53)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:240)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 300959:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301009:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301050:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getBuiltinClass(NodeWithArgumentCasts.java:132)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getCasts(NodeWithArgumentCasts.java:111)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts.getStaticCasts(NodeWithArgumentCasts.java:42)
TRACE 301176:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:562)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:516)
TRACE 301311:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.InternalNode$InternalUninitializedNode.execute(InternalNode.java:152)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
TRACE 301330:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeFunctionFrameDescriptor(FrameSlotChangeMonitor.java:945)
TRACE 301342:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 301389:
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet(ParserATNSimulator.java:818)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 301430:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
TRACE 301515:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:631)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.doCachedAssumption(PromiseHelperNode.java:528)
TRACE 301629:
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
TRACE 301654:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.isConstructor(HotSpotResolvedJavaMethodImpl.java:374)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:450)
TRACE 301711:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:569)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:564)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 301776:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 301892:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1173)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 301991:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.BitSet.clone(BitSet.java:1101)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
TRACE 302024:
	java.util.TreeMap.getEntry(TreeMap.java:359)
	java.util.TreeMap.get(TreeMap.java:278)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackage.lookupByName(RBuiltinPackage.java:126)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackages.lookupBuiltinDescriptor(RBuiltinPackages.java:192)
TRACE 302032:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:309)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:293)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302088:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.RCompression.gzipUncompress(RCompression.java:155)
	com.oracle.truffle.r.runtime.RCompression.uncompress(RCompression.java:112)
	com.oracle.truffle.r.nodes.builtin.base.HiddenInternalFunctions$LazyLoadDBFetch.lazyLoadDBFetchInternal(HiddenInternalFunctions.java:286)
TRACE 302186:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:124)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:83)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302214:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2(PipelineToCastNode.java:404)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$$Lambda$724.680521071.test(<Unknown Source>:Unknown line)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 302269:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.object.DynamicObjectImpl.clone(DynamicObjectImpl.java:175)
	com.oracle.truffle.object.DynamicObjectBasic.cloneWithShape(DynamicObjectBasic.java:216)
	com.oracle.truffle.object.DynamicObjectImpl.copy(DynamicObjectImpl.java:322)
TRACE 302329:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 302335:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.FrameSlotNode$PresentFrameSlotNode.hasValue(FrameSlotNode.java:181)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 302449:
	org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize(StructuredGraph.java:1055)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:85)
	org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:279)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)
TRACE 302526:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1432)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302537:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:87)
TRACE 302578:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:771)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302582:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.nodes.FixedWithNextNode.setNext(FixedWithNextNode.java:46)
TRACE 302668:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 302678:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302689:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
TRACE 302696:
	org.graalvm.compiler.graph.NodeClass.equalEdges(NodeClass.java:1244)
	org.graalvm.compiler.graph.NodeClass.equalInputs(NodeClass.java:1222)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
TRACE 302702:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeLoad(PEReadEliminationClosure.java:191)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:121)
TRACE 302732:
	com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply(CachedExtractVectorNode.java:165)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doExtractDefaultCached(ExtractVectorNode.java:128)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:69)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 302764:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
TRACE 302877:
	org.graalvm.compiler.graph.Graph.grow(Graph.java:1073)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302879:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302918:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:461)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 302977:
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:953)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
TRACE 302981:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos(LinearScanWalker.java:307)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos(LinearScanWalker.java:421)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
TRACE 302989:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.PhiNode.addInput(PhiNode.java:158)
TRACE 302991:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
TRACE 303119:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1332)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:726)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:230)
TRACE 303173:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:890)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303204:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos(LinearScanWalker.java:307)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos(LinearScanWalker.java:421)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
TRACE 303381:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:573)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:698)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:901)
TRACE 303405:
	org.graalvm.compiler.nodes.PhiNode.canonical(PhiNode.java:49)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303411:
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:136)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>(LSStackSlotAllocator.java:110)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.allocateStackSlots(LSStackSlotAllocator.java:105)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.run(LSStackSlotAllocator.java:97)
TRACE 303413:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:205)
TRACE 303428:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
TRACE 303442:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 303578:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:395)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 303587:
	jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.getMaxCallTargetOffset(HotSpotCodeCacheProvider.java:186)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getMaxCallTargetOffset(HotSpotForeignCallLinkageImpl.java:216)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitForeignCallOp(AMD64LIRGenerator.java:563)
TRACE 303595:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:146)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.access$100(ConstantLoadOptimization.java:96)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:85)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:73)
TRACE 303617:
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:303)
TRACE 303628:
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply(GraphEffectList.java:154)
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 303711:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:897)
TRACE 303722:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
TRACE 303824:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 303835:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 303892:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:777)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 303969:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1403)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1379)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:934)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$4.apply(GraphEffectList.java:275)
TRACE 303970:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:207)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 304099:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:799)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:818)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 304125:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache(PEReadEliminationClosure.java:385)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:371)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.doMergeWithoutDead(EffectsClosure.java:404)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.merge(EffectsClosure.java:287)
TRACE 304149:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit(PartialEscapeClosure.java:577)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processLoopExit(PartialEscapeClosure.java:547)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:333)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:81)
TRACE 304235:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 304349:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:355)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1252)
	com.oracle.truffle.r.runtime.data.RIntVector.allocateNativeContents(RIntVector.java:207)
TRACE 304396:
	org.graalvm.compiler.nodes.AbstractMergeNode$$Lambda$917.47109014.get$Lambda(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm$DMH.1608446010.invokeStatic_L_L(LambdaForm$DMH:Unknown line)
	java.lang.invoke.LambdaForm$MH.1483022288.linkToTargetMethod(LambdaForm$MH:Unknown line)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:143)
TRACE 304443:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304675:
	com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add(Collections.java:65)
	com.oracle.truffle.r.nodes.builtin.base.Unique.doUniqueCachedString(Unique.java:107)
	com.oracle.truffle.r.nodes.builtin.base.UniqueNodeGen.execute(UniqueNodeGen.java:59)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 304779:
	com.oracle.truffle.r.runtime.data.RIntVector$FastPathAccess.getIntImpl(RIntVector.java:222)
	com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess$FastPathFromIntAccess.getDoubleImpl(FastPathVectorAccess.java:70)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
TRACE 300705:
	java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 300971:
	org.antlr.v4.runtime.misc.FlexibleHashMap.get(FlexibleHashMap.java:91)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:549)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301150:
	java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:88)
	java.util.zip.GZIPInputStream.<init>(GZIPInputStream.java:77)
	com.oracle.truffle.r.runtime.conn.DelegateRConnection.createGZIPDelegateInputConnection(DelegateRConnection.java:649)
	com.oracle.truffle.r.runtime.conn.FileConnections.createDelegateConnection(FileConnections.java:278)
TRACE 301212:
	java.lang.Class.isArray(Class.java:Unknown line)
	com.oracle.truffle.polyglot.PolyglotLanguageContext.toGuestValue(PolyglotLanguageContext.java:874)
	com.oracle.truffle.polyglot.EngineAccessor$EngineImpl.toGuestValue(EngineAccessor.java:581)
	com.oracle.truffle.api.TruffleLanguage$Env.asGuestValue(TruffleLanguage.java:1842)
TRACE 301303:
	com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute(PromiseHelperNodeFactory.java:52)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromEagerPromise(PromiseHelperNode.java:285)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluateImpl(PromiseHelperNode.java:213)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.visibleEvaluate(PromiseHelperNode.java:185)
TRACE 301318:
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl(BinaryBooleanScalarNode.java:124)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.doCached(BinaryBooleanScalarNode.java:114)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNodeGen$LogicalScalarCastNodeGen.executeCast(BinaryBooleanScalarNodeGen.java:71)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode.binary(BinaryBooleanScalarNode.java:85)
TRACE 301329:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	com.oracle.truffle.api.frame.FrameDescriptor.findFrameSlot(FrameDescriptor.java:206)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.get(REnvTruffleFrameAccess.java:80)
	com.oracle.truffle.r.runtime.env.REnvironment.get(REnvironment.java:980)
TRACE 301401:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 301504:
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:584)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.doCachedAssumption(PromiseHelperNode.java:528)
	com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute(PromiseHelperNodeFactory.java:50)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromEagerPromise(PromiseHelperNode.java:285)
TRACE 301657:
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
TRACE 301659:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.checkLoopExit(BytecodeParser.java:2961)
TRACE 301678:
	com.oracle.truffle.r.runtime.RArguments.getCall(RArguments.java:255)
	com.oracle.truffle.r.nodes.function.opt.OptForcedEagerPromiseNode.execute(OptForcedEagerPromiseNode.java:142)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
TRACE 301794:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupSignature(HotSpotConstantPool.java:554)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.<init>(HotSpotResolvedJavaMethodImpl.java:140)
TRACE 301800:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301809:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCodeSize(HotSpotResolvedJavaMethodImpl.java:263)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCode(HotSpotResolvedJavaMethodImpl.java:251)
TRACE 301828:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObject(FrameSlotChangeMonitor.java:926)
	com.oracle.truffle.r.nodes.function.TemporarySlotNode.cleanup(TemporarySlotNode.java:73)
	com.oracle.truffle.r.nodes.function.RCallNode.callInternalGeneric(RCallNode.java:379)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:185)
TRACE 301842:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:774)
	org.graalvm.compiler.nodes.ValueNode.replaceAtUsages(ValueNode.java:219)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:763)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
TRACE 301898:
	jdk.vm.ci.hotspot.CompilerToVM.asReflectionExecutable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getMethod(HotSpotJDKReflection.java:446)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getMethodAnnotation(HotSpotJDKReflection.java:175)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getAnnotation(HotSpotResolvedJavaMethodImpl.java:542)
TRACE 302071:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302176:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:168)
TRACE 302183:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
TRACE 302216:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genNewInstance(BytecodeParser.java:4505)
TRACE 302273:
	org.graalvm.compiler.code.CompilationResult.setMethods(CompilationResult.java:372)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:213)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:87)
	org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:279)
TRACE 302277:
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
TRACE 302322:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302324:
	java.lang.Object.clone(Object.java:Unknown line)
	java.lang.reflect.Proxy.newProxyInstance(Proxy.java:710)
	sun.reflect.annotation.AnnotationParser$1.run(AnnotationParser.java:305)
	sun.reflect.annotation.AnnotationParser$1.run(AnnotationParser.java:303)
TRACE 302338:
	java.util.TimSort.binarySort(TimSort.java:296)
	java.util.TimSort.sort(TimSort.java:221)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 302349:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getTagAt(HotSpotConstantPool.java:304)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupConstant(HotSpotConstantPool.java:514)
	org.graalvm.compiler.java.BytecodeParser.lookupConstant(BytecodeParser.java:4325)
TRACE 302430:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.createPhiOut(NodeLIRBuilder.java:292)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.visitEndNode(NodeLIRBuilder.java:521)
TRACE 302454:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
TRACE 302466:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:93)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 302488:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:203)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302518:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:399)
TRACE 302524:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:289)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getExceptionHandlers(ResolvedJavaMethodBytecode.java:99)
TRACE 302528:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:486)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:144)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 302548:
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1397)
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1185)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:677)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 302550:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray(UnsafeArrayTypeWriter.java:100)
	org.graalvm.compiler.nodes.GraphEncoder.getEncoding(GraphEncoder.java:312)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:165)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302590:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxStackSize(HotSpotResolvedJavaMethodImpl.java:397)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxStackSize(ResolvedJavaMethodBytecode.java:74)
TRACE 302610:
	com.oracle.truffle.r.runtime.data.RPromise$EagerPromise.isValid(RPromise.java:458)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.doUncachedAssumption(PromiseHelperNode.java:541)
	com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute(PromiseHelperNodeFactory.java:59)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromEagerPromise(PromiseHelperNode.java:285)
TRACE 302674:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 302693:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302709:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:276)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302716:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302738:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.prototypeMarkWord(HotSpotResolvedObjectTypeImpl.java:895)
	org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets$Templates.lower(HotSpotAllocationSnippets.java:662)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:313)
TRACE 302739:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 302779:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1297)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302823:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 302860:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:453)
TRACE 302875:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302884:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:201)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.tryFold(InstanceOfNode.java:190)
TRACE 302885:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2(ConditionalEliminationPhase.java:359)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$$Lambda$920.351931721.rewire(<Unknown Source>:Unknown line)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.rewireGuards(ConditionalEliminationUtil.java:271)
TRACE 302897:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:244)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 302909:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors(ReentrantBlockIterator.java:189)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:157)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processLoop(ReentrantBlockIterator.java:77)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processLoop(EffectsClosure.java:335)
TRACE 302923:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
TRACE 302942:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1066)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 302943:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:169)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302959:
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:62)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302964:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:68)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:258)
TRACE 302969:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meetTypes(AbstractObjectStamp.java:262)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet(AbstractObjectStamp.java:142)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:136)
TRACE 302978:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:833)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303013:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processEnd(ConditionalEliminationPhase.java:607)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:508)
TRACE 303029:
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:422)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303050:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 303111:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:895)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303130:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:324)
TRACE 303133:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303136:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.AbstractMergeNode.addForwardEnd(AbstractMergeNode.java:70)
TRACE 303137:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 303149:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:812)
TRACE 303155:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
TRACE 303167:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:614)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:408)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303170:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:201)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.computeStamp(PiNode.java:172)
TRACE 303179:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.usagesDroppedToZero(CanonicalizerPhase.java:296)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:556)
	org.graalvm.compiler.graph.Node.maybeNotifyZeroUsages(Node.java:900)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:331)
TRACE 303186:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:393)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303187:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 303218:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode.castArg(RBuiltinNode.java:128)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
TRACE 303220:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove(MoveResolver.java:295)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSAMoveResolver.createMove(SSAMoveResolver.java:163)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:278)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:350)
TRACE 303224:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303265:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:219)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 303279:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1242)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303285:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303306:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 303321:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.nodeAdded(CanonicalizerPhase.java:274)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
TRACE 303325:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:70)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303380:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrCached(GetFixedPropertyNode.java:100)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetClassPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:246)
	com.oracle.truffle.r.nodes.function.ClassHierarchyNode.getClassHrAttributable(ClassHierarchyNode.java:202)
TRACE 303402:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.addMapping(MoveResolver.java:507)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase$1.visit(SSALinearScanResolveDataFlowPhase.java:80)
	org.graalvm.compiler.lir.ssa.SSAUtil.forEachPhiValuePair(SSAUtil.java:103)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:96)
TRACE 303414:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 303431:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:126)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 303521:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303546:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:387)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303551:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:943)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:241)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
TRACE 303558:
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode.castArg(RBuiltinNode.java:128)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
	com.oracle.truffle.r.nodes.builtin.InternalNode$InternalCallNode.execute(InternalNode.java:241)
TRACE 303620:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.equals(RegStackValueSet.java:132)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:106)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
TRACE 303662:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1227)
TRACE 303666:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303687:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 303703:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:229)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303705:
	org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>(PrintableDominatorOptimizationProblem.java:35)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:107)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 303712:
	org.graalvm.compiler.lir.alloc.lsra.Interval.hasHoleBetween(Interval.java:1212)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos(LinearScanWalker.java:362)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
TRACE 303725:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval(FixPointIntervalBuilder.java:177)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:141)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303728:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303755:
	org.graalvm.compiler.truffle.compiler.phases.DeoptimizeOnExceptionPhase.run(DeoptimizeOnExceptionPhase.java:58)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303787:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1427)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1418)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 303825:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:210)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
TRACE 303827:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303971:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:527)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
TRACE 304111:
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
TRACE 304128:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:191)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 304179:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualizable(PartialEscapeClosure.java:255)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:230)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
TRACE 304229:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
TRACE 304233:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
TRACE 304335:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doIntCached(UnaryArithmeticReduceNode.java:274)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:383)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304420:
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:662)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 304421:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix(JavaUpCallsRFFIImpl.java:497)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCall.execute(Rf_allocMatrixCall.java:70)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_allocMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 304441:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304601:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 304893:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 300152:
	java.util.zip.ZipFile.getEntryBytes(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:577)
	java.util.zip.ZipFile.getEntry(ZipFile.java:326)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
TRACE 300304:
	java.util.jar.JarFile.getMetaInfEntryNames(JarFile.java:Unknown line)
	java.util.jar.JarFile.getManEntry(JarFile.java:498)
	java.util.jar.JarFile.getManifestFromReference(JarFile.java:188)
	java.util.jar.JarFile.getManifest(JarFile.java:180)
TRACE 300832:
	sun.reflect.Reflection.getCallerClass(Reflection.java:Unknown line)
	java.lang.Class.getConstructor(Class.java:1824)
	java.lang.reflect.Proxy.newProxyInstance(Proxy.java:729)
	sun.reflect.annotation.AnnotationParser$1.run(AnnotationParser.java:305)
TRACE 300844:
	java.lang.ClassLoader.findLoadedClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1032)
	java.lang.ClassLoader.loadClass(ClassLoader.java:401)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 300856:
	java.lang.Object.<init>(Object.java:37)
	java.io.InputStream.<init>(InputStream.java:45)
	java.util.zip.ZipFile$ZipFileInputStream.<init>(ZipFile.java:711)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:375)
TRACE 300881:
	java.util.zip.ZipFile.getEntryTime(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:586)
	java.util.zip.ZipFile.access$900(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
TRACE 300960:
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
	com.oracle.truffle.r.parser.RParser.basic_expr(RParser.java:2861)
TRACE 300973:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1464)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300983:
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:547)
	org.antlr.v4.runtime.atn.ATNSimulator.getCachedContext(ATNSimulator.java:103)
	org.antlr.v4.runtime.atn.ATNConfigSet.optimizeConfigs(ATNConfigSet.java:217)
	org.antlr.v4.runtime.atn.ParserATNSimulator.addDFAState(ParserATNSimulator.java:2124)
TRACE 301008:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
TRACE 301103:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	com.oracle.truffle.api.nodes.NodeClass$1.computeValue(NodeClass.java:59)
	com.oracle.truffle.api.nodes.NodeClass$1.computeValue(NodeClass.java:56)
	java.lang.ClassValue.getFromHashMap(ClassValue.java:227)
TRACE 301145:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ROptions$ContextStateImpl.updateDotOptions(ROptions.java:139)
	com.oracle.truffle.r.runtime.ROptions$ContextStateImpl.setValue(ROptions.java:111)
TRACE 301181:
	java.lang.Class.getEnclosingMethod0(Class.java:Unknown line)
	java.lang.Class.getEnclosingMethodInfo(Class.java:1072)
	java.lang.Class.getEnclosingClass(Class.java:1272)
	java.lang.Class.getSimpleBinaryName(Class.java:1443)
TRACE 301298:
	org.antlr.v4.runtime.misc.MurmurHash.update(MurmurHash.java:71)
	org.antlr.v4.runtime.atn.ATNConfig.hashCode(ATNConfig.java:181)
	java.util.AbstractList.hashCode(AbstractList.java:541)
	org.antlr.v4.runtime.atn.ATNConfigSet.hashCode(ATNConfigSet.java:262)
TRACE 301328:
	com.oracle.truffle.r.runtime.env.REnvironment.get(REnvironment.java:980)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doExtractEnvironment(ExtractVectorNode.java:163)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:80)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 301382:
	java.util.HashMap.resize(HashMap.java:735)
	java.util.HashMap.putVal(HashMap.java:663)
	java.util.HashMap.put(HashMap.java:612)
	org.antlr.v4.runtime.misc.DoubleKeyMap.put(DoubleKeyMap.java:26)
TRACE 301431:
	com.oracle.truffle.r.nodes.InlineCacheNode.doCached(InlineCacheNode.java:73)
	com.oracle.truffle.r.nodes.InlineCacheNodeGen.execute(InlineCacheNodeGen.java:36)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.generateValueFromFullPromise(PromiseHelperNode.java:231)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode.evaluateImpl(PromiseHelperNode.java:211)
TRACE 301518:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall(SetVisibilityNode.java:84)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:66)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 301689:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethodFlags(HotSpotResolvedJavaMethodImpl.java:198)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getAnnotation(HotSpotResolvedJavaMethodImpl.java:539)
TRACE 301744:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
TRACE 301798:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301806:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:536)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301843:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.ObjectState.<init>(ObjectState.java:87)
	org.graalvm.compiler.virtual.phases.ea.ObjectState.cloneState(ObjectState.java:95)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.getObjectStateForModification(PartialEscapeBlockState.java:150)
TRACE 301858:
	java.util.ArrayDeque.doubleCapacity(ArrayDeque.java:162)
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:153)
TRACE 301871:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 301895:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:897)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301901:
	sun.nio.fs.UnixNativeDispatcher.stat0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.stat(UnixNativeDispatcher.java:286)
	sun.nio.fs.UnixFileAttributes.get(UnixFileAttributes.java:70)
	sun.nio.fs.UnixUriUtils.toUri(UnixUriUtils.java:118)
TRACE 301987:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.builtin.base.UpdateAttributes.doOtherNull(UpdateAttributes.java:313)
	com.oracle.truffle.r.nodes.builtin.base.UpdateAttributesNodeGen.execute(UpdateAttributesNodeGen.java:52)
TRACE 302057:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:85)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302125:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:303)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302141:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethodFlags(HotSpotResolvedJavaMethodImpl.java:198)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:268)
TRACE 302165:
	org.graalvm.compiler.java.BciBlockMapping.iterateOverBytecodes(BciBlockMapping.java:857)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:667)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1001)
TRACE 302188:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:785)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302212:
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:81)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:113)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
TRACE 302227:
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode.castArg(RBuiltinNode.java:128)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 302294:
	org.graalvm.compiler.replacements.PEGraphDecoder$PEAppendGraphBuilderContext.<init>(PEGraphDecoder.java:463)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1199)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
TRACE 302350:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:209)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302371:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:241)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
TRACE 302395:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:583)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:408)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302453:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302491:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:95)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 302506:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
TRACE 302512:
	org.graalvm.compiler.java.BytecodeParser.notifyAfterInline(BytecodeParser.java:2525)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2504)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2249)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302517:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:550)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:453)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:87)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:191)
TRACE 302521:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:527)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
TRACE 302545:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:729)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:330)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:457)
TRACE 302596:
	java.util.TreeMap.getEntry(TreeMap.java:352)
	java.util.TreeMap.get(TreeMap.java:278)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackage.lookupByName(RBuiltinPackage.java:126)
	com.oracle.truffle.r.nodes.builtin.RBuiltinPackages.lookupBuiltinDescriptor(RBuiltinPackages.java:192)
TRACE 302598:
	org.graalvm.compiler.nodes.util.GraphUtil.markUsages(GraphUtil.java:230)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:127)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:743)
TRACE 302604:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:760)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.rebuildPiNodes(ConditionalEliminationPhase.java:400)
TRACE 302620:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302621:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.replacements.PEGraphDecoder.deleteInvoke(PEGraphDecoder.java:1146)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1060)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
TRACE 302628:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:898)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302629:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeLoad(PEReadEliminationClosure.java:193)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:121)
TRACE 302643:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi(SchedulePhase.java:919)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:946)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:803)
TRACE 302725:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:648)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 302766:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 302784:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 302802:
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
	org.graalvm.compiler.nodes.AbstractMergeNode.removeEnd(AbstractMergeNode.java:106)
	org.graalvm.compiler.nodes.util.GraphUtil.fixSurvivingAffectedMerges(GraphUtil.java:201)
TRACE 302808:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 302847:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves(LinearScanEliminateSpillMovePhase.java:126)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.run(LinearScanEliminateSpillMovePhase.java:80)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302851:
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:66)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:57)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302859:
	org.graalvm.compiler.nodes.IfNode.<init>(IfNode.java:114)
	org.graalvm.compiler.java.BytecodeParser.genIfNode(BytecodeParser.java:1499)
	org.graalvm.compiler.java.BytecodeParser.genIf(BytecodeParser.java:3705)
	org.graalvm.compiler.java.BytecodeParser.genIf(BytecodeParser.java:3550)
TRACE 302863:
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:179)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:903)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302873:
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302878:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 302888:
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:105)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:188)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:47)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
TRACE 302889:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
TRACE 302896:
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:249)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$$Lambda$945.145606895.apply(<Unknown Source>:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
TRACE 302901:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized(PartialEscapeClosure.java:446)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeWithCommit(PartialEscapeBlockState.java:255)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeBefore(PartialEscapeBlockState.java:198)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.ensureMaterialized(PartialEscapeClosure.java:435)
TRACE 302965:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302967:
	java.lang.ClassValue.getFromBackup(ClassValue.java:206)
	java.lang.ClassValue.get(ClassValue.java:115)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:490)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
TRACE 302975:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:189)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303025:
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:935)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:133)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processIf(FixReadsPhase.java:464)
TRACE 303030:
	org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>(Interval.java:354)
	org.graalvm.compiler.lir.alloc.lsra.Interval.<init>(Interval.java:734)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.createInterval(LinearScan.java:363)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.getOrCreateInterval(LinearScan.java:431)
TRACE 303039:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.replacements.PEGraphDecoder.ensureOuterStateDecoded(PEGraphDecoder.java:1309)
TRACE 303040:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 303048:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:380)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303054:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.phases.common.inlining.InliningUtil.processFrameState(InliningUtil.java:763)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1335)
TRACE 303065:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSrcref.createSourceSection(RSrcref.java:227)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2951)
	com.oracle.truffle.r.runtime.RSerialize.handleFunctionSrcrefAttr(RSerialize.java:2938)
TRACE 303070:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper(NodeClass.java:1465)
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1451)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
TRACE 303075:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:87)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 303079:
	java.lang.System.identityHashCode(System.java:Unknown line)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.createCallTarget(Closure.java:235)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.generateCallTarget(Closure.java:231)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCache.get(Closure.java:295)
TRACE 303094:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:284)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303096:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 303107:
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 303108:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:466)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 303112:
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:451)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
	org.graalvm.compiler.core.LIRGenerationPhase.matchBlock(LIRGenerationPhase.java:92)
TRACE 303122:
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanLifetimeAnalysisPhase.setHint(SSALinearScanLifetimeAnalysisPhase.java:96)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanLifetimeAnalysisPhase.addRegisterHint(SSALinearScanLifetimeAnalysisPhase.java:89)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$6(LinearScanLifetimeAnalysisPhase.java:723)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$24.1394862698.visitValue(<Unknown Source>:Unknown line)
TRACE 303127:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 303150:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.determinePreciseArrayElementType(LoadIndexedNode.java:111)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:103)
TRACE 303174:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303180:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:461)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
TRACE 303205:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:921)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.rebuildPiNodes(ConditionalEliminationPhase.java:424)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2(ConditionalEliminationPhase.java:363)
TRACE 303230:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:91)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 303237:
	com.oracle.truffle.r.nodes.control.RLengthNode.doCachedContainer(RLengthNode.java:99)
	com.oracle.truffle.r.nodes.control.RLengthNodeGen.executeInteger(RLengthNodeGen.java:84)
	com.oracle.truffle.r.nodes.builtin.base.Length.getLength(Length.java:45)
	com.oracle.truffle.r.nodes.builtin.base.LengthNodeGen.execute(LengthNodeGen.java:26)
TRACE 303244:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:277)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303273:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1301)
TRACE 303277:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:68)
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:114)
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute(LocalReadVariableNode.java:81)
	com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.executeInteger(LocalReadVariableNode.java:157)
TRACE 303282:
	org.graalvm.compiler.replacements.SnippetTemplate.updateStamps(SnippetTemplate.java:1581)
	org.graalvm.compiler.replacements.SnippetTemplate.instantiate(SnippetTemplate.java:1629)
	org.graalvm.compiler.replacements.InstanceOfSnippetsTemplates.lower(InstanceOfSnippetsTemplates.java:101)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:279)
TRACE 303291:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:516)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 303295:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:485)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:359)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:423)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:582)
TRACE 303307:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors(ReentrantBlockIterator.java:189)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:157)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:94)
TRACE 303318:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd(FixReadsPhase.java:369)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:281)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303328:
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.addPathToCodeEmittingOrder(ComputeBlockOrder.java:196)
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder(ComputeBlockOrder.java:105)
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder(ComputeBlockOrder.java:94)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR0(LIRCompilerBackend.java:143)
TRACE 303343:
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:173)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303384:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:777)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildBeforeOpId(Interval.java:940)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:537)
TRACE 303389:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopBlocks(ControlFlowGraph.java:694)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:628)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
TRACE 303399:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 303419:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:282)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 303421:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 303424:
	org.graalvm.compiler.loop.LoopFragment.markFloating(LoopFragment.java:375)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:268)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
TRACE 303446:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:116)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:87)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:35)
TRACE 303448:
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:819)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
TRACE 303456:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:300)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303457:
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:219)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
	org.graalvm.compiler.loop.LoopEx.isOutsideLoop(LoopEx.java:127)
TRACE 303476:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processLoop(ReentrantBlockIterator.java:77)
TRACE 303485:
	org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.lowerCommitAllocationNode(DefaultJavaLoweringProvider.java:856)
	org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.lower(DefaultJavaLoweringProvider.java:251)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:427)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLoweringProvider.lower(AMD64HotSpotLoweringProvider.java:92)
TRACE 303493:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.eliminateMoves(RedundantMoveElimination.java:366)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:163)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303499:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303509:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303511:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.canonical(BinaryArithmeticNode.java:90)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:172)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:47)
TRACE 303529:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:350)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:68)
TRACE 303540:
	com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply(CachedExtractVectorNode.java:140)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doExtractDefaultCached(ExtractVectorNode.java:128)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:69)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 303549:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303565:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages(PartialEscapeClosure.java:1298)
TRACE 303576:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeEndOfFunction(SetVisibilityNode.java:95)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:341)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 303589:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.FrameState.addVirtualObjectMapping(FrameState.java:288)
TRACE 303600:
	java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1043)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.getStringIdentifiersAndValues(REnvTruffleFrameAccess.java:258)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.ls(REnvTruffleFrameAccess.java:201)
	com.oracle.truffle.r.runtime.env.REnvironment.ls(REnvironment.java:1057)
TRACE 303602:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny(LinearScanWalker.java:185)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:709)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303609:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.<init>(CallsiteHolderExplorable.java:92)
TRACE 303630:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:338)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
TRACE 303654:
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:41)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:74)
TRACE 303669:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 303676:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:895)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 303716:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:306)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:353)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:171)
TRACE 303717:
	org.graalvm.compiler.lir.ssa.SSAUtil.forEachPhiValuePair(SSAUtil.java:102)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:96)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 303730:
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:170)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readFieldValue(HotSpotConstantReflectionProvider.java:173)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.readValue(ConstantFoldUtil.java:51)
TRACE 303735:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putSV(UnsafeArrayTypeWriter.java:204)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:396)
TRACE 303761:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.create(IntegerEqualsNode.java:92)
	org.graalvm.compiler.java.BytecodeParser.genIntegerEquals(BytecodeParser.java:1483)
TRACE 303772:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 303801:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1298)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 303830:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303849:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:244)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.core.common.type.Stamp.tryImproveWith(Stamp.java:181)
TRACE 303860:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias(PartialEscapeClosure.java:1289)
	org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject(VirtualizerToolImpl.java:328)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.virtualize(CommitAllocationNode.java:144)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 303864:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:877)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$MoveGuardsUpwards.enter(ConditionalEliminationPhase.java:181)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$MoveGuardsUpwards.enter(ConditionalEliminationPhase.java:165)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 303893:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303894:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi(SchedulePhase.java:919)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:946)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
TRACE 303901:
	com.oracle.truffle.r.nodes.access.vector.PositionsCheckNode.isSupported(PositionsCheckNode.java:70)
	com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.isSupported(CachedExtractVectorNode.java:130)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:68)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 303917:
	com.oracle.truffle.r.nodes.control.NextNode.execute(NextNode.java:43)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 304026:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillExcludeActiveFixed(LinearScanWalker.java:225)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:824)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 304028:
	org.graalvm.compiler.lir.ValueProcedure.doValue(ValueProcedure.java:52)
	org.graalvm.compiler.lir.LIRFrameState.processValues(LIRFrameState.java:131)
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
TRACE 304052:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:735)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:718)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 304070:
	org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin(AbstractBeginNode.java:65)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1038)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 304082:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:806)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:369)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.doMergeWithoutDead(EffectsClosure.java:404)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.merge(EffectsClosure.java:287)
TRACE 304101:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:482)
TRACE 304123:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:759)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 304133:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1300)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 304135:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 304137:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 304152:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 304154:
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:919)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
	org.graalvm.compiler.replacements.SnippetTemplate.inlineSnippet(SnippetTemplate.java:1548)
TRACE 304168:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
TRACE 304178:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>(PartialEscapeClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.<init>(PEReadEliminationClosure.java:94)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.createEffectsClosure(PartialEscapePhase.java:95)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:93)
TRACE 304186:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:148)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:294)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:613)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
TRACE 304223:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 304234:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:157)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:236)
TRACE 304241:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:157)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:235)
TRACE 304242:
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase$Closure.process(StackMoveOptimizationPhase.java:90)
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase.run(StackMoveOptimizationPhase.java:75)
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase.run(StackMoveOptimizationPhase.java:59)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 304289:
	com.oracle.truffle.r.nodes.builtin.base.Combine.createResultVector(Combine.java:417)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:349)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 304316:
	com.oracle.truffle.r.runtime.rng.RRNG.unifRand(RRNG.java:288)
	com.oracle.truffle.r.runtime.rng.RRNG.rbits(RRNG.java:319)
	com.oracle.truffle.r.runtime.rng.RRNG.unifIndex(RRNG.java:344)
	com.oracle.truffle.r.runtime.rng.RRNG.unifIndex(RRNG.java:329)
TRACE 304331:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:243)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doIntCached(UnaryArithmeticReduceNode.java:274)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:383)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304358:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:262)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 304366:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 304425:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:303)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:212)
TRACE 304442:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:760)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.phases.common.LoweringPhase$LoweringToolImpl.createGuard(LoweringPhase.java:222)
TRACE 304445:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 304488:
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd(EdgeMoveOptimizer.java:170)
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.access$000(EdgeMoveOptimizer.java:78)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:70)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:57)
TRACE 304500:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:1013)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:994)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.access$100(SchedulePhase.java:974)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:805)
TRACE 304509:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304523:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 304615:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:326)
TRACE 304658:
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeLinearScanOrder(ComputeBlockOrder.java:116)
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeLinearScanOrder(ComputeBlockOrder.java:80)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR0(LIRCompilerBackend.java:144)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR(LIRCompilerBackend.java:113)
TRACE 304671:
	sun.misc.Unsafe.freeMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.free(NativeMemory.java:77)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory$FreeingNativeMemoryWrapper.release(NativeMemory.java:161)
	com.oracle.truffle.r.runtime.ffi.util.ResourcesCleaner$1.run(ResourcesCleaner.java:93)
TRACE 304693:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues(RegStackValueSet.java:159)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:57)
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
TRACE 304780:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
CPU SAMPLES BEGIN (total = 27358) Wed Jan 13 22:15:18 2021
rank   self  accum   count trace method
   1 24.62% 24.62%    6735 301617 java.io.FileInputStream.open0
   2  3.87% 28.49%    1059 301520 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   3  3.74% 32.22%    1022 301691 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   4  2.92% 35.14%     798 302198 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   5  2.04% 37.18%     558 301999 jdk.vm.ci.hotspot.CompilerToVM.installCode
   6  1.62% 38.80%     443 301756 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
   7  1.21% 40.01%     332 301647 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
   8  1.14% 41.16%     313 301646 java.lang.Throwable.fillInStackTrace
   9  1.10% 42.26%     301 301648 java.lang.Throwable.fillInStackTrace
  10  1.07% 43.33%     293 301958 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  11  0.99% 44.32%     272 304084 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  12  0.96% 45.28%     262 302777 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  13  0.80% 46.08%     219 301199 sun.nio.fs.UnixNativeDispatcher.access0
  14  0.79% 46.87%     217 304290 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  15  0.75% 47.62%     204 300071 java.lang.ClassLoader.defineClass1
  16  0.72% 48.34%     198 301887 org.graalvm.collections.EconomicMapImpl.findLinear
  17  0.72% 49.06%     196 304086 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  18  0.70% 49.76%     191 304087 com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand
  19  0.63% 50.39%     172 304682 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  20  0.58% 50.97%     159 301690 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  21  0.54% 51.51%     149 302076 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  22  0.53% 52.04%     144 301686 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  23  0.50% 52.54%     138 302321 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  24  0.42% 52.96%     114 301317 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  25  0.41% 53.37%     113 301015 java.lang.String.intern
  26  0.40% 53.78%     110 304215 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  27  0.39% 54.17%     108 301192 java.lang.String.intern
  28  0.39% 54.56%     106 301832 org.graalvm.collections.EconomicMapImpl.getHashIndex
  29  0.38% 54.94%     104 301650 com.oracle.truffle.api.TruffleFile.checkAccess
  30  0.37% 55.31%     102 301740 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  31  0.35% 55.67%      97 304458 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  32  0.34% 56.01%      94 301688 java.lang.System.identityHashCode
  33  0.34% 56.35%      94 302083 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  34  0.34% 56.70%      94 302484 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  35  0.33% 57.03%      91 301668 sun.nio.fs.UnixNativeDispatcher.access
  36  0.32% 57.35%      88 302641 org.graalvm.collections.EconomicMapImpl.getHashIndex
  37  0.32% 57.67%      87 304293 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  38  0.25% 57.92%      68 302492 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  39  0.23% 58.15%      64 301781 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  40  0.23% 58.39%      64 304498 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  41  0.23% 58.62%      63 304519 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  42  0.22% 58.84%      61 304249 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  43  0.22% 59.06%      60 301146 sun.nio.fs.UnixNativeDispatcher.realpath0
  44  0.22% 59.28%      60 302001 java.lang.System.identityHashCode
  45  0.22% 59.50%      60 302312 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  46  0.22% 59.72%      60 302775 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  47  0.21% 59.92%      57 301802 java.lang.Object.hashCode
  48  0.20% 60.13%      56 302213 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  49  0.20% 60.33%      55 300947 java.lang.System.identityHashCode
  50  0.19% 60.52%      53 300945 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
  51  0.19% 60.72%      53 300958 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
  52  0.19% 60.90%      51 302377 org.graalvm.compiler.graph.Graph.findDuplicate
  53  0.18% 61.09%      50 303370 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  54  0.18% 61.27%      50 304800 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  55  0.18% 61.45%      49 304791 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  56  0.18% 61.62%      48 302127 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  57  0.18% 61.80%      48 304265 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  58  0.17% 61.97%      47 301685 java.lang.Object.hashCode
  59  0.17% 62.14%      47 301947 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  60  0.17% 62.31%      47 302593 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  61  0.17% 62.48%      46 301970 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
  62  0.16% 62.64%      44 302346 org.graalvm.collections.EconomicMapImpl.getHashIndex
  63  0.16% 62.80%      44 303217 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
  64  0.16% 62.96%      43 304423 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix
  65  0.15% 63.11%      42 301676 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  66  0.15% 63.27%      42 301773 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  67  0.15% 63.42%      42 301963 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  68  0.15% 63.58%      42 302015 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  69  0.15% 63.73%      42 302586 org.graalvm.compiler.graph.NodeClass.deepEquals0
  70  0.15% 63.88%      41 300967 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
  71  0.15% 64.03%      41 301790 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  72  0.15% 64.18%      40 301696 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  73  0.15% 64.32%      40 302327 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  74  0.14% 64.46%      39 301693 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  75  0.14% 64.60%      37 301961 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  76  0.14% 64.73%      37 304079 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
  77  0.13% 64.87%      36 300961 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  78  0.13% 65.00%      36 300969 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  79  0.13% 65.13%      35 302251 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
  80  0.13% 65.25%      35 302284 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  81  0.13% 65.38%      35 302635 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  82  0.12% 65.50%      33 302173 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
  83  0.12% 65.62%      33 302308 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
  84  0.12% 65.74%      33 302910 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  85  0.12% 65.86%      32 301972 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  86  0.12% 65.98%      32 304193 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
  87  0.11% 66.09%      31 302171 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  88  0.11% 66.20%      30 300965 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
  89  0.11% 66.31%      30 301178 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
  90  0.11% 66.42%      30 302624 org.graalvm.collections.EconomicMapImpl.compareKeys
  91  0.11% 66.53%      29 301203 java.lang.String.intern
  92  0.11% 66.63%      29 302557 org.graalvm.compiler.graph.NodeClass.applyHelper
  93  0.11% 66.74%      29 302929 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  94  0.11% 66.84%      29 303120 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  95  0.11% 66.95%      29 304459 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  96  0.10% 67.05%      28 300970 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
  97  0.10% 67.15%      28 302320 org.graalvm.compiler.nodes.LogicNegationNode.implies
  98  0.10% 67.26%      28 302446 com.oracle.truffle.r.runtime.RSource.fromSrcfile
  99  0.10% 67.36%      28 302660 org.graalvm.compiler.graph.NodeClass.applyEdges
 100  0.10% 67.46%      28 304173 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix
 101  0.10% 67.56%      27 301692 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 102  0.10% 67.66%      27 304197 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 103  0.10% 67.76%      27 304217 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 104  0.10% 67.85%      26 301834 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 105  0.10% 67.95%      26 301873 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 106  0.10% 68.04%      26 302256 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 107  0.10% 68.14%      26 302670 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 108  0.10% 68.23%      26 304437 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 109  0.09% 68.32%      25 301168 java.lang.String.intern
 110  0.09% 68.42%      25 302591 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval
 111  0.09% 68.51%      25 304362 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 112  0.09% 68.59%      24 302116 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 113  0.09% 68.68%      24 302193 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 114  0.09% 68.77%      24 302211 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
 115  0.08% 68.85%      23 300706 java.lang.ClassLoader.loadClass
 116  0.08% 68.94%      23 301992 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 117  0.08% 69.02%      23 302497 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 118  0.08% 69.11%      23 302737 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 119  0.08% 69.19%      23 302800 org.graalvm.compiler.graph.NodeBitMap.isMarked
 120  0.08% 69.27%      23 303199 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 121  0.08% 69.36%      23 304097 com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble
 122  0.08% 69.44%      22 301820 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 123  0.08% 69.52%      22 301848 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 124  0.08% 69.60%      22 302027 org.graalvm.collections.EconomicMapImpl.getHashIndex
 125  0.08% 69.68%      22 302203 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 126  0.08% 69.76%      22 302276 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 127  0.08% 69.84%      22 302844 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse
 128  0.08% 69.92%      22 304085 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 129  0.08% 70.00%      22 304844 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
 130  0.08% 70.08%      21 300964 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 131  0.08% 70.15%      21 301746 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 132  0.08% 70.23%      21 302050 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 133  0.08% 70.31%      21 302134 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes
 134  0.08% 70.39%      21 303406 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 135  0.07% 70.46%      20 301091 java.lang.String.intern
 136  0.07% 70.53%      20 302000 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 137  0.07% 70.60%      20 302152 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
 138  0.07% 70.68%      20 302508 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 139  0.07% 70.75%      20 302613 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 140  0.07% 70.82%      20 302872 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 141  0.07% 70.90%      20 302907 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 142  0.07% 70.97%      20 303401 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 143  0.07% 71.04%      19 300151 java.util.zip.ZipFile.getEntry
 144  0.07% 71.11%      19 300586 sun.misc.Unsafe.defineAnonymousClass
 145  0.07% 71.18%      19 301731 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 146  0.07% 71.25%      19 301749 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 147  0.07% 71.32%      19 302372 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 148  0.07% 71.39%      19 302460 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 149  0.07% 71.46%      19 302774 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 150  0.07% 71.53%      19 302814 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 151  0.07% 71.60%      19 304248 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 152  0.07% 71.66%      19 304438 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 153  0.07% 71.73%      18 300801 java.lang.Throwable.fillInStackTrace
 154  0.07% 71.80%      18 300882 java.lang.invoke.MethodHandleNatives.resolve
 155  0.07% 71.86%      18 301073 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 156  0.07% 71.93%      18 301306 java.lang.String.intern
 157  0.07% 71.99%      18 301760 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
 158  0.07% 72.06%      18 302230 org.graalvm.collections.EconomicMapImpl.get
 159  0.07% 72.13%      18 302313 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 160  0.07% 72.19%      18 303391 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 161  0.06% 72.25%      17 301944 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 162  0.06% 72.32%      17 302007 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 163  0.06% 72.38%      17 302289 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 164  0.06% 72.44%      17 303144 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 165  0.06% 72.50%      17 304218 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 166  0.06% 72.56%      17 304798 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 167  0.06% 72.62%      16 300783 java.util.zip.ZipFile.read
 168  0.06% 72.68%      16 301036 org.graalvm.collections.EconomicMapImpl.getHashIndex
 169  0.06% 72.74%      16 301670 sun.nio.fs.UnixException.rethrowAsIOException
 170  0.06% 72.80%      16 301839 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>
 171  0.06% 72.86%      16 301915 com.oracle.truffle.api.TruffleFile.checkAccess
 172  0.06% 72.91%      16 301939 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 173  0.06% 72.97%      16 302385 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 174  0.06% 73.03%      16 303014 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 175  0.06% 73.09%      16 303973 org.graalvm.compiler.graph.NodeClass.applyEdges
 176  0.06% 73.15%      16 304365 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 177  0.06% 73.21%      16 304464 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 178  0.06% 73.27%      16 304499 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 179  0.05% 73.32%      15 301315 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
 180  0.05% 73.38%      15 301699 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 181  0.05% 73.43%      15 301827 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 182  0.05% 73.48%      15 301990 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 183  0.05% 73.54%      15 301996 java.lang.Object.clone
 184  0.05% 73.59%      15 302397 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 185  0.05% 73.65%      15 302527 org.graalvm.compiler.graph.NodeClass.dataEquals
 186  0.05% 73.70%      15 302563 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 187  0.05% 73.76%      15 302631 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 188  0.05% 73.81%      15 303118 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 189  0.05% 73.87%      15 304216 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 190  0.05% 73.92%      15 304789 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight
 191  0.05% 73.97%      14 300074 java.lang.ClassLoader.findBootstrapClass
 192  0.05% 74.03%      14 301841 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 193  0.05% 74.08%      14 302029 org.graalvm.compiler.graph.NodeWorkList.addAll
 194  0.05% 74.13%      14 302102 com.oracle.truffle.r.runtime.nodes.RNode.voidExecute
 195  0.05% 74.18%      14 302281 org.graalvm.compiler.graph.InputEdges.update
 196  0.05% 74.23%      14 302439 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 197  0.05% 74.28%      14 302617 sun.nio.fs.UnixNativeDispatcher.access
 198  0.05% 74.33%      14 302686 org.graalvm.compiler.nodes.LogicNode.implies
 199  0.05% 74.38%      14 302833 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare
 200  0.05% 74.44%      14 303007 org.graalvm.compiler.core.common.Fields.copy
 201  0.05% 74.49%      14 303036 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 202  0.05% 74.54%      14 303239 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 203  0.05% 74.59%      14 303607 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 204  0.05% 74.64%      13 300253 java.lang.Class.forName0
 205  0.05% 74.68%      13 301149 java.lang.Object.hashCode
 206  0.05% 74.73%      13 301166 com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch
 207  0.05% 74.78%      13 301643 java.lang.String.intern
 208  0.05% 74.83%      13 301667 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 209  0.05% 74.87%      13 301673 sun.misc.Unsafe.allocateInstance
 210  0.05% 74.92%      13 301682 java.lang.Class.isPrimitive
 211  0.05% 74.97%      13 301825 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 212  0.05% 75.02%      13 302039 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 213  0.05% 75.06%      13 302140 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 214  0.05% 75.11%      13 302151 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call
 215  0.05% 75.16%      13 302309 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 216  0.05% 75.21%      13 302402 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 217  0.05% 75.25%      13 302682 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 218  0.05% 75.30%      13 303117 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 219  0.05% 75.35%      13 303197 org.graalvm.compiler.lir.LIRInstruction.visitEachState
 220  0.05% 75.40%      13 303430 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 221  0.04% 75.44%      12 300966 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 222  0.04% 75.48%      12 301861 java.lang.Object.clone
 223  0.04% 75.53%      12 301905 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 224  0.04% 75.57%      12 302138 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 225  0.04% 75.62%      12 302155 com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments
 226  0.04% 75.66%      12 302158 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 227  0.04% 75.70%      12 302237 java.lang.Class.isArray
 228  0.04% 75.75%      12 302467 org.graalvm.compiler.graph.NodeWorkList.<init>
 229  0.04% 75.79%      12 302477 org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit
 230  0.04% 75.84%      12 302507 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 231  0.04% 75.88%      12 302538 java.lang.System.identityHashCode
 232  0.04% 75.92%      12 302646 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 233  0.04% 75.97%      12 302665 java.util.ArrayList.addAll
 234  0.04% 76.01%      12 302676 org.graalvm.compiler.lir.ValueConsumer.visitValue
 235  0.04% 76.05%      12 302700 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 236  0.04% 76.10%      12 302947 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 237  0.04% 76.14%      12 302976 java.util.Arrays.copyOf
 238  0.04% 76.19%      12 303074 jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic
 239  0.04% 76.23%      12 303083 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 240  0.04% 76.27%      12 303160 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 241  0.04% 76.32%      12 304313 com.oracle.truffle.r.runtime.context.RContext.getInstance
 242  0.04% 76.36%      11 300294 java.util.zip.ZipFile.getEntry
 243  0.04% 76.40%      11 301002 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 244  0.04% 76.44%      11 301700 java.lang.Object.clone
 245  0.04% 76.48%      11 301713 sun.misc.Unsafe.getAddress
 246  0.04% 76.52%      11 301795 jdk.vm.ci.hotspot.CompilerToVM.asReflectionField
 247  0.04% 76.56%      11 302153 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 248  0.04% 76.60%      11 302268 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 249  0.04% 76.64%      11 302325 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 250  0.04% 76.68%      11 302639 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 251  0.04% 76.72%      11 302684 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 252  0.04% 76.76%      11 302790 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure
 253  0.04% 76.80%      11 302894 java.lang.System.identityHashCode
 254  0.04% 76.84%      11 303657 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 255  0.04% 76.88%      11 303740 org.graalvm.collections.EconomicMapImpl.add
 256  0.04% 76.92%      11 304439 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 257  0.04% 76.96%      11 304781 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 258  0.04% 77.00%      11 304894 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 259  0.04% 77.04%      10 300150 java.lang.ClassLoader.findBootstrapClass
 260  0.04% 77.07%      10 300849 java.util.zip.ZipFile.read
 261  0.04% 77.11%      10 301658 java.lang.Object.clone
 262  0.04% 77.15%      10 301909 sun.misc.Unsafe.allocateInstance
 263  0.04% 77.18%      10 301941 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 264  0.04% 77.22%      10 302296 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 265  0.04% 77.26%      10 302328 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
 266  0.04% 77.29%      10 302637 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 267  0.04% 77.33%      10 302638 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 268  0.04% 77.37%      10 302653 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 269  0.04% 77.40%      10 302658 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 270  0.04% 77.44%      10 302730 org.graalvm.collections.EconomicMapImpl.createHash
 271  0.04% 77.48%      10 302890 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 272  0.04% 77.51%      10 302908 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 273  0.04% 77.55%      10 303121 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 274  0.04% 77.59%      10 303252 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 275  0.04% 77.62%      10 303330 org.graalvm.compiler.core.match.MatchPattern.matchShape
 276  0.04% 77.66%      10 303387 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
 277  0.04% 77.70%      10 303444 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 278  0.03% 77.73%       9 301295 java.lang.Object.clone
 279  0.03% 77.76%       9 301296 java.util.zip.ZipFile.getNextEntry
 280  0.03% 77.79%       9 301747 java.lang.Object.clone
 281  0.03% 77.83%       9 301862 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute
 282  0.03% 77.86%       9 302043 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 283  0.03% 77.89%       9 302261 com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue
 284  0.03% 77.93%       9 302297 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 285  0.03% 77.96%       9 302348 org.graalvm.collections.EconomicMapImpl.put
 286  0.03% 77.99%       9 302490 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 287  0.03% 78.02%       9 302659 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 288  0.03% 78.06%       9 302743 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 289  0.03% 78.09%       9 302780 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 290  0.03% 78.12%       9 302798 org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks
 291  0.03% 78.16%       9 302921 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 292  0.03% 78.19%       9 303008 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate
 293  0.03% 78.22%       9 303184 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 294  0.03% 78.25%       9 303215 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 295  0.03% 78.29%       9 303235 org.graalvm.collections.EconomicMapImpl.add
 296  0.03% 78.32%       9 303292 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 297  0.03% 78.35%       9 303410 org.graalvm.compiler.lir.LIRFrameState.forEachState
 298  0.03% 78.39%       9 303916 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 299  0.03% 78.42%       9 304166 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 300  0.03% 78.45%       9 304267 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 301  0.03% 78.49%       9 304562 sun.misc.Unsafe.copyMemory
 302  0.03% 78.51%       8 300898 java.security.AccessController.doPrivileged
 303  0.03% 78.54%       8 300968 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 304  0.03% 78.57%       8 301088 org.antlr.v4.runtime.atn.SingletonPredictionContext.equals
 305  0.03% 78.60%       8 301208 com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue
 306  0.03% 78.63%       8 301392 com.oracle.truffle.api.object.Location.get
 307  0.03% 78.66%       8 301425 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 308  0.03% 78.69%       8 301777 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 309  0.03% 78.72%       8 301864 org.graalvm.compiler.nodes.ValueNode.stamp
 310  0.03% 78.75%       8 301874 org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid
 311  0.03% 78.78%       8 302221 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.access$100
 312  0.03% 78.81%       8 302247 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 313  0.03% 78.84%       8 302636 com.oracle.truffle.r.nodes.access.ConstantNode.execute
 314  0.03% 78.87%       8 302640 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 315  0.03% 78.89%       8 302695 com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute
 316  0.03% 78.92%       8 302773 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse
 317  0.03% 78.95%       8 302856 com.oracle.truffle.api.nodes.NodeUtil.visitChild
 318  0.03% 78.98%       8 302880 org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph
 319  0.03% 79.01%       8 302899 org.graalvm.collections.EconomicMapImpl.getHashIndex
 320  0.03% 79.04%       8 302912 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 321  0.03% 79.07%       8 302920 org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run
 322  0.03% 79.10%       8 303124 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 323  0.03% 79.13%       8 303195 java.util.ArrayList.forEach
 324  0.03% 79.16%       8 303250 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 325  0.03% 79.19%       8 303293 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 326  0.03% 79.22%       8 303311 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 327  0.03% 79.25%       8 303340 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 328  0.03% 79.27%       8 303346 org.graalvm.collections.EconomicMapImpl.get
 329  0.03% 79.30%       8 303357 org.graalvm.compiler.lir.ValueConsumer.visitValue
 330  0.03% 79.33%       8 303386 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 331  0.03% 79.36%       8 303408 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 332  0.03% 79.39%       8 303453 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 333  0.03% 79.42%       8 303694 org.graalvm.compiler.nodes.ValueNode.getStackKind
 334  0.03% 79.45%       8 303853 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 335  0.03% 79.48%       8 304317 com.oracle.truffle.r.nodes.builtin.base.Sample.doSample
 336  0.03% 79.51%       8 304461 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 337  0.03% 79.54%       8 304888 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 338  0.03% 79.56%       7 300863 java.lang.Class.getDeclaredFields0
 339  0.03% 79.59%       7 301001 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 340  0.03% 79.61%       7 301193 sun.misc.Unsafe.copyMemory
 341  0.03% 79.64%       7 301381 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 342  0.03% 79.67%       7 301414 com.oracle.truffle.r.nodes.function.WrapArgumentNode.handleShareable
 343  0.03% 79.69%       7 301627 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute
 344  0.03% 79.72%       7 301702 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 345  0.03% 79.74%       7 301778 org.graalvm.compiler.nodes.GraphDecoder.decode
 346  0.03% 79.77%       7 301788 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 347  0.03% 79.79%       7 301796 org.graalvm.compiler.nodes.IfNode.simplify
 348  0.03% 79.82%       7 301851 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 349  0.03% 79.85%       7 301879 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 350  0.03% 79.87%       7 301916 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 351  0.03% 79.90%       7 301968 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 352  0.03% 79.92%       7 302021 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 353  0.03% 79.95%       7 302022 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 354  0.03% 79.97%       7 302161 java.util.Objects.equals
 355  0.03% 80.00%       7 302164 com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute
 356  0.03% 80.02%       7 302179 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault
 357  0.03% 80.05%       7 302200 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 358  0.03% 80.08%       7 302278 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 359  0.03% 80.10%       7 302358 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 360  0.03% 80.13%       7 302366 sun.nio.fs.UnixFileSystemProvider.checkAccess
 361  0.03% 80.15%       7 302373 sun.nio.fs.UnixNativeDispatcher.access
 362  0.03% 80.18%       7 302413 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 363  0.03% 80.20%       7 302428 org.graalvm.compiler.core.LIRGenerationPhase.run
 364  0.03% 80.23%       7 302437 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 365  0.03% 80.25%       7 302535 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 366  0.03% 80.28%       7 302549 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 367  0.03% 80.31%       7 302572 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 368  0.03% 80.33%       7 302722 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 369  0.03% 80.36%       7 302783 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 370  0.03% 80.38%       7 302820 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 371  0.03% 80.41%       7 302869 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 372  0.03% 80.43%       7 302913 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 373  0.03% 80.46%       7 302940 org.graalvm.compiler.lir.ValueConsumer.visitValue
 374  0.03% 80.48%       7 302958 com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest
 375  0.03% 80.51%       7 302972 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
 376  0.03% 80.54%       7 303011 com.oracle.truffle.r.library.methods.MethodsListDispatch$R_getClassFromCache.callGetClassFromCache
 377  0.03% 80.56%       7 303028 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 378  0.03% 80.59%       7 303089 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 379  0.03% 80.61%       7 303114 java.lang.Object.clone
 380  0.03% 80.64%       7 303139 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 381  0.03% 80.66%       7 303153 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 382  0.03% 80.69%       7 303191 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 383  0.03% 80.71%       7 303222 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval
 384  0.03% 80.74%       7 303274 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority
 385  0.03% 80.77%       7 303278 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 386  0.03% 80.79%       7 303289 com.oracle.truffle.api.object.Location.get
 387  0.03% 80.82%       7 303296 org.graalvm.collections.EconomicMapImpl.compareKeys
 388  0.03% 80.84%       7 303327 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 389  0.03% 80.87%       7 303354 org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath
 390  0.03% 80.89%       7 303388 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 391  0.03% 80.92%       7 303404 org.graalvm.compiler.graph.NodeClass.applyEdges
 392  0.03% 80.95%       7 303477 org.graalvm.compiler.lir.ValueConsumer.visitValue
 393  0.03% 80.97%       7 303491 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 394  0.03% 81.00%       7 303498 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 395  0.03% 81.02%       7 303597 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 396  0.03% 81.05%       7 303629 org.graalvm.collections.EconomicMapImpl.findLinear
 397  0.03% 81.07%       7 303859 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 398  0.02% 81.10%       6 300949 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 399  0.02% 81.12%       6 300956 org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions
 400  0.02% 81.14%       6 301288 sun.text.normalizer.NormalizerBase$NFDMode.normalize
 401  0.02% 81.16%       6 301292 java.lang.Class.isArray
 402  0.02% 81.18%       6 301319 java.lang.Object.hashCode
 403  0.02% 81.20%       6 301379 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 404  0.02% 81.23%       6 301404 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 405  0.02% 81.25%       6 301444 org.graalvm.collections.EconomicMapImpl.get
 406  0.02% 81.27%       6 301672 sun.misc.Unsafe.allocateInstance
 407  0.02% 81.29%       6 301743 sun.misc.Unsafe.getAddress
 408  0.02% 81.31%       6 301774 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 409  0.02% 81.34%       6 301785 org.graalvm.compiler.nodes.GraphDecoder.decode
 410  0.02% 81.36%       6 301808 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 411  0.02% 81.38%       6 302106 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 412  0.02% 81.40%       6 302172 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 413  0.02% 81.42%       6 302177 org.graalvm.compiler.phases.common.FixReadsPhase.run
 414  0.02% 81.45%       6 302187 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 415  0.02% 81.47%       6 302201 java.lang.Object.clone
 416  0.02% 81.49%       6 302252 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 417  0.02% 81.51%       6 302280 sun.misc.Unsafe.getAddress
 418  0.02% 81.53%       6 302330 org.graalvm.compiler.graph.NodeClass.applyEdges
 419  0.02% 81.56%       6 302344 sun.nio.fs.UnixException.rethrowAsIOException
 420  0.02% 81.58%       6 302465 org.graalvm.compiler.nodes.IfNode.simplify
 421  0.02% 81.60%       6 302494 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
 422  0.02% 81.62%       6 302499 org.graalvm.compiler.nodes.GraphEncoder.prepare
 423  0.02% 81.64%       6 302558 org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual
 424  0.02% 81.67%       6 302569 java.util.Objects.equals
 425  0.02% 81.69%       6 302634 org.graalvm.compiler.java.BciBlockMapping.fixLoopBits
 426  0.02% 81.71%       6 302669 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.addUse
 427  0.02% 81.73%       6 302673 org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent
 428  0.02% 81.75%       6 302683 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 429  0.02% 81.77%       6 302742 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 430  0.02% 81.80%       6 302792 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 431  0.02% 81.82%       6 302821 org.graalvm.compiler.graph.NodeClass.createNodeDuplicates
 432  0.02% 81.84%       6 302837 org.graalvm.compiler.core.LIRGenerationPhase.run
 433  0.02% 81.86%       6 302917 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 434  0.02% 81.88%       6 302933 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 435  0.02% 81.91%       6 302951 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 436  0.02% 81.93%       6 303005 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 437  0.02% 81.95%       6 303100 org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind
 438  0.02% 81.97%       6 303156 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 439  0.02% 81.99%       6 303192 org.graalvm.compiler.nodes.LogicNegationNode.implies
 440  0.02% 82.02%       6 303214 org.graalvm.compiler.nodes.ValueNode.stamp
 441  0.02% 82.04%       6 303305 org.graalvm.compiler.graph.NodeWorkList.addAll
 442  0.02% 82.06%       6 303363 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 443  0.02% 82.08%       6 303465 org.graalvm.compiler.lir.dfa.MarkBasePointersPhase$Marker$BasePointersSet.put
 444  0.02% 82.10%       6 303513 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 445  0.02% 82.13%       6 303515 com.oracle.truffle.r.runtime.RArguments.getCall
 446  0.02% 82.15%       6 303633 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 447  0.02% 82.17%       6 303784 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 448  0.02% 82.19%       6 303957 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 449  0.02% 82.21%       6 304103 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 450  0.02% 82.24%       6 304238 org.graalvm.compiler.lir.LIRIntrospection.forEach
 451  0.02% 82.26%       6 304315 com.oracle.truffle.r.runtime.context.RContext.getInstance
 452  0.02% 82.28%       6 304341 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt
 453  0.02% 82.30%       6 304896 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 454  0.02% 82.32%       5 300848 sun.reflect.ConstantPool.getUTF8At0
 455  0.02% 82.34%       5 300959 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 456  0.02% 82.36%       5 301009 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 457  0.02% 82.37%       5 301050 java.lang.Class.getSuperclass
 458  0.02% 82.39%       5 301176 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 459  0.02% 82.41%       5 301311 java.lang.Object.clone
 460  0.02% 82.43%       5 301330 java.lang.Object.hashCode
 461  0.02% 82.45%       5 301342 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 462  0.02% 82.47%       5 301389 org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet
 463  0.02% 82.48%       5 301430 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 464  0.02% 82.50%       5 301515 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 465  0.02% 82.52%       5 301629 com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute
 466  0.02% 82.54%       5 301654 sun.misc.Unsafe.getAddress
 467  0.02% 82.56%       5 301711 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 468  0.02% 82.58%       5 301776 org.graalvm.collections.EconomicMapImpl.get
 469  0.02% 82.59%       5 301892 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 470  0.02% 82.61%       5 301991 java.lang.Object.clone
 471  0.02% 82.63%       5 302024 java.util.TreeMap.getEntry
 472  0.02% 82.65%       5 302032 org.graalvm.collections.EconomicMapImpl.compareKeys
 473  0.02% 82.67%       5 302088 com.oracle.truffle.r.runtime.context.RContext.getInstance
 474  0.02% 82.69%       5 302186 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs
 475  0.02% 82.70%       5 302214 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2
 476  0.02% 82.72%       5 302269 java.lang.Object.clone
 477  0.02% 82.74%       5 302329 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 478  0.02% 82.76%       5 302335 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 479  0.02% 82.78%       5 302449 org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize
 480  0.02% 82.79%       5 302526 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 481  0.02% 82.81%       5 302537 org.graalvm.collections.EconomicMapImpl.getHashIndex
 482  0.02% 82.83%       5 302578 org.graalvm.compiler.graph.Graph.findDuplicate
 483  0.02% 82.85%       5 302582 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 484  0.02% 82.87%       5 302668 sun.nio.fs.UnixFileSystemProvider.checkAccess
 485  0.02% 82.89%       5 302678 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 486  0.02% 82.90%       5 302689 org.graalvm.compiler.graph.NodeClass.dataEquals
 487  0.02% 82.92%       5 302696 org.graalvm.compiler.graph.NodeClass.equalEdges
 488  0.02% 82.94%       5 302702 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 489  0.02% 82.96%       5 302732 com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply
 490  0.02% 82.98%       5 302764 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 491  0.02% 83.00%       5 302877 org.graalvm.compiler.graph.Graph.grow
 492  0.02% 83.01%       5 302879 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 493  0.02% 83.03%       5 302918 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 494  0.02% 83.05%       5 302977 org.graalvm.compiler.replacements.PEGraphDecoder.doInline
 495  0.02% 83.07%       5 302981 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos
 496  0.02% 83.09%       5 302989 org.graalvm.compiler.graph.NodeInputList.update
 497  0.02% 83.11%       5 302991 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock
 498  0.02% 83.12%       5 303119 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 499  0.02% 83.14%       5 303173 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 500  0.02% 83.16%       5 303204 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.findOptimalSplitPos
 501  0.02% 83.18%       5 303381 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling
 502  0.02% 83.20%       5 303405 org.graalvm.compiler.nodes.PhiNode.canonical
 503  0.02% 83.22%       5 303411 org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.<init>
 504  0.02% 83.23%       5 303413 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 505  0.02% 83.25%       5 303428 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 506  0.02% 83.27%       5 303442 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 507  0.02% 83.29%       5 303578 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 508  0.02% 83.31%       5 303587 jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset
 509  0.02% 83.32%       5 303595 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply
 510  0.02% 83.34%       5 303617 org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent
 511  0.02% 83.36%       5 303628 org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply
 512  0.02% 83.38%       5 303711 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 513  0.02% 83.40%       5 303722 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode
 514  0.02% 83.42%       5 303824 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 515  0.02% 83.43%       5 303835 org.graalvm.collections.EconomicMapImpl.compareKeys
 516  0.02% 83.45%       5 303892 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 517  0.02% 83.47%       5 303969 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 518  0.02% 83.49%       5 303970 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 519  0.02% 83.51%       5 304099 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 520  0.02% 83.53%       5 304125 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache
 521  0.02% 83.54%       5 304149 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit
 522  0.02% 83.56%       5 304235 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 523  0.02% 83.58%       5 304349 sun.misc.Unsafe.copyMemory
 524  0.02% 83.60%       5 304396 org.graalvm.compiler.nodes.AbstractMergeNode$$Lambda$917.47109014.get$Lambda
 525  0.02% 83.62%       5 304443 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 526  0.02% 83.64%       5 304675 com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add
 527  0.02% 83.65%       5 304779 com.oracle.truffle.r.runtime.data.RIntVector$FastPathAccess.getIntImpl
 528  0.01% 83.67%       4 300705 java.net.URLClassLoader.findClass
 529  0.01% 83.68%       4 300971 org.antlr.v4.runtime.misc.FlexibleHashMap.get
 530  0.01% 83.70%       4 301150 java.util.zip.InflaterInputStream.<init>
 531  0.01% 83.71%       4 301212 java.lang.Class.isArray
 532  0.01% 83.73%       4 301303 com.oracle.truffle.r.nodes.function.PromiseHelperNodeFactory$GenerateValueForEagerPromiseNodeGen.execute
 533  0.01% 83.74%       4 301318 com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl
 534  0.01% 83.76%       4 301329 org.graalvm.collections.EconomicMapImpl.get
 535  0.01% 83.77%       4 301401 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 536  0.01% 83.79%       4 301504 com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue
 537  0.01% 83.80%       4 301657 com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess
 538  0.01% 83.81%       4 301659 java.lang.Object.clone
 539  0.01% 83.83%       4 301678 com.oracle.truffle.r.runtime.RArguments.getCall
 540  0.01% 83.84%       4 301794 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 541  0.01% 83.86%       4 301800 org.graalvm.compiler.nodes.GraphDecoder.decode
 542  0.01% 83.87%       4 301809 sun.misc.Unsafe.getAddress
 543  0.01% 83.89%       4 301828 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObject
 544  0.01% 83.90%       4 301842 org.graalvm.compiler.graph.Node.replaceAtUsages
 545  0.01% 83.92%       4 301898 jdk.vm.ci.hotspot.CompilerToVM.asReflectionExecutable
 546  0.01% 83.93%       4 302071 org.graalvm.compiler.lir.dfa.LocationMarker.build
 547  0.01% 83.95%       4 302176 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 548  0.01% 83.96%       4 302183 org.graalvm.compiler.graph.NodeClass.dataEquals
 549  0.01% 83.98%       4 302216 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 550  0.01% 83.99%       4 302273 org.graalvm.compiler.code.CompilationResult.setMethods
 551  0.01% 84.00%       4 302277 com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute
 552  0.01% 84.02%       4 302322 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 553  0.01% 84.03%       4 302324 java.lang.Object.clone
 554  0.01% 84.05%       4 302338 java.util.TimSort.binarySort
 555  0.01% 84.06%       4 302349 sun.misc.Unsafe.getAddress
 556  0.01% 84.08%       4 302430 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 557  0.01% 84.09%       4 302454 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 558  0.01% 84.11%       4 302466 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 559  0.01% 84.12%       4 302488 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0
 560  0.01% 84.14%       4 302518 org.graalvm.collections.EconomicMapImpl.get
 561  0.01% 84.15%       4 302524 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 562  0.01% 84.17%       4 302528 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 563  0.01% 84.18%       4 302548 org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder
 564  0.01% 84.19%       4 302550 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray
 565  0.01% 84.21%       4 302590 sun.misc.Unsafe.getAddress
 566  0.01% 84.22%       4 302610 com.oracle.truffle.r.runtime.data.RPromise$EagerPromise.isValid
 567  0.01% 84.24%       4 302674 org.graalvm.compiler.nodes.GraphDecoder.decode
 568  0.01% 84.25%       4 302693 org.graalvm.compiler.nodes.spi.NodeWithState.states
 569  0.01% 84.27%       4 302709 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks
 570  0.01% 84.28%       4 302716 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 571  0.01% 84.30%       4 302738 sun.misc.Unsafe.getAddress
 572  0.01% 84.31%       4 302739 org.graalvm.collections.EconomicMapImpl.compareKeys
 573  0.01% 84.33%       4 302779 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 574  0.01% 84.34%       4 302823 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 575  0.01% 84.36%       4 302860 org.graalvm.collections.EconomicMapImpl.getHashIndex
 576  0.01% 84.37%       4 302875 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 577  0.01% 84.38%       4 302884 java.util.Objects.equals
 578  0.01% 84.40%       4 302885 org.graalvm.compiler.graph.Node.replaceAtUsages
 579  0.01% 84.41%       4 302897 java.util.Objects.equals
 580  0.01% 84.43%       4 302909 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors
 581  0.01% 84.44%       4 302923 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 582  0.01% 84.46%       4 302942 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 583  0.01% 84.47%       4 302943 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 584  0.01% 84.49%       4 302959 org.graalvm.compiler.phases.common.AddressLoweringPhase.run
 585  0.01% 84.50%       4 302964 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 586  0.01% 84.52%       4 302969 java.util.Objects.equals
 587  0.01% 84.53%       4 302978 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 588  0.01% 84.55%       4 303013 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 589  0.01% 84.56%       4 303029 org.graalvm.compiler.nodes.GraphEncoder.writeEdges
 590  0.01% 84.57%       4 303050 org.graalvm.compiler.nodes.LogicNode.implies
 591  0.01% 84.59%       4 303111 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 592  0.01% 84.60%       4 303130 org.graalvm.compiler.lir.ValueConsumer.visitValue
 593  0.01% 84.62%       4 303133 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 594  0.01% 84.63%       4 303136 org.graalvm.compiler.graph.NodeInputList.update
 595  0.01% 84.65%       4 303137 org.graalvm.compiler.nodes.LogicNode.implies
 596  0.01% 84.66%       4 303149 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 597  0.01% 84.68%       4 303155 org.graalvm.compiler.graph.Node.safeDelete
 598  0.01% 84.69%       4 303167 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 599  0.01% 84.71%       4 303170 java.util.Objects.equals
 600  0.01% 84.72%       4 303179 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.usagesDroppedToZero
 601  0.01% 84.74%       4 303186 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 602  0.01% 84.75%       4 303187 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 603  0.01% 84.76%       4 303218 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 604  0.01% 84.78%       4 303220 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove
 605  0.01% 84.79%       4 303224 org.graalvm.compiler.lir.ValueConsumer.visitValue
 606  0.01% 84.81%       4 303265 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 607  0.01% 84.82%       4 303279 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 608  0.01% 84.84%       4 303285 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 609  0.01% 84.85%       4 303306 org.graalvm.compiler.nodes.ValueNode.stamp
 610  0.01% 84.87%       4 303321 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 611  0.01% 84.88%       4 303325 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 612  0.01% 84.90%       4 303380 com.oracle.truffle.api.object.Location.get
 613  0.01% 84.91%       4 303402 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.addMapping
 614  0.01% 84.93%       4 303414 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 615  0.01% 84.94%       4 303431 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 616  0.01% 84.96%       4 303521 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 617  0.01% 84.97%       4 303546 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 618  0.01% 84.98%       4 303551 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit
 619  0.01% 85.00%       4 303558 com.oracle.truffle.r.nodes.unary.CastNode.doCast
 620  0.01% 85.01%       4 303620 org.graalvm.compiler.lir.dfa.RegStackValueSet.equals
 621  0.01% 85.03%       4 303662 org.graalvm.collections.EconomicMapImpl.findLinear
 622  0.01% 85.04%       4 303666 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 623  0.01% 85.06%       4 303687 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 624  0.01% 85.07%       4 303703 org.graalvm.compiler.nodes.GraphEncoder.encode
 625  0.01% 85.09%       4 303705 org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>
 626  0.01% 85.10%       4 303712 org.graalvm.compiler.lir.alloc.lsra.Interval.hasHoleBetween
 627  0.01% 85.12%       4 303725 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval
 628  0.01% 85.13%       4 303728 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 629  0.01% 85.15%       4 303755 org.graalvm.compiler.truffle.compiler.phases.DeoptimizeOnExceptionPhase.run
 630  0.01% 85.16%       4 303787 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 631  0.01% 85.17%       4 303825 org.graalvm.compiler.nodes.spi.NodeWithState.states
 632  0.01% 85.19%       4 303827 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 633  0.01% 85.20%       4 303971 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 634  0.01% 85.22%       4 304111 org.graalvm.compiler.lir.LIRFrameState.visitValues
 635  0.01% 85.23%       4 304128 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 636  0.01% 85.25%       4 304179 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize
 637  0.01% 85.26%       4 304229 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 638  0.01% 85.28%       4 304233 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 639  0.01% 85.29%       4 304335 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 640  0.01% 85.31%       4 304420 org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph
 641  0.01% 85.32%       4 304421 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix
 642  0.01% 85.34%       4 304441 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 643  0.01% 85.35%       4 304601 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
 644  0.01% 85.36%       4 304893 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 645  0.01% 85.38%       3 300152 java.util.zip.ZipFile.getEntryBytes
 646  0.01% 85.39%       3 300304 java.util.jar.JarFile.getMetaInfEntryNames
 647  0.01% 85.40%       3 300832 sun.reflect.Reflection.getCallerClass
 648  0.01% 85.41%       3 300844 java.lang.ClassLoader.findLoadedClass0
 649  0.01% 85.42%       3 300856 java.lang.Object.<init>
 650  0.01% 85.43%       3 300881 java.util.zip.ZipFile.getEntryTime
 651  0.01% 85.44%       3 300960 org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext
 652  0.01% 85.45%       3 300973 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 653  0.01% 85.46%       3 300983 org.antlr.v4.runtime.atn.PredictionContext.getCachedContext
 654  0.01% 85.47%       3 301008 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 655  0.01% 85.49%       3 301103 java.security.AccessController.doPrivileged
 656  0.01% 85.50%       3 301145 java.lang.String.intern
 657  0.01% 85.51%       3 301181 java.lang.Class.getEnclosingMethod0
 658  0.01% 85.52%       3 301298 org.antlr.v4.runtime.misc.MurmurHash.update
 659  0.01% 85.53%       3 301328 com.oracle.truffle.r.runtime.env.REnvironment.get
 660  0.01% 85.54%       3 301382 java.util.HashMap.resize
 661  0.01% 85.55%       3 301431 com.oracle.truffle.r.nodes.InlineCacheNode.doCached
 662  0.01% 85.56%       3 301518 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall
 663  0.01% 85.57%       3 301689 sun.misc.Unsafe.getAddress
 664  0.01% 85.58%       3 301744 java.lang.Class.isPrimitive
 665  0.01% 85.59%       3 301798 org.graalvm.compiler.nodes.GraphDecoder.decode
 666  0.01% 85.61%       3 301806 org.graalvm.compiler.nodes.GraphDecoder.decode
 667  0.01% 85.62%       3 301843 java.lang.Object.clone
 668  0.01% 85.63%       3 301858 java.util.ArrayDeque.doubleCapacity
 669  0.01% 85.64%       3 301871 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 670  0.01% 85.65%       3 301895 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 671  0.01% 85.66%       3 301901 sun.nio.fs.UnixNativeDispatcher.stat0
 672  0.01% 85.67%       3 301987 java.lang.String.intern
 673  0.01% 85.68%       3 302057 org.graalvm.compiler.nodes.UnaryOpLogicNode.implies
 674  0.01% 85.69%       3 302125 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet
 675  0.01% 85.70%       3 302141 sun.misc.Unsafe.getAddress
 676  0.01% 85.72%       3 302165 org.graalvm.compiler.java.BciBlockMapping.iterateOverBytecodes
 677  0.01% 85.73%       3 302188 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 678  0.01% 85.74%       3 302212 com.oracle.truffle.r.nodes.access.variables.LocalReadVariableNode.execute
 679  0.01% 85.75%       3 302227 com.oracle.truffle.r.nodes.unary.CastNode.doCast
 680  0.01% 85.76%       3 302294 org.graalvm.compiler.replacements.PEGraphDecoder$PEAppendGraphBuilderContext.<init>
 681  0.01% 85.77%       3 302350 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 682  0.01% 85.78%       3 302371 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal
 683  0.01% 85.79%       3 302395 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 684  0.01% 85.80%       3 302453 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 685  0.01% 85.81%       3 302491 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 686  0.01% 85.82%       3 302506 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
 687  0.01% 85.84%       3 302512 org.graalvm.compiler.java.BytecodeParser.notifyAfterInline
 688  0.01% 85.85%       3 302517 org.graalvm.collections.EconomicMapImpl.createHash
 689  0.01% 85.86%       3 302521 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 690  0.01% 85.87%       3 302545 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 691  0.01% 85.88%       3 302596 java.util.TreeMap.getEntry
 692  0.01% 85.89%       3 302598 org.graalvm.compiler.nodes.util.GraphUtil.markUsages
 693  0.01% 85.90%       3 302604 org.graalvm.compiler.graph.Graph.findDuplicate
 694  0.01% 85.91%       3 302620 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 695  0.01% 85.92%       3 302621 org.graalvm.compiler.graph.Node.safeDelete
 696  0.01% 85.93%       3 302628 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 697  0.01% 85.95%       3 302629 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 698  0.01% 85.96%       3 302643 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi
 699  0.01% 85.97%       3 302725 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 700  0.01% 85.98%       3 302766 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 701  0.01% 85.99%       3 302784 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 702  0.01% 86.00%       3 302802 org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo
 703  0.01% 86.01%       3 302808 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call
 704  0.01% 86.02%       3 302847 org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves
 705  0.01% 86.03%       3 302851 org.graalvm.compiler.lir.EdgeMoveOptimizer.run
 706  0.01% 86.04%       3 302859 org.graalvm.compiler.nodes.IfNode.<init>
 707  0.01% 86.06%       3 302863 org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>
 708  0.01% 86.07%       3 302873 org.graalvm.compiler.graph.Graph.register
 709  0.01% 86.08%       3 302878 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 710  0.01% 86.09%       3 302888 org.graalvm.compiler.nodes.calc.AddNode.canonical
 711  0.01% 86.10%       3 302889 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter
 712  0.01% 86.11%       3 302896 org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8
 713  0.01% 86.12%       3 302901 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized
 714  0.01% 86.13%       3 302965 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute
 715  0.01% 86.14%       3 302967 java.lang.ClassValue.getFromBackup
 716  0.01% 86.15%       3 302975 org.graalvm.compiler.nodes.GraphEncoder.prepare
 717  0.01% 86.16%       3 303025 org.graalvm.compiler.graph.Node.replaceFirstInput
 718  0.01% 86.18%       3 303030 org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>
 719  0.01% 86.19%       3 303039 org.graalvm.collections.EconomicMapImpl.get
 720  0.01% 86.20%       3 303040 org.graalvm.compiler.nodes.GraphDecoder.decode
 721  0.01% 86.21%       3 303048 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 722  0.01% 86.22%       3 303054 org.graalvm.compiler.nodes.ValueNode.getStackKind
 723  0.01% 86.23%       3 303065 com.oracle.truffle.r.runtime.RSource.fromSrcfile
 724  0.01% 86.24%       3 303070 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper
 725  0.01% 86.25%       3 303075 com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric
 726  0.01% 86.26%       3 303079 java.lang.System.identityHashCode
 727  0.01% 86.27%       3 303094 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 728  0.01% 86.29%       3 303096 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 729  0.01% 86.30%       3 303107 org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke
 730  0.01% 86.31%       3 303108 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 731  0.01% 86.32%       3 303112 org.graalvm.collections.EconomicMapImpl.get
 732  0.01% 86.33%       3 303122 org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanLifetimeAnalysisPhase.setHint
 733  0.01% 86.34%       3 303127 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 734  0.01% 86.35%       3 303150 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 735  0.01% 86.36%       3 303174 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 736  0.01% 86.37%       3 303180 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 737  0.01% 86.38%       3 303205 org.graalvm.compiler.graph.Node.replaceAtUsages
 738  0.01% 86.40%       3 303230 org.graalvm.compiler.lir.ValueConsumer.visitValue
 739  0.01% 86.41%       3 303237 com.oracle.truffle.r.nodes.control.RLengthNode.doCachedContainer
 740  0.01% 86.42%       3 303244 org.graalvm.compiler.nodes.GraphEncoder.encode
 741  0.01% 86.43%       3 303273 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 742  0.01% 86.44%       3 303277 com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue
 743  0.01% 86.45%       3 303282 org.graalvm.compiler.replacements.SnippetTemplate.updateStamps
 744  0.01% 86.46%       3 303291 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 745  0.01% 86.47%       3 303295 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 746  0.01% 86.48%       3 303307 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors
 747  0.01% 86.49%       3 303318 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
 748  0.01% 86.50%       3 303328 org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.addPathToCodeEmittingOrder
 749  0.01% 86.52%       3 303343 org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify
 750  0.01% 86.53%       3 303384 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 751  0.01% 86.54%       3 303389 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopBlocks
 752  0.01% 86.55%       3 303399 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 753  0.01% 86.56%       3 303419 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 754  0.01% 86.57%       3 303421 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 755  0.01% 86.58%       3 303424 org.graalvm.compiler.loop.LoopFragment.markFloating
 756  0.01% 86.59%       3 303446 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 757  0.01% 86.60%       3 303448 org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace
 758  0.01% 86.61%       3 303456 org.graalvm.compiler.nodes.IfNode.simplify
 759  0.01% 86.63%       3 303457 org.graalvm.compiler.loop.LoopFragment.computeNodes
 760  0.01% 86.64%       3 303476 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 761  0.01% 86.65%       3 303485 org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.lowerCommitAllocationNode
 762  0.01% 86.66%       3 303493 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 763  0.01% 86.67%       3 303499 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 764  0.01% 86.68%       3 303509 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 765  0.01% 86.69%       3 303511 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 766  0.01% 86.70%       3 303529 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 767  0.01% 86.71%       3 303540 com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply
 768  0.01% 86.72%       3 303549 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 769  0.01% 86.74%       3 303565 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.markVirtualUsages
 770  0.01% 86.75%       3 303576 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeEndOfFunction
 771  0.01% 86.76%       3 303589 org.graalvm.compiler.graph.NodeInputList.update
 772  0.01% 86.77%       3 303600 java.util.Collections$UnmodifiableCollection$1.hasNext
 773  0.01% 86.78%       3 303602 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny
 774  0.01% 86.79%       3 303609 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 775  0.01% 86.80%       3 303630 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 776  0.01% 86.81%       3 303654 com.oracle.truffle.r.runtime.data.RAttributable.<init>
 777  0.01% 86.82%       3 303669 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 778  0.01% 86.83%       3 303676 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 779  0.01% 86.84%       3 303716 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove
 780  0.01% 86.86%       3 303717 org.graalvm.compiler.lir.ssa.SSAUtil.forEachPhiValuePair
 781  0.01% 86.87%       3 303730 jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue
 782  0.01% 86.88%       3 303735 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 783  0.01% 86.89%       3 303761 org.graalvm.compiler.nodes.ValueNode.stamp
 784  0.01% 86.90%       3 303772 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 785  0.01% 86.91%       3 303801 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 786  0.01% 86.92%       3 303830 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 787  0.01% 86.93%       3 303849 java.util.Objects.equals
 788  0.01% 86.94%       3 303860 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualAlias
 789  0.01% 86.95%       3 303864 org.graalvm.compiler.graph.Node.replaceAtUsages
 790  0.01% 86.97%       3 303893 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 791  0.01% 86.98%       3 303894 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi
 792  0.01% 86.99%       3 303901 com.oracle.truffle.r.nodes.access.vector.PositionsCheckNode.isSupported
 793  0.01% 87.00%       3 303917 com.oracle.truffle.r.nodes.control.NextNode.execute
 794  0.01% 87.01%       3 304026 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillExcludeActiveFixed
 795  0.01% 87.02%       3 304028 org.graalvm.compiler.lir.ValueProcedure.doValue
 796  0.01% 87.03%       3 304052 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 797  0.01% 87.04%       3 304070 org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin
 798  0.01% 87.05%       3 304082 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge
 799  0.01% 87.06%       3 304101 org.graalvm.collections.EconomicMapImpl.getHashIndex
 800  0.01% 87.08%       3 304123 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 801  0.01% 87.09%       3 304133 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 802  0.01% 87.10%       3 304135 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 803  0.01% 87.11%       3 304137 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 804  0.01% 87.12%       3 304152 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 805  0.01% 87.13%       3 304154 org.graalvm.compiler.graph.NodeClass.addGraphDuplicate
 806  0.01% 87.14%       3 304168 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 807  0.01% 87.15%       3 304178 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>
 808  0.01% 87.16%       3 304186 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault
 809  0.01% 87.17%       3 304223 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 810  0.01% 87.18%       3 304234 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 811  0.01% 87.20%       3 304241 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 812  0.01% 87.21%       3 304242 org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase$Closure.process
 813  0.01% 87.22%       3 304289 com.oracle.truffle.r.nodes.builtin.base.Combine.createResultVector
 814  0.01% 87.23%       3 304316 com.oracle.truffle.r.runtime.rng.RRNG.unifRand
 815  0.01% 87.24%       3 304331 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 816  0.01% 87.25%       3 304358 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 817  0.01% 87.26%       3 304366 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 818  0.01% 87.27%       3 304425 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 819  0.01% 87.28%       3 304442 org.graalvm.compiler.graph.Graph.findDuplicate
 820  0.01% 87.29%       3 304445 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 821  0.01% 87.31%       3 304488 org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd
 822  0.01% 87.32%       3 304500 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards
 823  0.01% 87.33%       3 304509 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 824  0.01% 87.34%       3 304523 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 825  0.01% 87.35%       3 304615 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 826  0.01% 87.36%       3 304658 org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeLinearScanOrder
 827  0.01% 87.37%       3 304671 sun.misc.Unsafe.freeMemory
 828  0.01% 87.38%       3 304693 org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues
 829  0.01% 87.39%       3 304780 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
CPU SAMPLES END
