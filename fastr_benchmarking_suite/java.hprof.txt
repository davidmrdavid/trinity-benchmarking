JAVA PROFILE 1.0.1, created Fri Sep 18 23:55:02 2020

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018c, id = 200001, name="main", group="main")
THREAD START (obj=5000018c, id = 200004, name="nfi-gc", group="main")
THREAD START (obj=500008ca, id = 200005, name="TruffleCompilerThread-28", group="main")
THREAD START (obj=50000924, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018c, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD START (obj=5000018c, id = 200008, name="process reaper", group="system")
THREAD START (obj=50002d58, id = 200009, name="system", group="main")
THREAD END (id = 200009)
THREAD START (obj=50002d58, id = 200010, name="system", group="main")
THREAD END (id = 200010)
THREAD START (obj=500008ca, id = 200011, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50002d58, id = 200012, name="Thread-7", group="main")
THREAD START (obj=5000018c, id = 200013, name="pool-1-thread-1", group="main")
THREAD END (id = 200008)
THREAD END (id = 200012)
THREAD START (obj=500008ca, id = 200014, name="Thread-0", group="main")
THREAD START (obj=5000018c, id = 200015, name="Thread-1", group="main")
THREAD END (id = 200014)
THREAD END (id = 200015)
THREAD START (obj=5000018c, id = 200016, name="Thread-3", group="main")
THREAD END (id = 200016)
THREAD END (id = 200001)
TRACE 301648:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:283)
TRACE 304223:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:286)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:133)
TRACE 301781:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:859)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 301815:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 301543:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 301732:
	java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:946)
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:292)
	com.oracle.truffle.api.library.DynamicDispatchLibraryGen$UncachedDispatch.dispatch(DynamicDispatchLibrary.java:407)
	com.oracle.truffle.api.library.LibraryFactory.dispatch(LibraryFactory.java:396)
TRACE 302020:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 305426:
	com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_Context.beforeUpcall(TruffleNFI_Context.java:392)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:67)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCallGen$InteropLibraryExports$Cached.execute(Rf_allocVectorCallGen.java:94)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 301707:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4297)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4291)
TRACE 302733:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 301783:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 302461:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 301806:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 301930:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:115)
TRACE 304553:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
TRACE 301828:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 305138:
	com.oracle.truffle.r.runtime.data.nodes.GetReadonlyData$Double.doManagedRVector(GetReadonlyData.java:53)
	com.oracle.truffle.r.runtime.data.nodes.GetReadonlyDataFactory$DoubleNodeGen.execute(GetReadonlyDataFactory.java:41)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:220)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:194)
TRACE 302017:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 301194:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 304406:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
TRACE 305743:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1219)
	com.oracle.truffle.r.runtime.data.RDoubleVector.allocateNativeContents(RDoubleVector.java:336)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper$DispatchAllocate.get(VectorRFFIWrapper.java:338)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:485)
TRACE 304220:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:137)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:128)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:326)
TRACE 302909:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 305318:
	com.oracle.truffle.r.nodes.builtin.base.MatMult.multiplyBlock(MatMult.java:171)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:240)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:194)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMultiply(MatMult.java:363)
TRACE 302763:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 301724:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:457)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:238)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:150)
TRACE 302907:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 305139:
	com.oracle.truffle.r.nodes.builtin.base.MatMult.multiplyBlock(MatMult.java:170)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:240)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:194)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMultiply(MatMult.java:378)
TRACE 302487:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 302201:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 301053:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:556)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:510)
TRACE 306969:
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:485)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper.toNative(VectorRFFIWrapper.java:193)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperGen$InteropLibraryExports$Cached.toNative(VectorRFFIWrapperGen.java:269)
	com.oracle.truffle.nfi.impl.SerializeArgumentLibrary$DefaultConversion$PutPointer.putGeneric(SerializeArgumentLibrary.java:348)
TRACE 302064:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 305129:
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:92)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:44)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg3.call(RBuiltinNode.java:200)
	com.oracle.truffle.r.nodes.builtin.InternalNode$InternalCallNode.execute(InternalNode.java:241)
TRACE 304309:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 305226:
	com.oracle.truffle.r.runtime.data.RDoubleVector.getLength(RDoubleVector.java:202)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getLength(VectorAccess.java:249)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.access(VectorAccess.java:283)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.access(VectorAccess.java:266)
TRACE 301890:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:633)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
TRACE 302745:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 302444:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302899:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 305359:
	com.oracle.truffle.r.runtime.data.RDoubleVector.isComplete(RDoubleVector.java:122)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:250)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:194)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMultiply(MatMult.java:363)
TRACE 301762:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 305100:
	sun.misc.Unsafe.allocateMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.allocate(NativeMemory.java:101)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:325)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1183)
TRACE 303318:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 301666:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 302802:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 301676:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 302233:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302243:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 302032:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 304409:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 301751:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4667)
TRACE 302426:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1013)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1007)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 306301:
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:473)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper.toNative(VectorRFFIWrapper.java:193)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperGen$InteropLibraryExports$Cached.toNative(VectorRFFIWrapperGen.java:269)
	com.oracle.truffle.nfi.impl.SerializeArgumentLibrary$DefaultConversion$PutPointer.putGeneric(SerializeArgumentLibrary.java:348)
TRACE 302726:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 302437:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 304565:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 304408:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304488:
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:221)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply(MatMult.java:194)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMultiply(MatMult.java:363)
	com.oracle.truffle.r.nodes.builtin.base.MatMult.multiplyDouble(MatMult.java:334)
TRACE 302229:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 301819:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
TRACE 302515:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:250)
TRACE 304479:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 301825:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:152)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:570)
TRACE 303272:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:403)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:349)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:67)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 302911:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 304477:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 301911:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 301914:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:647)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:747)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 300070:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:757)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 304205:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
TRACE 301417:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
TRACE 301853:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 302505:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:557)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303824:
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:806)
	com.oracle.truffle.r.runtime.RType.create(RType.java:276)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:256)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 301849:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4435)
TRACE 302396:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 301048:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 303197:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:381)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303202:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
TRACE 302155:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 303287:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:790)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302051:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302520:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 302756:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
TRACE 301814:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
TRACE 302253:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1144)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
TRACE 302747:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 304361:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 302601:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 302028:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 302230:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:896)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301860:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:841)
TRACE 301748:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:571)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 302652:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 304380:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
TRACE 304379:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt(RDoubleVectorDataLibraryGen.java:1178)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:280)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
TRACE 302794:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 304382:
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt(RDoubleVectorDataLibraryGen.java:1196)
	com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibrary.setDoubleAt(RDoubleVectorDataLibrary.java:122)
	com.oracle.truffle.r.runtime.data.RDoubleVector.transferElementSameType(RDoubleVector.java:281)
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
TRACE 302470:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 302628:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:500)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 303067:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
TRACE 302630:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302577:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
TRACE 302260:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:278)
TRACE 304481:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
TRACE 303770:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
TRACE 302584:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302948:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 301163:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1074)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:1002)
TRACE 302199:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302792:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:809)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302074:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 304496:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
TRACE 304715:
	com.oracle.truffle.r.runtime.data.RDoubleVector.<init>(RDoubleVector.java:58)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:830)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:826)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:822)
TRACE 301697:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1939)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 302221:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 302081:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:198)
TRACE 303126:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 303101:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1295)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1286)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 303604:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:795)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:368)
TRACE 303042:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
TRACE 302981:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:105)
TRACE 302572:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:508)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:355)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:419)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:578)
TRACE 302407:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:640)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 301772:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302678:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:880)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304566:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 305744:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1183)
	com.oracle.truffle.r.runtime.data.RLogicalVector.allocateNativeContents(RLogicalVector.java:204)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper$DispatchAllocate.get(VectorRFFIWrapper.java:326)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:477)
TRACE 301684:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:451)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:626)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302471:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 302778:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:908)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303061:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:694)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 303136:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303686:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:435)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 305427:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:291)
	com.oracle.truffle.r.runtime.data.RIntVectorDataLibraryGen$UncachedDispatch.isWriteable(RIntVectorDataLibraryGen.java:1118)
	com.oracle.truffle.r.runtime.data.RIntVector.materialize(RIntVector.java:277)
	com.oracle.truffle.r.runtime.data.RIntVector.cachedMaterialize(RIntVector.java:365)
TRACE 303693:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302649:
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField(JavaConstantFieldProvider.java:122)
	org.graalvm.compiler.hotspot.meta.HotSpotConstantFieldProvider.isStableField(HotSpotConstantFieldProvider.java:60)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.readConstantField(JavaConstantFieldProvider.java:77)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantFieldFast(TruffleConstantFieldProvider.java:103)
TRACE 303207:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 302511:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 302721:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1266)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:364)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 302771:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:897)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 305123:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:360)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 302716:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302730:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
TRACE 301696:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 302222:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 301717:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1762)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1738)
TRACE 302257:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 303463:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
TRACE 302344:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302658:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 302673:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:125)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:112)
	org.graalvm.compiler.graph.Node.clone(Node.java:1064)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
TRACE 303011:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
TRACE 302187:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302220:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 303065:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:829)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303322:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope(ComputeInliningRelevance.java:145)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:97)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 304780:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:352)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:181)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 302682:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
TRACE 302743:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 303429:
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:93)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303077:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304865:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix(JavaUpCallsRFFIImpl.java:495)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCall.execute(Rf_allocMatrixCall.java:70)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_allocMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 302326:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 302507:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302702:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 303484:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:376)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 303360:
	org.graalvm.compiler.graph.InputEdges.update(InputEdges.java:66)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1250)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 305745:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1195)
	com.oracle.truffle.r.runtime.data.RIntVector.allocateNativeContents(RIntVector.java:353)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper$DispatchAllocate.get(VectorRFFIWrapper.java:320)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:473)
TRACE 304541:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1301)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 305491:
	java.util.ArrayList.forEach(ArrayList.java:1256)
	org.graalvm.compiler.lir.constopt.DefUseTree.forEach(DefUseTree.java:84)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:109)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
TRACE 301062:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:257)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:736)
TRACE 302556:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:969)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
TRACE 303454:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 303040:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:253)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303071:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval(FixPointIntervalBuilder.java:168)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:124)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303593:
	com.oracle.truffle.object.TrieNode$BitmapNode.find(TrieNode.java:256)
	com.oracle.truffle.object.TrieNode.find(TrieNode.java:61)
	com.oracle.truffle.object.TriePropertyMap.getEntry(TriePropertyMap.java:213)
	com.oracle.truffle.object.TriePropertyMap.get(TriePropertyMap.java:207)
TRACE 303644:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:267)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:454)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 304475:
	com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl(RDoubleVector.java:375)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess$FastPathFromDoubleAccess.setFromSameTypeImpl(FastPathVectorAccess.java:221)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
TRACE 304563:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 302722:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:904)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:815)
TRACE 303003:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
TRACE 303355:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:152)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:119)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
TRACE 302301:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4372)
TRACE 304924:
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:814)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
TRACE 303242:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 302619:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303206:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:162)
TRACE 302642:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302261:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4808)
TRACE 306499:
	com.oracle.truffle.r.runtime.data.RDoubleVector.<init>(RDoubleVector.java:58)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:830)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:826)
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:818)
TRACE 301729:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 302371:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 301723:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 302059:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1432)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302286:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1(UnsafeArrayTypeReader.java:131)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.read(AbstractTypeReader.java:43)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.getUV(AbstractTypeReader.java:35)
	org.graalvm.compiler.core.common.util.TypeReader.getUVInt(TypeReader.java:83)
TRACE 302787:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 303000:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
TRACE 303635:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:610)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302378:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:229)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303222:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 301913:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 302388:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302421:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:486)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:144)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 302661:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 302148:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302401:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 303022:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303237:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:626)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 303734:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.71803532.accept(<Unknown Source>:Unknown line)
TRACE 300941:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 303776:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:149)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:59)
TRACE 304383:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 304478:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:364)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 302686:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1152)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:951)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:906)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:802)
TRACE 302958:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:587)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:273)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:205)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 303058:
	org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath(DominatorOptimizationProblem.java:128)
	org.graalvm.compiler.lir.constopt.ConstantTree.markBlocks(ConstantTree.java:176)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.71803532.accept(<Unknown Source>:Unknown line)
TRACE 302815:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302860:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303066:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 303299:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1045)
TRACE 300908:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 303883:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.AbstractMergeNode.addForwardEnd(AbstractMergeNode.java:70)
TRACE 302834:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
TRACE 303594:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:294)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 305346:
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.createAttributes(RAbstractVector.java:737)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.initDimsNamesDimNames(RAbstractVector.java:713)
	com.oracle.truffle.r.runtime.data.RDataFactory$VectorFactory.initializeAttributes(RDataFactory.java:145)
	com.oracle.truffle.r.runtime.data.RDataFactory$BaseVectorFactory.createLogicalVector(RDataFactory.java:235)
TRACE 302052:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 302510:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302913:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
TRACE 300958:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 303376:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303876:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 301703:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
TRACE 303027:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303687:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1321)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:725)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:230)
TRACE 303694:
	org.graalvm.compiler.graph.Node.clone(Node.java:1065)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:882)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 303838:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 304094:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 304288:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:75)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:301)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 302419:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1416)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1407)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302676:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:354)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:103)
TRACE 303391:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:375)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 304215:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 301941:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302955:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:896)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 302977:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:235)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303473:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:324)
TRACE 304678:
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1178)
	com.oracle.truffle.r.runtime.data.RLogicalVector.allocateNativeContents(RLogicalVector.java:204)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapper$DispatchAllocate.get(VectorRFFIWrapper.java:326)
	com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute(VectorRFFIWrapperFactory.java:477)
TRACE 302674:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302694:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
TRACE 302979:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:451)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 303070:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 303184:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:285)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303384:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:460)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
TRACE 303472:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:284)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:467)
TRACE 303547:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:148)
TRACE 302893:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302894:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1410)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 303148:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processLoop(ReentrantBlockIterator.java:77)
TRACE 303230:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:326)
TRACE 303416:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:332)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:301)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
TRACE 302796:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:756)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 303023:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303394:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.analyzeBlock(ConstantLoadOptimization.java:257)
TRACE 302651:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:509)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:333)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302744:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 303072:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:155)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 303115:
	org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness(LocalLiveness.java:331)
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:103)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1017)
TRACE 303134:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
TRACE 304124:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 300999:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301880:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 302223:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
TRACE 302967:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1227)
TRACE 302995:
	org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks(NullCheckOptimizer.java:56)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:43)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:37)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 303374:
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:238)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:102)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.doInline(InliningData.java:431)
TRACE 303456:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303724:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
TRACE 304947:
	com.oracle.truffle.r.runtime.data.RDataFactory.createIntVector(RDataFactory.java:778)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:77)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
TRACE 301014:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:58)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302003:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:163)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302150:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:393)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302859:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:387)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303284:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
TRACE 303288:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:685)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 303660:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303851:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:357)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 304313:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 302315:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:802)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302422:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:159)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 302586:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:454)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 302646:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 303283:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303414:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:67)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 303420:
	java.util.ArrayList.addAll(ArrayList.java:581)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:122)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
TRACE 305202:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:93)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.71803532.accept(<Unknown Source>:Unknown line)
TRACE 302177:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 302392:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 302798:
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:170)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readFieldValue(HotSpotConstantReflectionProvider.java:173)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.readValue(ConstantFoldUtil.java:51)
TRACE 303450:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 304072:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 304433:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 304804:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.lambda$tryProveGuardCondition$1(ConditionalEliminationUtil.java:418)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil$$Lambda$923.2026658172.rewire(<Unknown Source>:Unknown line)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.rewireGuards(ConditionalEliminationUtil.java:271)
TRACE 301069:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 302403:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:429)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303217:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 303534:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:526)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 304289:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:484)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 302632:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
TRACE 302922:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 303029:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:284)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303081:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303109:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:187)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:155)
TRACE 304384:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 304933:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:934)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$4.apply(GraphEffectList.java:275)
TRACE 300982:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 302663:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process(ComputeInliningRelevance.java:234)
	org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.compute(ComputeInliningRelevance.java:100)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.computeProbabilities(CallsiteHolderExplorable.java:206)
TRACE 303059:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 303388:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd(FixReadsPhase.java:369)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:281)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 304469:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:210)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
TRACE 300998:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302164:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 302476:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:51)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303244:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1028)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1016)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:327)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 303295:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 303589:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:244)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 303618:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:790)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:196)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:161)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 304075:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1289)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1270)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 304497:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:478)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 305365:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 301920:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:242)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302073:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 302867:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:453)
TRACE 303176:
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:639)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
	org.graalvm.compiler.nodes.FrameState.applyToVirtual(FrameState.java:646)
TRACE 303238:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 303328:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 303595:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:129)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 304086:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 301066:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1200)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:949)
TRACE 302269:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303478:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:478)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 304395:
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors(ReentrantBlockIterator.java:189)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:157)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:94)
TRACE 304882:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
TRACE 301848:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302779:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
TRACE 303069:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves(LinearScanEliminateSpillMovePhase.java:126)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.run(LinearScanEliminateSpillMovePhase.java:80)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303221:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
TRACE 303241:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1242)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303313:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval(FixPointIntervalBuilder.java:177)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:141)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303317:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData(RedundantMoveElimination.java:202)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:147)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 303516:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 303592:
	org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin(AbstractBeginNode.java:65)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1038)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 304594:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:315)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 301215:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 302405:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 302417:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
TRACE 302438:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:569)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:564)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 303256:
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:198)
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:210)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:62)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:47)
TRACE 303258:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303607:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:201)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 303648:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:207)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 303741:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:758)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$28.457182001.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
TRACE 304564:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:258)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 301345:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302186:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:474)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:449)
TRACE 302600:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302672:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processEnd(ConditionalEliminationPhase.java:607)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:508)
TRACE 302811:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:604)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:696)
TRACE 303006:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1443)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
TRACE 303165:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303385:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:687)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1358)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
TRACE 303422:
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:294)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:151)
TRACE 303501:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper(NodeClass.java:1449)
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1440)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
TRACE 303737:
	org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>(Interval.java:354)
	org.graalvm.compiler.lir.alloc.lsra.Interval.<init>(Interval.java:734)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.createInterval(LinearScan.java:363)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.getOrCreateInterval(LinearScan.java:431)
TRACE 303911:
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1397)
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1185)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:677)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 303932:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
TRACE 302874:
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:153)
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
TRACE 302954:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
TRACE 304267:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:221)
TRACE 304498:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304575:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:500)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:247)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 304597:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:244)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.computeStamp(PiNode.java:172)
TRACE 302644:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1392)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1368)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:799)
TRACE 302895:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:735)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:718)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 303031:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 303129:
	org.graalvm.compiler.nodes.calc.IsNullNode.canonical(IsNullNode.java:106)
	org.graalvm.compiler.nodes.calc.IsNullNode.canonical(IsNullNode.java:53)
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303268:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
TRACE 303583:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
TRACE 303812:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 304035:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:350)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 304428:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority(SchedulePhase.java:1092)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:1012)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:993)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.access$100(SchedulePhase.java:973)
TRACE 302610:
	java.util.ArrayDeque.poll(ArrayDeque.java:466)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1381)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
TRACE 302900:
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:764)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:732)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 302993:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 303045:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 303089:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
TRACE 303097:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 303247:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 303347:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:201)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.tryFold(InstanceOfNode.java:190)
TRACE 303383:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303446:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
TRACE 303548:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 303651:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:840)
TRACE 303773:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:649)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$1.doValue(LinearScanAssignLocationsPhase.java:181)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:245)
TRACE 303887:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:197)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 304352:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
TRACE 304634:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:530)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:528)
TRACE 305447:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:556)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getCurrentFrame(GraalTruffleRuntime.java:569)
TRACE 300846:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 301967:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302881:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:393)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303143:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoadField(PEReadEliminationClosure.java:253)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:108)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:80)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
TRACE 303185:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303332:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 303380:
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:598)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 303705:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:447)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:219)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 303775:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 303846:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode(GraphDecoder.java:1390)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
TRACE 303929:
	jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.getMaxCallTargetOffset(HotSpotCodeCacheProvider.java:186)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getMaxCallTargetOffset(HotSpotForeignCallLinkageImpl.java:216)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitForeignCallOp(AMD64LIRGenerator.java:563)
TRACE 304085:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 304323:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2(ConditionalEliminationPhase.java:359)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$$Lambda$919.1442862627.rewire(<Unknown Source>:Unknown line)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.rewireGuards(ConditionalEliminationUtil.java:271)
TRACE 304610:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:130)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 304871:
	org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter(FilteredNodeIterable.java:58)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:143)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:261)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
CPU SAMPLES BEGIN (total = 225406) Sat Sep 19 00:10:18 2020
rank   self  accum   count trace method
   1 35.83% 35.83%   80755 301648 java.io.FileInputStream.open0
   2 25.91% 61.73%   58396 304223 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   3  1.78% 63.51%    4009 301781 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   4  1.49% 65.00%    3359 301815 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   5  1.44% 66.44%    3247 301543 jdk.vm.ci.hotspot.CompilerToVM.installCode
   6  1.42% 67.87%    3211 301732 java.util.concurrent.ConcurrentHashMap.get
   7  0.89% 68.75%    1996 302020 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
   8  0.83% 69.58%    1864 305426 com.oracle.truffle.r.ffi.impl.nfi.TruffleNFI_Context.beforeUpcall
   9  0.75% 70.33%    1683 301707 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
  10  0.75% 71.07%    1681 302733 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  11  0.60% 71.67%    1351 301783 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  12  0.56% 72.23%    1257 302461 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  13  0.38% 72.61%     849 301806 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  14  0.37% 72.98%     837 301930 org.graalvm.collections.EconomicMapImpl.findLinear
  15  0.37% 73.34%     829 304553 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
  16  0.36% 73.71%     822 301828 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  17  0.36% 74.07%     808 305138 com.oracle.truffle.r.runtime.data.nodes.GetReadonlyData$Double.doManagedRVector
  18  0.36% 74.42%     803 302017 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  19  0.30% 74.73%     687 301194 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  20  0.30% 75.03%     687 304406 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
  21  0.29% 75.33%     663 305743 com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents
  22  0.28% 75.61%     625 304220 sun.misc.Unsafe.copyMemory
  23  0.27% 75.87%     605 302909 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  24  0.26% 76.13%     584 305318 com.oracle.truffle.r.nodes.builtin.base.MatMult.multiplyBlock
  25  0.25% 76.38%     565 302763 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  26  0.24% 76.63%     546 301724 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  27  0.24% 76.87%     540 302907 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  28  0.22% 77.08%     490 305139 com.oracle.truffle.r.nodes.builtin.base.MatMult.multiplyBlock
  29  0.21% 77.30%     483 302487 org.graalvm.collections.EconomicMapImpl.getHashIndex
  30  0.21% 77.51%     474 302201 org.graalvm.collections.EconomicMapImpl.getHashIndex
  31  0.21% 77.71%     466 301053 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
  32  0.21% 77.92%     466 306969 com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute
  33  0.20% 78.12%     458 302064 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  34  0.20% 78.32%     450 305129 com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached
  35  0.19% 78.52%     435 304309 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  36  0.18% 78.70%     413 305226 com.oracle.truffle.r.runtime.data.RDoubleVector.getLength
  37  0.18% 78.88%     410 301890 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  38  0.18% 79.06%     410 302745 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  39  0.18% 79.24%     403 302444 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  40  0.17% 79.42%     391 302899 org.graalvm.compiler.lir.ValueConsumer.visitValue
  41  0.17% 79.58%     372 305359 com.oracle.truffle.r.runtime.data.RDoubleVector.isComplete
  42  0.16% 79.74%     367 301762 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  43  0.16% 79.90%     361 305100 sun.misc.Unsafe.allocateMemory
  44  0.15% 80.05%     335 303318 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
  45  0.15% 80.20%     329 301666 java.lang.Throwable.fillInStackTrace
  46  0.13% 80.33%     302 302802 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  47  0.13% 80.47%     301 301676 java.lang.Throwable.fillInStackTrace
  48  0.13% 80.60%     293 302233 java.lang.Object.hashCode
  49  0.13% 80.73%     291 302243 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  50  0.12% 80.84%     265 302032 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  51  0.12% 80.96%     261 304409 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
  52  0.11% 81.07%     259 301751 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  53  0.11% 81.19%     259 302426 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  54  0.11% 81.30%     256 306301 com.oracle.truffle.r.runtime.ffi.VectorRFFIWrapperFactory$DispatchAllocateNodeGen.execute
  55  0.11% 81.41%     251 302726 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  56  0.11% 81.52%     246 302437 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  57  0.11% 81.63%     240 304565 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  58  0.11% 81.73%     239 304408 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  59  0.11% 81.84%     238 304488 com.oracle.truffle.r.nodes.builtin.base.MatMult.doubleMatrixMultiply
  60  0.10% 81.94%     221 302229 java.lang.Object.hashCode
  61  0.09% 82.03%     211 301819 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  62  0.09% 82.12%     209 302515 org.graalvm.compiler.graph.Graph.findDuplicate
  63  0.09% 82.22%     208 304479 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
  64  0.09% 82.31%     207 301825 java.lang.System.identityHashCode
  65  0.09% 82.40%     206 303272 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
  66  0.09% 82.49%     204 302911 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  67  0.09% 82.58%     201 304477 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  68  0.09% 82.67%     199 301911 java.lang.System.identityHashCode
  69  0.09% 82.76%     198 301914 org.graalvm.compiler.graph.NodeClass.deepEquals0
  70  0.09% 82.84%     195 300070 java.lang.ClassLoader.defineClass1
  71  0.09% 82.93%     194 304205 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
  72  0.08% 83.01%     191 301417 sun.nio.fs.UnixNativeDispatcher.access0
  73  0.08% 83.10%     189 301853 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  74  0.08% 83.18%     189 302505 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  75  0.08% 83.26%     189 303824 com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector
  76  0.08% 83.35%     188 301849 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  77  0.08% 83.43%     187 302396 org.graalvm.collections.EconomicMapImpl.find
  78  0.08% 83.51%     186 301048 java.lang.String.intern
  79  0.08% 83.60%     186 303197 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  80  0.08% 83.68%     184 303202 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
  81  0.08% 83.76%     174 302155 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  82  0.08% 83.83%     173 303287 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  83  0.08% 83.91%     172 302051 org.graalvm.compiler.nodes.LogicNegationNode.implies
  84  0.07% 83.98%     168 302520 org.graalvm.compiler.graph.NodeClass.applyEdges
  85  0.07% 84.06%     168 302756 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
  86  0.07% 84.13%     164 301814 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  87  0.07% 84.20%     157 302253 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
  88  0.07% 84.27%     157 302747 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  89  0.07% 84.34%     157 304361 com.oracle.truffle.api.library.LibraryFactory.getUncached
  90  0.07% 84.41%     150 302601 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
  91  0.07% 84.47%     149 302028 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
  92  0.07% 84.54%     148 302230 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  93  0.06% 84.60%     145 301860 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  94  0.06% 84.67%     144 301748 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  95  0.06% 84.73%     142 302652 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
  96  0.06% 84.79%     141 304380 com.oracle.truffle.api.library.LibraryFactory.getUncached
  97  0.06% 84.85%     140 304379 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.getDoubleAt
  98  0.06% 84.91%     138 302794 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval
  99  0.06% 84.98%     138 304382 com.oracle.truffle.r.runtime.data.RDoubleVectorDataLibraryGen$UncachedDispatch.setDoubleAt
 100  0.06% 85.04%     137 302470 org.graalvm.collections.EconomicMapImpl.getHashIndex
 101  0.06% 85.10%     136 302628 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 102  0.06% 85.16%     136 303067 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 103  0.06% 85.22%     133 302630 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 104  0.06% 85.27%     129 302577 org.graalvm.collections.EconomicMapImpl.getHashIndex
 105  0.06% 85.33%     127 302260 org.graalvm.compiler.graph.NodeClass.dataEquals
 106  0.06% 85.39%     127 304481 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 107  0.05% 85.44%     123 303770 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 108  0.05% 85.49%     122 302584 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 109  0.05% 85.55%     119 302948 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 110  0.05% 85.60%     118 301163 java.lang.String.intern
 111  0.05% 85.65%     118 302199 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 112  0.05% 85.70%     118 302792 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 113  0.05% 85.76%     116 302074 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 114  0.05% 85.81%     116 304496 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
 115  0.05% 85.86%     113 304715 com.oracle.truffle.r.runtime.data.RDoubleVector.<init>
 116  0.05% 85.91%     112 301697 com.oracle.truffle.api.TruffleFile.checkAccess
 117  0.05% 85.96%     112 302221 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes
 118  0.05% 86.01%     111 302081 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 119  0.05% 86.06%     111 303126 org.graalvm.compiler.lir.ValueConsumer.visitValue
 120  0.05% 86.10%     110 303101 org.graalvm.compiler.graph.NodeClass.applyHelper
 121  0.05% 86.15%     110 303604 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 122  0.05% 86.20%     108 303042 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 123  0.05% 86.25%     105 302981 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
 124  0.05% 86.29%     104 302572 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 125  0.05% 86.34%     103 302407 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 126  0.05% 86.38%     102 301772 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 127  0.04% 86.43%     100 302678 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 128  0.04% 86.47%      99 304566 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 129  0.04% 86.52%      99 305744 com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents
 130  0.04% 86.56%      98 301684 sun.nio.fs.UnixNativeDispatcher.access
 131  0.04% 86.60%      94 302471 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 132  0.04% 86.64%      93 302778 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 133  0.04% 86.68%      93 303061 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 134  0.04% 86.73%      93 303136 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 135  0.04% 86.77%      93 303686 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 136  0.04% 86.81%      93 305427 com.oracle.truffle.api.library.LibraryFactory.getUncached
 137  0.04% 86.85%      92 303693 org.graalvm.compiler.nodes.LogicNegationNode.implies
 138  0.04% 86.89%      91 302649 org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField
 139  0.04% 86.93%      91 303207 org.graalvm.compiler.lir.ValueConsumer.visitValue
 140  0.04% 86.97%      89 302511 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 141  0.04% 87.01%      89 302721 org.graalvm.compiler.graph.NodeClass.applyEdges
 142  0.04% 87.05%      88 302771 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 143  0.04% 87.09%      88 305123 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
 144  0.04% 87.13%      87 302716 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 145  0.04% 87.16%      86 302730 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 146  0.04% 87.20%      84 301696 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 147  0.04% 87.24%      84 302222 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 148  0.04% 87.27%      83 301717 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
 149  0.04% 87.31%      82 302257 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 150  0.04% 87.35%      82 303463 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 151  0.04% 87.38%      81 302344 org.graalvm.collections.EconomicMapImpl.compareKeys
 152  0.04% 87.42%      81 302658 org.graalvm.collections.EconomicMapImpl.getHashIndex
 153  0.04% 87.46%      80 302673 org.graalvm.compiler.core.common.Fields.copy
 154  0.04% 87.49%      80 303011 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 155  0.04% 87.53%      79 302187 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 156  0.04% 87.56%      79 302220 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 157  0.04% 87.60%      79 303065 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 158  0.03% 87.63%      78 303322 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance.createLoopScope
 159  0.03% 87.66%      78 304780 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
 160  0.03% 87.70%      77 302682 org.graalvm.collections.EconomicMapImpl.find
 161  0.03% 87.73%      77 302743 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 162  0.03% 87.77%      77 303429 org.graalvm.compiler.lir.LIRInstruction.visitEachState
 163  0.03% 87.80%      76 303077 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 164  0.03% 87.83%      76 304865 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix
 165  0.03% 87.87%      75 302326 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 166  0.03% 87.90%      75 302507 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 167  0.03% 87.93%      75 302702 org.graalvm.collections.EconomicMapImpl.add
 168  0.03% 87.97%      75 303484 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 169  0.03% 88.00%      74 303360 org.graalvm.compiler.graph.InputEdges.update
 170  0.03% 88.03%      74 305745 com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents
 171  0.03% 88.07%      73 304541 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 172  0.03% 88.10%      73 305491 java.util.ArrayList.forEach
 173  0.03% 88.13%      72 301062 sun.nio.fs.UnixNativeDispatcher.realpath0
 174  0.03% 88.16%      72 302556 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 175  0.03% 88.19%      72 303454 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 176  0.03% 88.23%      71 303040 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 177  0.03% 88.26%      71 303071 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval
 178  0.03% 88.29%      70 303593 com.oracle.truffle.object.TrieNode$BitmapNode.find
 179  0.03% 88.32%      70 303644 org.graalvm.compiler.core.match.MatchPattern.matchShape
 180  0.03% 88.35%      70 304475 com.oracle.truffle.r.runtime.data.RDoubleVector$FastPathAccess.getDoubleImpl
 181  0.03% 88.38%      70 304563 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 182  0.03% 88.41%      69 302722 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 183  0.03% 88.44%      69 303003 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 184  0.03% 88.47%      69 303355 org.graalvm.collections.EconomicMapImpl.add
 185  0.03% 88.50%      68 302301 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 186  0.03% 88.53%      68 304924 com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector
 187  0.03% 88.56%      67 303242 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 188  0.03% 88.59%      66 302619 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 189  0.03% 88.62%      66 303206 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 190  0.03% 88.65%      65 302642 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 191  0.03% 88.68%      64 302261 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 192  0.03% 88.71%      64 306499 com.oracle.truffle.r.runtime.data.RDoubleVector.<init>
 193  0.03% 88.74%      63 301729 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 194  0.03% 88.76%      63 302371 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 195  0.03% 88.79%      62 301723 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
 196  0.03% 88.82%      62 302059 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 197  0.03% 88.85%      60 302286 org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU1
 198  0.03% 88.87%      60 302787 org.graalvm.compiler.lir.ValueConsumer.visitValue
 199  0.03% 88.90%      60 303000 org.graalvm.collections.EconomicMapImpl.find
 200  0.03% 88.92%      60 303635 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 201  0.03% 88.95%      59 302378 org.graalvm.compiler.nodes.GraphEncoder.encode
 202  0.03% 88.98%      59 303222 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 203  0.03% 89.00%      57 301913 java.lang.System.identityHashCode
 204  0.03% 89.03%      57 302388 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 205  0.03% 89.05%      57 302421 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 206  0.03% 89.08%      57 302661 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 207  0.02% 89.10%      56 302148 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 208  0.02% 89.13%      56 302401 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 209  0.02% 89.15%      56 303022 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 210  0.02% 89.18%      55 303237 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 211  0.02% 89.20%      55 303734 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 212  0.02% 89.23%      54 300941 java.lang.System.identityHashCode
 213  0.02% 89.25%      54 303776 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 214  0.02% 89.27%      54 304383 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 215  0.02% 89.30%      54 304478 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 216  0.02% 89.32%      53 302686 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 217  0.02% 89.34%      53 302958 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 218  0.02% 89.37%      53 303058 org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath
 219  0.02% 89.39%      52 302815 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 220  0.02% 89.41%      52 302860 org.graalvm.compiler.graph.NodeWorkList.addAll
 221  0.02% 89.44%      51 303066 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 222  0.02% 89.46%      51 303299 org.graalvm.compiler.graph.NodeWorkList.<init>
 223  0.02% 89.48%      50 300908 java.lang.String.intern
 224  0.02% 89.50%      50 303883 org.graalvm.compiler.graph.NodeInputList.update
 225  0.02% 89.53%      49 302834 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 226  0.02% 89.55%      49 303594 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 227  0.02% 89.57%      49 305346 com.oracle.truffle.r.runtime.data.model.RAbstractVector.createAttributes
 228  0.02% 89.59%      48 302052 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 229  0.02% 89.61%      48 302510 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 230  0.02% 89.63%      48 302913 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 231  0.02% 89.65%      47 300958 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 232  0.02% 89.67%      47 303376 org.graalvm.collections.EconomicMapImpl.createHash
 233  0.02% 89.70%      47 303876 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 234  0.02% 89.72%      46 301703 org.graalvm.compiler.nodes.ValueNode.stamp
 235  0.02% 89.74%      46 303027 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 236  0.02% 89.76%      46 303687 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 237  0.02% 89.78%      46 303694 org.graalvm.compiler.graph.Node.clone
 238  0.02% 89.80%      46 303838 org.graalvm.compiler.nodes.ValueNode.stamp
 239  0.02% 89.82%      46 304094 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 240  0.02% 89.84%      46 304288 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 241  0.02% 89.86%      45 302419 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 242  0.02% 89.88%      45 302676 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 243  0.02% 89.90%      45 303391 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 244  0.02% 89.92%      45 304215 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 245  0.02% 89.94%      44 301941 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 246  0.02% 89.96%      44 302955 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 247  0.02% 89.98%      44 302977 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 248  0.02% 90.00%      44 303473 org.graalvm.compiler.lir.ValueConsumer.visitValue
 249  0.02% 90.02%      44 304678 com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents
 250  0.02% 90.03%      43 302674 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 251  0.02% 90.05%      43 302694 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 252  0.02% 90.07%      43 302979 org.graalvm.collections.EconomicMapImpl.find
 253  0.02% 90.09%      43 303070 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 254  0.02% 90.11%      43 303184 org.graalvm.compiler.nodes.IfNode.simplify
 255  0.02% 90.13%      43 303384 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 256  0.02% 90.15%      43 303472 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 257  0.02% 90.17%      43 303547 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 258  0.02% 90.19%      42 302893 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 259  0.02% 90.21%      42 302894 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 260  0.02% 90.22%      42 303148 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 261  0.02% 90.24%      42 303230 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 262  0.02% 90.26%      42 303416 org.graalvm.compiler.nodes.ValueNode.getStackKind
 263  0.02% 90.28%      41 302796 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 264  0.02% 90.30%      41 303023 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 265  0.02% 90.32%      41 303394 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 266  0.02% 90.33%      40 302651 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 267  0.02% 90.35%      40 302744 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 268  0.02% 90.37%      40 303072 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 269  0.02% 90.39%      40 303115 org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness
 270  0.02% 90.40%      40 303134 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 271  0.02% 90.42%      40 304124 org.graalvm.collections.EconomicMapImpl.compareKeys
 272  0.02% 90.44%      39 300999 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
 273  0.02% 90.46%      39 301880 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 274  0.02% 90.47%      39 302223 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 275  0.02% 90.49%      39 302967 org.graalvm.collections.EconomicMapImpl.findLinear
 276  0.02% 90.51%      39 302995 org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks
 277  0.02% 90.53%      39 303374 org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance$Scope.process
 278  0.02% 90.54%      39 303456 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 279  0.02% 90.56%      39 303724 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 280  0.02% 90.58%      39 304947 com.oracle.truffle.r.runtime.data.RDataFactory.createIntVector
 281  0.02% 90.60%      38 301014 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
 282  0.02% 90.61%      38 302003 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 283  0.02% 90.63%      38 302150 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 284  0.02% 90.65%      38 302859 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 285  0.02% 90.66%      38 303284 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 286  0.02% 90.68%      38 303288 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 287  0.02% 90.70%      38 303660 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 288  0.02% 90.71%      38 303851 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 289  0.02% 90.73%      38 304313 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
 290  0.02% 90.75%      37 302315 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 291  0.02% 90.76%      37 302422 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 292  0.02% 90.78%      37 302586 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 293  0.02% 90.80%      37 302646 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 294  0.02% 90.81%      37 303283 org.graalvm.compiler.lir.ValueConsumer.visitValue
 295  0.02% 90.83%      37 303414 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 296  0.02% 90.84%      37 303420 java.util.ArrayList.addAll
 297  0.02% 90.86%      37 305202 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 298  0.02% 90.88%      36 302177 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 299  0.02% 90.89%      36 302392 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 300  0.02% 90.91%      36 302798 jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue
 301  0.02% 90.93%      36 303450 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 302  0.02% 90.94%      36 304072 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 303  0.02% 90.96%      36 304433 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 304  0.02% 90.97%      36 304804 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 305  0.02% 90.99%      35 301069 java.lang.Object.hashCode
 306  0.02% 91.00%      35 302403 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 307  0.02% 91.02%      35 303217 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 308  0.02% 91.04%      35 303534 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 309  0.02% 91.05%      35 304289 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 310  0.02% 91.07%      34 302632 org.graalvm.collections.EconomicMapImpl.find
 311  0.02% 91.08%      34 302922 java.lang.System.identityHashCode
 312  0.02% 91.10%      34 303029 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 313  0.02% 91.11%      34 303081 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 314  0.02% 91.13%      34 303109 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 315  0.02% 91.14%      34 304384 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 316  0.02% 91.16%      34 304933 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 317  0.01% 91.17%      33 300982 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 318  0.01% 91.19%      33 302663 org.graalvm.compiler.graph.NodeWorkList.addAll
 319  0.01% 91.20%      33 303059 org.graalvm.compiler.lir.ValueConsumer.visitValue
 320  0.01% 91.21%      33 303388 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
 321  0.01% 91.23%      33 304469 org.graalvm.compiler.nodes.spi.NodeWithState.states
 322  0.01% 91.24%      32 300998 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 323  0.01% 91.26%      32 302164 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 324  0.01% 91.27%      32 302476 org.graalvm.compiler.graph.NodeWorkList.addAll
 325  0.01% 91.29%      32 303244 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 326  0.01% 91.30%      32 303295 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 327  0.01% 91.31%      32 303589 java.util.Objects.equals
 328  0.01% 91.33%      32 303618 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 329  0.01% 91.34%      32 304075 org.graalvm.compiler.graph.NodeClass.applyEdges
 330  0.01% 91.36%      32 304497 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 331  0.01% 91.37%      32 305365 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 332  0.01% 91.39%      31 301920 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 333  0.01% 91.40%      31 302073 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 334  0.01% 91.41%      31 302867 org.graalvm.collections.EconomicMapImpl.getHashIndex
 335  0.01% 91.43%      31 303176 org.graalvm.compiler.nodes.FrameState.applyToVirtual
 336  0.01% 91.44%      31 303238 org.graalvm.compiler.nodes.GraphDecoder.decode
 337  0.01% 91.45%      31 303328 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 338  0.01% 91.47%      31 303595 org.graalvm.compiler.nodes.ValueNode.stamp
 339  0.01% 91.48%      31 304086 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 340  0.01% 91.49%      30 301066 java.lang.String.intern
 341  0.01% 91.51%      30 302269 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 342  0.01% 91.52%      30 303478 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 343  0.01% 91.53%      30 304395 org.graalvm.compiler.phases.graph.ReentrantBlockIterator.processMultipleSuccessors
 344  0.01% 91.55%      30 304882 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock
 345  0.01% 91.56%      29 301848 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 346  0.01% 91.57%      29 302779 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode
 347  0.01% 91.59%      29 303069 org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves
 348  0.01% 91.60%      29 303221 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 349  0.01% 91.61%      29 303241 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 350  0.01% 91.63%      29 303313 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval
 351  0.01% 91.64%      29 303317 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
 352  0.01% 91.65%      29 303516 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 353  0.01% 91.66%      29 303592 org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin
 354  0.01% 91.68%      29 304594 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 355  0.01% 91.69%      28 301215 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 356  0.01% 91.70%      28 302405 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 357  0.01% 91.71%      28 302417 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 358  0.01% 91.73%      28 302438 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 359  0.01% 91.74%      28 303256 org.graalvm.compiler.nodes.ConstantNode.forConstant
 360  0.01% 91.75%      28 303258 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 361  0.01% 91.76%      28 303607 java.util.Objects.equals
 362  0.01% 91.78%      28 303648 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 363  0.01% 91.79%      28 303741 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 364  0.01% 91.80%      28 304564 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 365  0.01% 91.81%      27 301345 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 366  0.01% 91.82%      27 302186 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 367  0.01% 91.84%      27 302600 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 368  0.01% 91.85%      27 302672 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 369  0.01% 91.86%      27 302811 org.graalvm.compiler.nodes.GraphDecoder.decode
 370  0.01% 91.87%      27 303006 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 371  0.01% 91.88%      27 303165 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 372  0.01% 91.90%      27 303385 org.graalvm.compiler.graph.NodeClass.dataEquals
 373  0.01% 91.91%      27 303422 org.graalvm.compiler.lir.dfa.LocationMarker$1.doState
 374  0.01% 91.92%      27 303501 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper
 375  0.01% 91.93%      27 303737 org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>
 376  0.01% 91.94%      27 303911 org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder
 377  0.01% 91.96%      27 303932 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 378  0.01% 91.97%      26 302874 java.util.ArrayDeque.addLast
 379  0.01% 91.98%      26 302954 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 380  0.01% 91.99%      26 304267 org.graalvm.compiler.lir.LIRFrameState.forEachState
 381  0.01% 92.00%      26 304498 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 382  0.01% 92.01%      26 304575 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 383  0.01% 92.03%      26 304597 java.util.Objects.equals
 384  0.01% 92.04%      25 302644 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 385  0.01% 92.05%      25 302895 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 386  0.01% 92.06%      25 303031 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 387  0.01% 92.07%      25 303129 org.graalvm.compiler.nodes.calc.IsNullNode.canonical
 388  0.01% 92.08%      25 303268 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 389  0.01% 92.09%      25 303583 org.graalvm.compiler.graph.Node.safeDelete
 390  0.01% 92.10%      25 303812 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 391  0.01% 92.11%      25 304035 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 392  0.01% 92.13%      25 304428 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.propagatePriority
 393  0.01% 92.14%      24 302610 java.util.ArrayDeque.poll
 394  0.01% 92.15%      24 302900 org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget
 395  0.01% 92.16%      24 302993 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 396  0.01% 92.17%      24 303045 org.graalvm.compiler.nodes.GraphEncoder.encode
 397  0.01% 92.18%      24 303089 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 398  0.01% 92.19%      24 303097 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 399  0.01% 92.20%      24 303247 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 400  0.01% 92.21%      24 303347 java.util.Objects.equals
 401  0.01% 92.22%      24 303383 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 402  0.01% 92.23%      24 303446 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 403  0.01% 92.24%      24 303548 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 404  0.01% 92.25%      24 303651 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 405  0.01% 92.26%      24 303773 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 406  0.01% 92.27%      24 303887 org.graalvm.compiler.nodes.GraphEncoder.prepare
 407  0.01% 92.29%      24 304352 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 408  0.01% 92.30%      24 304634 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 409  0.01% 92.31%      24 305447 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 410  0.01% 92.32%      23 300846 java.lang.Throwable.fillInStackTrace
 411  0.01% 92.33%      23 301967 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 412  0.01% 92.34%      23 302881 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 413  0.01% 92.35%      23 303143 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoadField
 414  0.01% 92.36%      23 303185 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 415  0.01% 92.37%      23 303332 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 416  0.01% 92.38%      23 303380 org.graalvm.compiler.graph.NodeClass.valueNumber
 417  0.01% 92.39%      23 303705 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 418  0.01% 92.40%      23 303775 org.graalvm.collections.EconomicMapImpl.findLinear
 419  0.01% 92.41%      23 303846 org.graalvm.collections.EconomicMapImpl.find
 420  0.01% 92.42%      23 303929 jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset
 421  0.01% 92.43%      23 304085 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 422  0.01% 92.44%      23 304323 org.graalvm.compiler.graph.Node.replaceAtUsages
 423  0.01% 92.45%      23 304610 org.graalvm.compiler.core.common.type.AbstractObjectStamp.join
 424  0.01% 92.46%      23 304871 org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter
CPU SAMPLES END
