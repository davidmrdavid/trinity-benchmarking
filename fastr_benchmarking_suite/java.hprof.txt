JAVA PROFILE 1.0.1, created Tue Jan  5 13:20:42 2021

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018c, id = 200001, name="main", group="main")
THREAD START (obj=5000018c, id = 200004, name="nfi-gc", group="main")
THREAD START (obj=500008ce, id = 200005, name="TruffleCompilerThread-28", group="main")
THREAD START (obj=50000923, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018c, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD START (obj=5000018c, id = 200008, name="process reaper", group="system")
THREAD START (obj=50002d3e, id = 200009, name="system", group="main")
THREAD END (id = 200009)
THREAD START (obj=50002d3e, id = 200010, name="system", group="main")
THREAD END (id = 200010)
THREAD START (obj=500008ce, id = 200011, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50002d3e, id = 200012, name="Thread-7", group="main")
THREAD START (obj=5000018c, id = 200013, name="pool-1-thread-1", group="main")
THREAD END (id = 200008)
THREAD START (obj=5000018c, id = 200015, name="SIGINT handler", group="system")
THREAD START (obj=5000018c, id = 200016, name="Thread-1", group="main")
THREAD START (obj=500008ce, id = 200017, name="Thread-0", group="main")
THREAD END (id = 200017)
THREAD END (id = 200016)
THREAD START (obj=5000018c, id = 200018, name="Thread-3", group="main")
THREAD END (id = 200018)
THREAD END (id = 200015)
TRACE 301641:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:283)
TRACE 301654:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:290)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:133)
TRACE 301782:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:859)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302015:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 302054:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 301851:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 301662:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 301665:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 301674:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4297)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4291)
TRACE 302008:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 301215:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
TRACE 300068:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:757)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 302531:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 304139:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:50)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 302175:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:117)
TRACE 301703:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 301749:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 304144:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:51)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 301027:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 301100:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:962)
TRACE 302003:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302014:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 301818:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:152)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:581)
TRACE 304299:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:362)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:353)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 302092:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1153)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
TRACE 301707:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:457)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:238)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:150)
TRACE 304142:
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:55)
TRACE 301983:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1939)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 300794:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 301342:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:257)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:785)
TRACE 301668:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:451)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301894:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302240:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:581)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:644)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
TRACE 302842:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 302390:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 301873:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 304413:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 300978:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301843:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 304432:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:80)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:300)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
TRACE 302456:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302516:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:300)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:131)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:281)
TRACE 302013:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302839:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
TRACE 300937:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 302359:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 302857:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 304563:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType(VectorAccess.java:388)
	com.oracle.truffle.r.nodes.builtin.base.Array.arrayCached(Array.java:110)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.executeAndSpecialize(ArrayNodeGen.java:115)
	com.oracle.truffle.r.nodes.builtin.base.ArrayNodeGen.execute(ArrayNodeGen.java:58)
TRACE 302344:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1013)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1007)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 303044:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304238:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 300959:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301840:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 300945:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301672:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4667)
TRACE 304704:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 301990:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 303128:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$8(GraphEffectList.java:250)
TRACE 302389:
	java.lang.Object.hashCode(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
TRACE 302540:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 302703:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 301901:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 302028:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 304297:
	com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement(Combine.java:361)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:353)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 302115:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 302955:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 301187:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 301700:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:571)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 304266:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:80)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$1.perform(BinaryMapNode.java:300)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
TRACE 300948:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 301728:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
TRACE 302698:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 304703:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 304706:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
TRACE 301214:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:695)
TRACE 301322:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 302019:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302723:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:558)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:274)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 301801:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4435)
TRACE 302095:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 304642:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 300944:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:58)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302191:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:791)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303025:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 301973:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:658)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:758)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301804:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 302999:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:381)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 304453:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 304277:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:249)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 300956:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301144:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1200)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:909)
TRACE 302968:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:887)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302352:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:162)
TRACE 300587:
	sun.misc.Unsafe.defineAnonymousClass(Unsafe.java:Unknown line)
	java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)
	java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
	java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)
TRACE 301457:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 301729:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
TRACE 301849:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302365:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302581:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1379)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 302671:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 303491:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 302821:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:132)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:105)
TRACE 304697:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 300486:
	java.lang.ClassLoader.loadClass(ClassLoader.java:431)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 301171:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
	com.oracle.truffle.r.nodes.control.RBlockNode.voidExecute(RBlockNode.java:57)
TRACE 301841:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 302073:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.simplify(MethodCallTargetNode.java:198)
TRACE 302161:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
TRACE 302335:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:288)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302345:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:155)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302420:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:616)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:633)
TRACE 303125:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:795)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:369)
TRACE 303172:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:809)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 304399:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 301407:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
TRACE 301515:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 301949:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:881)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302159:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1145)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
TRACE 302293:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:875)
TRACE 302426:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:259)
TRACE 304489:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:355)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1276)
	com.oracle.truffle.r.runtime.data.RDoubleVector.allocateNativeContents(RDoubleVector.java:189)
TRACE 304804:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:553)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 300284:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:316)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
	java.util.jar.JarFile.getJarEntry(JarFile.java:223)
TRACE 301177:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:562)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:516)
TRACE 301422:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302489:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303046:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:685)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 301066:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate(FrameSlotChangeMonitor.java:910)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
TRACE 301172:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 302294:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302616:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 302696:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1306)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1297)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
TRACE 304407:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 301682:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:449)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301687:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:103)
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
TRACE 301864:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:159)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302023:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:103)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:88)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302303:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 302536:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2968)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2947)
	com.oracle.truffle.r.runtime.RSerialize.access$2600(RSerialize.java:136)
TRACE 302691:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:65)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 302746:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 302841:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:152)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:119)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
TRACE 303261:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 304707:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 301356:
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
TRACE 302160:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:635)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:622)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 302211:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302342:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:500)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:513)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 302427:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:909)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302457:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 302879:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:512)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:359)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:423)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:582)
TRACE 302894:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:125)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:112)
	org.graalvm.compiler.graph.Node.clone(Node.java:1064)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
TRACE 303036:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:278)
TRACE 303256:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:350)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:68)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 304415:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:132)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 300784:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 301004:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:364)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:86)
TRACE 301723:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
TRACE 301753:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 301767:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 302281:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
TRACE 302541:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303185:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:894)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303487:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 304205:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix(JavaUpCallsRFFIImpl.java:958)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCall.execute(Rf_copyMatrixCall.java:63)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.executeAndSpecialize(Rf_copyMatrixCallGen.java:125)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_copyMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_copyMatrixCallGen.java:96)
TRACE 304637:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 301891:
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:74)
	com.oracle.truffle.r.runtime.data.model.RAbstractAtomicVector.<init>(RAbstractAtomicVector.java:40)
TRACE 301962:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:841)
TRACE 301965:
	java.lang.Class.isAssignableFrom(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.isAssignableFrom(HotSpotJDKReflection.java:69)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isAssignableFrom(HotSpotResolvedObjectTypeImpl.java:414)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isInObject(HotSpotResolvedJavaFieldImpl.java:114)
TRACE 302223:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
TRACE 302322:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
TRACE 302574:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1421)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302607:
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField(JavaConstantFieldProvider.java:122)
	org.graalvm.compiler.hotspot.meta.HotSpotConstantFieldProvider.isStableField(HotSpotConstantFieldProvider.java:60)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.readConstantField(JavaConstantFieldProvider.java:77)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantFieldFast(TruffleConstantFieldProvider.java:103)
TRACE 302737:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:694)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 304219:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 300966:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 300968:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301000:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 301162:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getBuiltinClass(NodeWithArgumentCasts.java:132)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getCasts(NodeWithArgumentCasts.java:111)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts.getStaticCasts(NodeWithArgumentCasts.java:42)
TRACE 301887:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1762)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1738)
TRACE 302091:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302168:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:640)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302267:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:239)
TRACE 302508:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1034)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:771)
TRACE 302642:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302680:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302692:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:460)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:448)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:263)
TRACE 302779:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302846:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 302860:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:441)
TRACE 303646:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:376)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 304621:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304636:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
TRACE 300837:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749)
TRACE 300873:
	java.lang.invoke.MethodHandleNatives.resolve(MethodHandleNatives.java:Unknown line)
	java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)
	java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)
	java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)
TRACE 301199:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301474:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNodeGen.execute(ValueForwardingNodeGen.java:74)
TRACE 301766:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.initFrom(EconomicMapImpl.java:204)
	org.graalvm.collections.EconomicMapImpl.<init>(EconomicMapImpl.java:181)
	org.graalvm.collections.EconomicMapImpl.create(EconomicMapImpl.java:158)
TRACE 301852:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1045)
TRACE 301856:
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:77)
TRACE 301967:
	com.oracle.truffle.r.runtime.RArguments.getCall(RArguments.java:255)
	com.oracle.truffle.r.nodes.function.opt.OptForcedEagerPromiseNode.execute(OptForcedEagerPromiseNode.java:142)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
TRACE 302421:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
TRACE 302432:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1277)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:364)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 302584:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:486)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:144)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 303433:
	com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute(AccessArgumentNode.java:94)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 304237:
	com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical(BinaryMapBooleanFunctionNode.java:132)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304240:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304414:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$3.perform(BinaryMapNode.java:314)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
TRACE 304419:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:53)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:119)
TRACE 300250:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:348)
	sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
TRACE 300298:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 301817:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:155)
TRACE 301897:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.Arrays$ArrayList.toArray(Arrays.java:3823)
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.<init>(CommitAllocationNode.java:77)
TRACE 301956:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.Node.clone(Node.java:1062)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 302238:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2232)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 302290:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.object.DynamicObjectImpl.clone(DynamicObjectImpl.java:175)
	com.oracle.truffle.object.DynamicObjectBasic.cloneWithShape(DynamicObjectBasic.java:216)
	com.oracle.truffle.object.DynamicObjectImpl.copy(DynamicObjectImpl.java:322)
TRACE 302459:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
TRACE 302622:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302675:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
TRACE 303445:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:93)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 304138:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 300338:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 300819:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:370)
	java.util.jar.JarFile.getInputStream(JarFile.java:447)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:987)
TRACE 301205:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:290)
	com.oracle.truffle.nfi.impl.LibFFISignature.execute(LibFFISignature.java:186)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SlowPathExecuteNode.slowPathExecute(FunctionExecuteNode.java:265)
TRACE 301649:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:919)
TRACE 301854:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302133:
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 302353:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302399:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 302550:
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit(CompilationResultBuilder.java:535)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCodeBody(AMD64HotSpotBackend.java:318)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotBackend.emitCode(AMD64HotSpotBackend.java:246)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitCode(LIRCompilerBackend.java:208)
TRACE 302586:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
TRACE 302690:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302736:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:697)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:330)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:457)
TRACE 303119:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:455)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:467)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 303127:
	org.graalvm.compiler.graph.InputEdges.update(InputEdges.java:66)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1250)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 304218:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 304406:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:119)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304499:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 300972:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:454)
TRACE 301534:
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments(ArgumentMatcher.java:192)
	com.oracle.truffle.r.nodes.function.ArgumentMatcher.matchArgumentsEvaluated(ArgumentMatcher.java:186)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsExplicit.prepare(PrepareArguments.java:211)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsExplicitNodeGen.execute(PrepareArgumentsFactory.java:170)
TRACE 301722:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3088)
TRACE 301811:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.hasAnnotations(HotSpotResolvedJavaFieldImpl.java:180)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:194)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getAnnotations(GraalTruffleRuntime.java:1102)
TRACE 301882:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
TRACE 301933:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4808)
TRACE 301996:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
TRACE 302106:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:293)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302230:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 302419:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 302509:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302564:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:905)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
TRACE 302602:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1432)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302605:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:229)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:150)
TRACE 302630:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302747:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:409)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
TRACE 302781:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:970)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 302804:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:509)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:333)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302816:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:143)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
TRACE 302837:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
TRACE 302996:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
TRACE 303004:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303168:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:291)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 303290:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:198)
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 303389:
	java.util.ArrayList.forEach(ArrayList.java:1257)
	org.graalvm.compiler.lir.constopt.DefUseTree.forEach(DefUseTree.java:84)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:109)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
TRACE 303614:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:324)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 300919:
	org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions(ATNState.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301699:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:700)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301705:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCodeSize(HotSpotResolvedJavaMethodImpl.java:263)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getCode(HotSpotResolvedJavaMethodImpl.java:251)
TRACE 301738:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1016)
TRACE 302174:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:502)
TRACE 302310:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:240)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 302455:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 302567:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1421)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 302575:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:163)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302597:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
TRACE 302688:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1403)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1379)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:934)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$4.apply(GraphEffectList.java:275)
TRACE 302715:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:527)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
TRACE 302752:
	com.oracle.truffle.r.library.methods.MethodsListDispatch$R_getClassFromCache.callGetClassFromCache(MethodsListDispatch.java:173)
	com.oracle.truffle.r.library.methods.MethodsListDispatchFactory$R_getClassFromCacheNodeGen.execute(MethodsListDispatchFactory.java:168)
	com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode$Arg2.call(RExternalBuiltinNode.java:98)
	com.oracle.truffle.r.nodes.builtin.RExternalBuiltinNode.call(RExternalBuiltinNode.java:40)
TRACE 302826:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getTemporaries(HotSpotForeignCallLinkageImpl.java:211)
	org.graalvm.compiler.lir.gen.LIRGenerator.emitForeignCall(LIRGenerator.java:482)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLIRGenerator.emitForeignCall(AMD64HotSpotLIRGenerator.java:398)
TRACE 302833:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 302864:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 302920:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 302931:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:429)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 303144:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:294)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 303201:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
TRACE 303236:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:451)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 303244:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:483)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:474)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:377)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
TRACE 303393:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303408:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:267)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:454)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:426)
TRACE 304158:
	com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble(MersenneTwister.java:185)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:89)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:37)
TRACE 304172:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:207)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 304408:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304639:
	com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble(BinaryMapArithmeticFunctionNode.java:112)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
TRACE 300975:
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:547)
	org.antlr.v4.runtime.atn.ATNSimulator.getCachedContext(ATNSimulator.java:103)
	org.antlr.v4.runtime.atn.ATNConfigSet.optimizeConfigs(ATNConfigSet.java:217)
	org.antlr.v4.runtime.atn.ParserATNSimulator.addDFAState(ParserATNSimulator.java:2124)
TRACE 300997:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301180:
	java.lang.Class.isArray(Class.java:Unknown line)
	java.lang.Class.getSimpleName(Class.java:1306)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:81)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:77)
TRACE 301678:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 301870:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
TRACE 302038:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:203)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302118:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302150:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.isCurrentValue(BaseWriteVariableNode.java:128)
	com.oracle.truffle.r.nodes.access.BaseWriteVariableNode.shareObjectValue(BaseWriteVariableNode.java:103)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
TRACE 302233:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault(ControlFlowGraph.java:134)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:294)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:613)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
TRACE 302396:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getTagAt(HotSpotConstantPool.java:304)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupConstant(HotSpotConstantPool.java:514)
	org.graalvm.compiler.java.BytecodeParser.lookupConstant(BytecodeParser.java:4325)
TRACE 302470:
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:62)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302759:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
TRACE 302818:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
TRACE 302908:
	org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>(PrintableDominatorOptimizationProblem.java:35)
	org.graalvm.compiler.lir.constopt.ConstantTree.<init>(ConstantTree.java:107)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:279)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 302964:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:334)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302998:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 303007:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 303010:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.nodeAdded(CanonicalizerPhase.java:274)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
TRACE 303028:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1295)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 303055:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 303086:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:829)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1062)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303170:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:626)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 303368:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:47)
TRACE 303380:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:527)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
TRACE 303423:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.AbstractMergeNode.addForwardEnd(AbstractMergeNode.java:70)
TRACE 303533:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:610)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303541:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:375)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:75)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
TRACE 303578:
	org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor(NodeClass.java:1332)
	org.graalvm.compiler.graph.Node.clearSuccessors(Node.java:964)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplit(StructuredGraph.java:726)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:230)
TRACE 304152:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:373)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 304224:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:253)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 304272:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304313:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.rng.RRNG.getContextState(RRNG.java:253)
	com.oracle.truffle.r.runtime.rng.RRNG.currentGenerator(RRNG.java:273)
	com.oracle.truffle.r.runtime.rng.RRNG.unifRand(RRNG.java:288)
TRACE 304357:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 304705:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:76)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
TRACE 300071:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 300150:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1009)
	java.lang.ClassLoader.loadClass(ClassLoader.java:408)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300705:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 300957:
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
	org.antlr.v4.runtime.atn.SingletonPredictionContext.equals(SingletonPredictionContext.java:59)
TRACE 301197:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	sun.nio.fs.NativeBuffers.copyCStringToNativeBuffer(NativeBuffers.java:127)
	sun.nio.fs.UnixNativeDispatcher.copyToNativeBuffer(UnixNativeDispatcher.java:50)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:447)
TRACE 301198:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeFunctionFrameDescriptor(FrameSlotChangeMonitor.java:945)
TRACE 301393:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301431:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:184)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 301525:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.function.RCallNode$GetTempNode.execute(RCallNode.java:848)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 301693:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:569)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:564)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 301715:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:263)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:383)
	org.graalvm.compiler.java.BytecodeParser.handleException(BytecodeParser.java:1318)
TRACE 301906:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.CallArgumentsNode.evaluateFlattenObjects(CallArgumentsNode.java:242)
TRACE 301988:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302261:
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
TRACE 302347:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
TRACE 302375:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2285)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302383:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.mergeReadCache(PEReadEliminationClosure.java:404)
TRACE 302511:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:240)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302559:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethodFlags(HotSpotResolvedJavaMethodImpl.java:198)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:268)
TRACE 302561:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1437)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:641)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302656:
	java.lang.Class.isArray(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getLength(HotSpotJDKReflection.java:239)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayLength(HotSpotConstantReflectionProvider.java:80)
	org.graalvm.compiler.nodes.ConstantNode.findLength(ConstantNode.java:569)
TRACE 302662:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 302844:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:169)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302878:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:188)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302897:
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:609)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:92)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 302934:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 302961:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:354)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
TRACE 302977:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 302979:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:257)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303053:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:149)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:59)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$2.doValue(LinearScanAssignLocationsPhase.java:189)
TRACE 303123:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 303164:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1291)
TRACE 303216:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:461)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 303229:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs(FixReadsPhase.java:235)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:261)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303249:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:332)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:301)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:275)
TRACE 303252:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:157)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:109)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 303338:
	org.graalvm.compiler.nodes.FrameState.duplicateModified(FrameState.java:393)
	org.graalvm.compiler.replacements.PEGraphDecoder.ensureOuterStateDecoded(PEGraphDecoder.java:1313)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1358)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1335)
TRACE 303381:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:799)
TRACE 303395:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:119)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
TRACE 303499:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval(FixPointIntervalBuilder.java:177)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:141)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 303586:
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
TRACE 303731:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:474)
TRACE 304251:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:257)
TRACE 304454:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:183)
	com.oracle.truffle.r.nodes.builtin.base.Sum.sumLengthOne(Sum.java:120)
TRACE 300826:
	java.lang.ClassLoader.findLoadedClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1032)
	java.lang.ClassLoader.loadClass(ClassLoader.java:401)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 301529:
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:41)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:39)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:32)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.<init>(RAbstractVector.java:74)
TRACE 301743:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.allocateInstance(NodeClass.java:856)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1386)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1357)
TRACE 301813:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.improveWith(AbstractObjectStamp.java:183)
	org.graalvm.compiler.nodes.PiNode.canonical(PiNode.java:191)
TRACE 301950:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2(PipelineToCastNode.java:404)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$$Lambda$724.680521071.test(<Unknown Source>:Unknown line)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 301952:
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test(PipelineToCastNode.java:391)
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
TRACE 301974:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.graph.NodeBitMap.<init>(NodeBitMap.java:57)
	org.graalvm.compiler.graph.NodeBitMap.copy(NodeBitMap.java:290)
	org.graalvm.compiler.loop.LoopFragmentInside.nodes(LoopFragmentInside.java:297)
TRACE 302128:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxLocals(ResolvedJavaMethodBytecode.java:79)
TRACE 302178:
	org.graalvm.compiler.nodes.GraphEncoder.writeOrderId(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:416)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:242)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302204:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
TRACE 302222:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.Return.returnFunction(Return.java:108)
	com.oracle.truffle.r.nodes.builtin.base.ReturnNodeGen.execute(ReturnNodeGen.java:37)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
TRACE 302256:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1403)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1379)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:806)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 302373:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerLowerThanNode$LowerOp.findSynonym(IntegerLowerThanNode.java:190)
	org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp.findSynonym(IntegerLessThanNode.java:158)
	org.graalvm.compiler.nodes.calc.IntegerLowerThanNode$LowerOp.canonical(IntegerLowerThanNode.java:136)
TRACE 302460:
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:153)
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
TRACE 302471:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:588)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:274)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 302582:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1335)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302615:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeLoad(PEReadEliminationClosure.java:191)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:121)
TRACE 302659:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:68)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:258)
TRACE 302668:
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:196)
	com.oracle.truffle.r.runtime.RSrcref.createSourceSection(RSrcref.java:227)
	com.oracle.truffle.r.runtime.RSerialize.handleSrcrefAttr(RSerialize.java:2951)
	com.oracle.truffle.r.runtime.RSerialize.handleFunctionSrcrefAttr(RSerialize.java:2938)
TRACE 302785:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:168)
TRACE 302800:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.prototypeMarkWord(HotSpotResolvedObjectTypeImpl.java:895)
	org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets$Templates.lower(HotSpotAllocationSnippets.java:662)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:313)
TRACE 302888:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:621)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:408)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302889:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:72)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1161)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302932:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302935:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1047)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 302945:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:393)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302959:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302965:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:287)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302986:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:292)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302990:
	org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual(VirtualObjectState.java:71)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:628)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
TRACE 303041:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.trimClone(LinearScanLifetimeAnalysisPhase.java:408)
TRACE 303048:
	org.graalvm.compiler.core.common.util.AbstractTypeReader.readPacked(AbstractTypeReader.java:55)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.read(AbstractTypeReader.java:47)
	org.graalvm.compiler.core.common.util.AbstractTypeReader.getSV(AbstractTypeReader.java:30)
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1218)
TRACE 303056:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:458)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:399)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 303134:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 303169:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:292)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 303225:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
TRACE 303233:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
TRACE 303245:
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:953)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
TRACE 303284:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData(RedundantMoveElimination.java:202)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:147)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
	org.graalvm.compiler.lir.RedundantMoveElimination.run(RedundantMoveElimination.java:68)
TRACE 303355:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:806)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:369)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.doMergeWithoutDead(EffectsClosure.java:404)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.merge(EffectsClosure.java:287)
TRACE 303365:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	com.oracle.truffle.api.frame.FrameDescriptor.findFrameSlot(FrameDescriptor.java:206)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.findOrAddFrameSlot(FrameSlotChangeMonitor.java:768)
TRACE 303462:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:695)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:796)
TRACE 303543:
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 303570:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4372)
TRACE 303626:
	org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin(AbstractBeginNode.java:65)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1038)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303680:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:241)
TRACE 303718:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:67)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 303754:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303918:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1067)
	org.graalvm.compiler.graph.Node.clone(Node.java:1076)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
TRACE 304182:
	org.graalvm.compiler.nodes.AbstractMergeNode$$Lambda$917.47109014.get$Lambda(<Unknown Source>:Unknown line)
	java.lang.invoke.LambdaForm$DMH.1608446010.invokeStatic_L_L(LambdaForm$DMH:Unknown line)
	java.lang.invoke.LambdaForm$MH.1483022288.linkToTargetMethod(LambdaForm$MH:Unknown line)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:143)
TRACE 304187:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:887)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 304275:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 304556:
	com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add(Collections.java:65)
	com.oracle.truffle.r.nodes.builtin.base.Unique.doUniqueCachedString(Unique.java:107)
	com.oracle.truffle.r.nodes.builtin.base.UniqueNodeGen.execute(UniqueNodeGen.java:59)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 300870:
	java.util.zip.ZipFile.getEntryTime(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:586)
	java.util.zip.ZipFile.access$900(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
TRACE 300950:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1467)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300971:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301068:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301083:
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet(ParserATNSimulator.java:818)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 301338:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.RCompression.gzipUncompress(RCompression.java:155)
	com.oracle.truffle.r.runtime.RCompression.uncompress(RCompression.java:112)
	com.oracle.truffle.r.nodes.builtin.base.HiddenInternalFunctions$LazyLoadDBFetch.lazyLoadDBFetchInternal(HiddenInternalFunctions.java:286)
TRACE 301455:
	java.lang.System.identityHashCode(System.java:Unknown line)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.createCallTarget(Closure.java:235)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCacheImpl.generateCallTarget(Closure.java:231)
	com.oracle.truffle.r.runtime.data.Closure$CallTargetCache.get(Closure.java:295)
TRACE 301504:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.graph.Node.replaceAtPredecessor(Node.java:911)
TRACE 301663:
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:982)
TRACE 301675:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:307)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 301686:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:190)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 301850:
	org.antlr.v4.runtime.misc.FlexibleHashMap.get(FlexibleHashMap.java:91)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:549)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 301884:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:124)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:83)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 301925:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:897)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302068:
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply(GraphEffectList.java:154)
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:185)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:189)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
TRACE 302072:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:235)
TRACE 302151:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302214:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:398)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302225:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getArithmeticOp(BinaryArithmeticNode.java:80)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.foldStamp(BinaryArithmeticNode.java:131)
	org.graalvm.compiler.nodes.calc.BinaryNode.inferStamp(BinaryNode.java:79)
TRACE 302309:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1367)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1318)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 302362:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
TRACE 302368:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302410:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:452)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
TRACE 302573:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:442)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:399)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 302577:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	java.lang.Enum.getDeclaringClass(Enum.java:199)
	java.util.EnumSet.of(EnumSet.java:259)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.<init>(EconomicSetNodeEventListener.java:52)
TRACE 302627:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:812)
TRACE 302634:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.ReassociateInvariantPhase.run(ReassociateInvariantPhase.java:49)
TRACE 302702:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:451)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 302743:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues(RegStackValueSet.java:158)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:57)
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
TRACE 302773:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:943)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit(ConditionalEliminationPhase.java:263)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:241)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
TRACE 302787:
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
TRACE 302796:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:224)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 302832:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 302863:
	org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks(NullCheckOptimizer.java:56)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:43)
	org.graalvm.compiler.lir.NullCheckOptimizer.run(NullCheckOptimizer.java:37)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302913:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval(FixPointIntervalBuilder.java:168)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:124)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
TRACE 302950:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 302951:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:357)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303011:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:698)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1359)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:774)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:354)
TRACE 303038:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:139)
TRACE 303058:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303070:
	com.oracle.truffle.r.nodes.access.vector.RecursiveExtractSubscriptNode.apply(RecursiveExtractSubscriptNode.java:58)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doRecursive(ExtractVectorNode.java:104)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNodeGen.execute(ExtractVectorNodeGen.java:59)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.apply(ExtractVectorNode.java:85)
TRACE 303097:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:759)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 303143:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:791)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 303192:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:338)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 303197:
	java.util.TimSort.binarySort(TimSort.java:296)
	java.util.TimSort.sort(TimSort.java:221)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 303203:
	jdk.vm.ci.hotspot.CompilerToVM.getHostClass(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getHostClass(HotSpotResolvedObjectTypeImpl.java:424)
	org.graalvm.compiler.java.BytecodeParser.emitCheckForInvokeSuperSpecial(BytecodeParser.java:2011)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1893)
TRACE 303207:
	org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3416)
	org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3204)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1085)
	org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:979)
TRACE 303208:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:529)
TRACE 303212:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:894)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 303230:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:556)
	org.graalvm.compiler.nodes.BeginNode.simplify(BeginNode.java:72)
TRACE 303242:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
TRACE 303263:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:284)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTree(ControlFlowGraph.java:292)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:152)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 303309:
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:170)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readFieldValue(HotSpotConstantReflectionProvider.java:173)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.readValue(ConstantFoldUtil.java:51)
TRACE 303446:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:360)
TRACE 303498:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:221)
TRACE 303539:
	com.oracle.truffle.r.nodes.control.BreakNode.execute(BreakNode.java:43)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.IfNode.voidExecute(IfNode.java:69)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
TRACE 303550:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303633:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303668:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.java.InstanceOfNode.findSynonym(InstanceOfNode.java:129)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:120)
	org.graalvm.compiler.nodes.java.InstanceOfNode.canonical(InstanceOfNode.java:65)
TRACE 303671:
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
TRACE 303721:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.fillKillSet(SchedulePhase.java:376)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:260)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:206)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
TRACE 303739:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1227)
TRACE 303849:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:96)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303996:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:481)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$200(LoweringPhase.java:359)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:423)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:582)
TRACE 304025:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:710)
TRACE 304140:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:268)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 304186:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
TRACE 304227:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:816)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:140)
TRACE 304269:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:128)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:246)
TRACE 304347:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 304490:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:355)
	com.oracle.truffle.r.runtime.data.NativeDataAccess.allocateNativeContents(NativeDataAccess.java:1252)
	com.oracle.truffle.r.runtime.data.RIntVector.allocateNativeContents(RIntVector.java:207)
TRACE 304628:
	com.oracle.truffle.r.runtime.data.RIntVector$FastPathAccess.getIntImpl(RIntVector.java:222)
	com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess$FastPathFromIntAccess.getDoubleImpl(FastPathVectorAccess.java:70)
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
TRACE 304696:
	sun.misc.Unsafe.freeMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.free(NativeMemory.java:77)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory$FreeingNativeMemoryWrapper.release(NativeMemory.java:161)
	com.oracle.truffle.r.runtime.ffi.util.ResourcesCleaner$1.run(ResourcesCleaner.java:93)
TRACE 300691:
	java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
TRACE 300780:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader.findClass(URLClassLoader.java:362)
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300831:
	java.util.jar.JarFile.getMetaInfEntryNames(JarFile.java:Unknown line)
	java.util.jar.JarFile.getManEntry(JarFile.java:498)
	java.util.jar.JarFile.getManifestFromReference(JarFile.java:188)
	java.util.jar.JarFile.getManifest(JarFile.java:180)
TRACE 300856:
	java.lang.ClassLoader.loadClass(ClassLoader.java:419)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:352)
TRACE 300871:
	java.util.zip.ZipFile.getEntryBytes(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:577)
	java.util.zip.ZipFile.access$900(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
TRACE 300946:
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:664)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
	com.oracle.truffle.r.parser.RParser.basic_expr(RParser.java:2861)
TRACE 300952:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301305:
	java.util.zip.ZipFile.getNextEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$500(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:523)
	java.util.zip.ZipFile$ZipEntryIterator.nextElement(ZipFile.java:514)
TRACE 301357:
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
TRACE 301433:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301783:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.BitSet.clone(BitSet.java:1101)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
TRACE 301836:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301878:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:417)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:350)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:68)
TRACE 301918:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
TRACE 301926:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.api.nodes.Node.copy(Node.java:491)
	com.oracle.truffle.api.nodes.RootNode.copy(RootNode.java:180)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:154)
TRACE 301980:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:615)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:408)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 302065:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeLoad(PEReadEliminationClosure.java:193)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:121)
TRACE 302085:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:282)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:357)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:500)
TRACE 302097:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:282)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:431)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:506)
TRACE 302273:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forcePromises(RCallNode.java:1113)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises(RCallNode.java:1073)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 302299:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302313:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:95)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
TRACE 302337:
	com.oracle.truffle.object.ShapeImpl.getPropertyArray(ShapeImpl.java:615)
	com.oracle.truffle.object.ShapeImpl.getPropertyList(ShapeImpl.java:603)
	com.oracle.truffle.object.ShapeImpl.getProperties(ShapeImpl.java:999)
	com.oracle.truffle.r.runtime.data.RAttributesLayout.asIterable(RAttributesLayout.java:140)
TRACE 302360:
	org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget.isValid(HotSpotOptimizedCallTarget.java:104)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.interpreterCall(OptimizedCallTarget.java:424)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:417)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:404)
TRACE 302513:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxStackSize(HotSpotResolvedJavaMethodImpl.java:397)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxStackSize(ResolvedJavaMethodBytecode.java:74)
TRACE 302539:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:64)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2246)
TRACE 302553:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl$FieldInfo.getName(HotSpotResolvedObjectTypeImpl.java:683)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getName(HotSpotResolvedJavaFieldImpl.java:124)
TRACE 302588:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302612:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:898)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302629:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1153)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:803)
TRACE 302650:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
TRACE 302658:
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSupertype(HotSpotResolvedObjectTypeImpl.java:309)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeastCommonAncestor(HotSpotResolvedObjectTypeImpl.java:326)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeastCommonAncestor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meetOrderedNonNullTypes(AbstractObjectStamp.java:289)
TRACE 302660:
	java.util.AbstractCollection.addAll(AbstractCollection.java:343)
	jdk.vm.ci.meta.Assumptions.record(Assumptions.java:393)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:943)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
TRACE 302709:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:877)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$MoveGuardsUpwards.enter(ConditionalEliminationPhase.java:181)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$MoveGuardsUpwards.enter(ConditionalEliminationPhase.java:165)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits(ControlFlowGraph.java:256)
TRACE 302713:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1427)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1418)
	org.graalvm.compiler.graph.Node.initialize(Node.java:625)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302716:
	org.graalvm.compiler.graph.Node.<init>(Node.java:280)
	org.graalvm.compiler.nodes.ValueNode.<init>(ValueNode.java:58)
	org.graalvm.compiler.nodes.FixedNode.<init>(FixedNode.java:36)
	org.graalvm.compiler.nodes.FixedWithNextNode.<init>(FixedWithNextNode.java:51)
TRACE 302745:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.eliminateMoves(RedundantMoveElimination.java:366)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:163)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 302820:
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:74)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:46)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:109)
TRACE 302836:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:749)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$27.328095587.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 302884:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:276)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:263)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
TRACE 302911:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:783)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
TRACE 302928:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:187)
TRACE 302940:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:764)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:295)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:190)
TRACE 302953:
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:924)
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1039)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:532)
TRACE 302956:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:326)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.lambda$processFixedGuard$2(ConditionalEliminationPhase.java:361)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$$Lambda$920.351931721.rewire(<Unknown Source>:Unknown line)
TRACE 302963:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:585)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 302969:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopFullUnrollPhase.run(LoopFullUnrollPhase.java:55)
TRACE 302973:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:614)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:375)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 302975:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:426)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:866)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
TRACE 302985:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:46)
	org.graalvm.compiler.graph.iterators.NodeIterator.next(NodeIterator.java:32)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:52)
TRACE 302987:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:74)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
TRACE 302995:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:219)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:144)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:129)
TRACE 303023:
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd(FixReadsPhase.java:369)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processNode(FixReadsPhase.java:281)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:580)
	org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.enter(FixReadsPhase.java:145)
TRACE 303026:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:87)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 303029:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:380)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:222)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303034:
	org.graalvm.compiler.nodes.ValueNode.updateStamp(ValueNode.java:84)
	org.graalvm.compiler.nodes.PiNode.inferStamp(PiNode.java:168)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:306)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
TRACE 303052:
	org.graalvm.compiler.options.NestedBooleanOptionKey.getValue(NestedBooleanOptionKey.java:37)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.eliminateSpillMoves(LinearScanEliminateSpillMovePhase.java:126)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanEliminateSpillMovePhase.run(LinearScanEliminateSpillMovePhase.java:80)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303063:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1065)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 303066:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 303096:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:571)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:453)
TRACE 303115:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processUnsafeStore(PEReadEliminationClosure.java:216)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:123)
TRACE 303126:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.access.FrameSlotNode$PresentFrameSlotNode.hasValue(FrameSlotNode.java:181)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303130:
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run(ConvertDeoptimizeToGuardPhase.java:92)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run(ConvertDeoptimizeToGuardPhase.java:84)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303145:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1216)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1370)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:706)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:757)
TRACE 303149:
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1441)
	org.graalvm.compiler.java.BciBlockMapping.fixLoopBits(BciBlockMapping.java:1169)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:678)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
TRACE 303171:
	java.util.BitSet.clone(BitSet.java:1102)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:364)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 303177:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.foldPendingTest(ConditionalEliminationPhase.java:745)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance$2.foldGuard(ConditionalEliminationPhase.java:305)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:321)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303213:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewStamp(ConditionalEliminationPhase.java:851)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:641)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
TRACE 303314:
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode(PromiseNode.java:561)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArguments(PromiseNode.java:541)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.execute(PromiseNode.java:458)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303344:
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:609)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:411)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:285)
TRACE 303346:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:32)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:187)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 303357:
	com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.searchGeneric(SearchFirstStringNode.java:210)
	com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.apply(SearchFirstStringNode.java:103)
	com.oracle.truffle.r.nodes.access.vector.PositionCharacterLookupNode.execute(PositionCharacterLookupNode.java:66)
	com.oracle.truffle.r.nodes.access.vector.PositionCheckNode.execute(PositionCheckNode.java:210)
TRACE 303422:
	org.graalvm.compiler.lir.gen.LIRGenerator$BlockScopeImpl.access$600(LIRGenerator.java:358)
	org.graalvm.compiler.lir.gen.LIRGenerator.getBlockScope(LIRGenerator.java:406)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:339)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:85)
TRACE 303448:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrCached(GetFixedPropertyNode.java:100)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetNamesPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:448)
	com.oracle.truffle.r.nodes.attributes.GetFixedAttributeNode.getAttrFromAttributable(GetFixedAttributeNode.java:78)
TRACE 303450:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1039)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1027)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:327)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
TRACE 303482:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:841)
TRACE 303496:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:109)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$1.doValue(LinearScanAssignLocationsPhase.java:181)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:245)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachDef(LIRInstructionClass.java:259)
TRACE 303524:
	com.oracle.truffle.r.nodes.access.ConstantNode.execute(ConstantNode.java:76)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 303574:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 303584:
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:123)
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:68)
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
TRACE 303604:
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall(SetVisibilityNode.java:84)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:66)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1222)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 303674:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>(PartialEscapeClosure.java:190)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.<init>(PEReadEliminationClosure.java:94)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.createEffectsClosure(PartialEscapePhase.java:95)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:93)
TRACE 303678:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1300)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1281)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:355)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:142)
TRACE 303682:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$12(LinearScanLifetimeAnalysisPhase.java:777)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$30.1062790950.doState(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
TRACE 303693:
	org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness(LocalLiveness.java:331)
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:103)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1017)
TRACE 303757:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:104)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:319)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:209)
TRACE 303824:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:288)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
TRACE 304135:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:264)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.executeAndSpecialize(RandFunctionsNodesFactory.java:447)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:402)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
TRACE 304180:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:395)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:378)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
TRACE 304181:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:43)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.isEmpty(NodeIterable.java:76)
	org.graalvm.compiler.loop.LoopFragmentInside.lambda$clearStateNodes$1(LoopFragmentInside.java:318)
TRACE 304217:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble(VectorAccess.java:327)
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:121)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.executeAndSpecialize(IsNANodeGen.java:257)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:167)
TRACE 304301:
	org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath(DominatorOptimizationProblem.java:128)
	org.graalvm.compiler.lir.constopt.ConstantTree.markBlocks(ConstantTree.java:176)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
TRACE 304330:
	com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt(VectorAccess.java:323)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$8.perform(BinaryMapNode.java:349)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:483)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:120)
TRACE 304352:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:204)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:165)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:239)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:69)
TRACE 304358:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots(LSStackSlotAllocator.java:417)
TRACE 304368:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:797)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:819)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 304396:
	com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix(JavaUpCallsRFFIImpl.java:497)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCall.execute(Rf_allocMatrixCall.java:70)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocMatrixCallGen$InteropLibraryExports$Cached.execute(Rf_allocMatrixCallGen.java:92)
	com.oracle.truffle.nfi.impl.LibFFIClosure$CallClosureNode.execute(LibFFIClosure.java:169)
TRACE 304403:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304426:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:970)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:907)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:803)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 304434:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength(BinaryMapNode.java:499)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:59)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:246)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanNode.doNumericVectorCached(BinaryBooleanNode.java:119)
TRACE 304634:
	com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector(RDataFactory.java:806)
	com.oracle.truffle.r.runtime.RType.create(RType.java:276)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:255)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 304803:
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:121)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 300278:
	java.lang.ClassLoader.findLoadedClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1032)
	java.lang.ClassLoader.loadClass(ClassLoader.java:401)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 300698:
	com.oracle.truffle.r.runtime.RRuntime.<clinit>(RRuntime.java:222)
	com.oracle.truffle.r.runtime.env.REnvironment$ContextStateImpl.newContextState(REnvironment.java:194)
	com.oracle.truffle.r.runtime.context.RContext.<init>(RContext.java:465)
	com.oracle.truffle.r.runtime.context.RContext.create(RContext.java:619)
TRACE 300719:
	java.lang.ClassLoader.findLoadedClass0(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findLoadedClass(ClassLoader.java:1032)
	java.lang.ClassLoader.loadClass(ClassLoader.java:401)
	java.lang.ClassLoader.loadClass(ClassLoader.java:406)
TRACE 300821:
	java.lang.Class.getDeclaredFields0(Class.java:Unknown line)
	java.lang.Class.privateGetDeclaredFields(Class.java:2583)
	java.lang.Class.getDeclaredFields(Class.java:1916)
	com.oracle.truffle.api.nodes.NodeClassImpl.collectInstanceFields(NodeClassImpl.java:107)
TRACE 300938:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAddImpl(Array2DHashSet.java:63)
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
TRACE 300953:
	org.antlr.v4.runtime.misc.FlexibleHashMap.get(FlexibleHashMap.java:91)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:549)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 300962:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1464)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300963:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
TRACE 300964:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1468)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 300973:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 301001:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure(ParserATNSimulator.java:1448)
TRACE 301016:
	sun.misc.Unsafe.setMemory(Unsafe.java:Unknown line)
	sun.misc.Unsafe.setMemory(Unsafe.java:529)
	java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:132)
	java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)
TRACE 301024:
	java.lang.Class.getModifiers(Class.java:Unknown line)
	java.lang.reflect.Proxy.newProxyInstance(Proxy.java:731)
	sun.reflect.annotation.AnnotationParser$1.run(AnnotationParser.java:305)
	sun.reflect.annotation.AnnotationParser$1.run(AnnotationParser.java:303)
TRACE 301061:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:65)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 301085:
	org.antlr.v4.runtime.misc.FlexibleHashMap.values(FlexibleHashMap.java:140)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:556)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
TRACE 301086:
	java.util.HashMap.putVal(HashMap.java:629)
	java.util.HashMap.put(HashMap.java:612)
	org.antlr.v4.runtime.misc.DoubleKeyMap.put(DoubleKeyMap.java:31)
	org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons(PredictionContext.java:234)
TRACE 301133:
	com.oracle.truffle.r.runtime.nodes.RBaseNode.isRSyntaxNode(RBaseNode.java:97)
	com.oracle.truffle.r.runtime.nodes.RBaseNode.asRSyntaxNode(RBaseNode.java:111)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.getRSyntaxNode(WrapArgumentBaseNode.java:79)
	com.oracle.truffle.r.runtime.nodes.RBaseNode.asRSyntaxNode(RBaseNode.java:114)
TRACE 301211:
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:515)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:527)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:498)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:527)
TRACE 301291:
	java.util.TimSort.mergeHi(TimSort.java:837)
	java.util.TimSort.mergeAt(TimSort.java:516)
	java.util.TimSort.mergeForceCollapse(TimSort.java:457)
	java.util.TimSort.sort(TimSort.java:254)
TRACE 301316:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:66)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
TRACE 301324:
	com.oracle.truffle.api.nodes.Node.deepCopy(Node.java:504)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:163)
	com.oracle.truffle.api.nodes.Node.deepCopy(Node.java:504)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:163)
TRACE 301395:
	org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons(PredictionContext.java:240)
	org.antlr.v4.runtime.atn.PredictionContext.merge(PredictionContext.java:155)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
TRACE 301420:
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeVoid(OptimizedBlockNode.java:118)
TRACE 301467:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:858)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:295)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:177)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
TRACE 301512:
	org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee(BytecodeParser.java:2598)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2503)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2249)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1922)
TRACE 301519:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:365)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
TRACE 301539:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate(FrameSlotChangeMonitor.java:902)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:98)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
TRACE 301652:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeNonFunctionFrameDescriptor(FrameSlotChangeMonitor.java:940)
TRACE 301671:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:394)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:164)
TRACE 301757:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.core.common.type.TypeReference.filterInterfaceTypesOut(TypeReference.java:145)
	org.graalvm.compiler.core.common.type.TypeReference.create(TypeReference.java:93)
TRACE 301770:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupSignature(HotSpotConstantPool.java:554)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.<init>(HotSpotResolvedJavaMethodImpl.java:140)
TRACE 301799:
	org.antlr.v4.runtime.atn.PredictionContext.merge(PredictionContext.java:155)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:154)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301821:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:509)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 301844:
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:115)
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:68)
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
TRACE 301883:
	org.graalvm.compiler.nodes.FrameState.setOuterFrameState(FrameState.java:242)
	org.graalvm.compiler.phases.common.inlining.InliningUtil.processFrameState(InliningUtil.java:800)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeAfterAdd(PEGraphDecoder.java:1370)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1335)
TRACE 301908:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
TRACE 301940:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1173)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:761)
TRACE 301953:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putUV(UnsafeArrayTypeWriter.java:210)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:301)
TRACE 302070:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:209)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:44)
TRACE 302113:
	sun.nio.cs.UTF_8.updatePositions(UTF_8.java:77)
	sun.nio.cs.UTF_8.access$200(UTF_8.java:57)
	sun.nio.cs.UTF_8$Encoder.encodeArrayLoop(UTF_8.java:636)
	sun.nio.cs.UTF_8$Encoder.encodeLoop(UTF_8.java:691)
TRACE 302145:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.BitSet.clone(BitSet.java:1101)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:364)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
TRACE 302232:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper(NodeClass.java:1460)
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1451)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
TRACE 302250:
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:114)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:66)
TRACE 302264:
	jdk.vm.ci.hotspot.CompilerToVM.asReflectionField(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getField(HotSpotJDKReflection.java:471)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getFieldAnnotations(HotSpotJDKReflection.java:155)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:197)
TRACE 302270:
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:198)
	org.graalvm.compiler.nodes.ConstantNode.forConstant(ConstantNode.java:210)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:62)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil$1.foldConstant(ConstantFoldUtil.java:47)
TRACE 302288:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:256)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:188)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFixedNode(PEGraphDecoder.java:1167)
TRACE 302292:
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrFallback(GetFixedPropertyNode.java:106)
	com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNodeGen$GetGenericPropertyNodeGen.execute(GetFixedPropertyNodeGen.java:1665)
	com.oracle.truffle.r.nodes.attributes.GetFixedAttributeNode.getAttrFromAttributable(GetFixedAttributeNode.java:78)
	com.oracle.truffle.r.nodes.attributes.SpecialAttributesFunctionsFactory$GetClassAttributeNodeGen.execute(SpecialAttributesFunctionsFactory.java:1926)
TRACE 302302:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:142)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.run(LinearScanResolveDataFlowPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
TRACE 302315:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:117)
TRACE 302317:
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:94)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302333:
	com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric(RCallNode.java:548)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:202)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
	com.oracle.truffle.r.nodes.unary.ConvertBooleanNodeGen.executeByte_byte2(ConvertBooleanNodeGen.java:151)
TRACE 302340:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.access$100(ReadVariableNode.java:140)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:411)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
TRACE 302376:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:372)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:367)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
TRACE 302404:
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:255)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 302414:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:783)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302442:
	com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute(PromiseNode.java:166)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:47)
TRACE 302477:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranch(AMD64LIRGenerator.java:330)
TRACE 302497:
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:105)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:188)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:47)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
TRACE 302499:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:547)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 302514:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.values(AMD64BaseAssembler.java:89)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler$OperandSize.get(AMD64BaseAssembler.java:189)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitCompareBranchMemory(AMD64LIRGenerator.java:386)
TRACE 302517:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.ValuePhiNode.inferStamp(ValuePhiNode.java:77)
TRACE 302522:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:735)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:718)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:134)
TRACE 302547:
	org.graalvm.compiler.graph.Node.<init>(Node.java:280)
	org.graalvm.compiler.nodes.ValueNode.<init>(ValueNode.java:58)
	org.graalvm.compiler.nodes.calc.FloatingNode.<init>(FloatingNode.java:38)
	org.graalvm.compiler.nodes.LogicNode.<init>(LogicNode.java:43)
TRACE 302549:
	org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize(StructuredGraph.java:1055)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitBackEnd(LIRCompilerBackend.java:85)
	org.graalvm.compiler.core.target.Backend.emitBackEnd(Backend.java:279)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)
TRACE 302562:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:739)
TRACE 302570:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:323)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.create(IntegerEqualsNode.java:92)
TRACE 302578:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.replacements.PEGraphDecoder.getInvocationPlugin(PEGraphDecoder.java:841)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:794)
TRACE 302594:
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:179)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:903)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:870)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:744)
TRACE 302600:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit(PartialEscapeClosure.java:577)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processLoopExit(PartialEscapeClosure.java:547)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:333)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processLoopExit(PEReadEliminationClosure.java:81)
TRACE 302625:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302628:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards(SchedulePhase.java:987)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.access$100(SchedulePhase.java:974)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:805)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 302649:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:749)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$27.328095587.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
TRACE 302676:
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject(WriteLocalFrameVariableNode.java:97)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:146)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute(WriteLocalFrameVariableNodeGen.java:48)
	com.oracle.truffle.r.nodes.function.SaveArgumentsNode.execute(SaveArgumentsNode.java:56)
TRACE 302678:
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:184)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:162)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 302708:
	org.graalvm.compiler.core.common.type.ArithmeticStamp.<init>(ArithmeticStamp.java:39)
	org.graalvm.compiler.core.common.type.PrimitiveStamp.<init>(PrimitiveStamp.java:38)
	org.graalvm.compiler.core.common.type.IntegerStamp.<init>(IntegerStamp.java:68)
	org.graalvm.compiler.core.common.type.IntegerStamp.create(IntegerStamp.java:124)
TRACE 302711:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:414)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:326)
TRACE 302769:
	org.graalvm.compiler.phases.common.FloatingReadPhase$MemoryMapImpl.getLastLocationAccess(FloatingReadPhase.java:105)
	org.graalvm.compiler.phases.common.FloatingReadPhase.mergeMemoryMaps(FloatingReadPhase.java:257)
	org.graalvm.compiler.phases.common.FloatingReadPhase$FloatingReadClosure.merge(FloatingReadPhase.java:410)
	org.graalvm.compiler.phases.common.FloatingReadPhase$FloatingReadClosure.merge(FloatingReadPhase.java:296)
TRACE 302791:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 302840:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 302854:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:328)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
TRACE 302855:
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots(LSStackSlotAllocator.java:419)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:178)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.access$100(LSStackSlotAllocator.java:110)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator.allocateStackSlots(LSStackSlotAllocator.java:105)
TRACE 302856:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:282)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:324)
TRACE 302872:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.<init>(ConditionalEliminationPhase.java:288)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.createVisitor(ConditionalEliminationPhase.java:162)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:151)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:111)
TRACE 302899:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:586)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 302906:
	org.graalvm.compiler.lir.constopt.VariableMap.forEach(VariableMap.java:75)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:135)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.access$100(ConstantLoadOptimization.java:96)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization.run(ConstantLoadOptimization.java:85)
TRACE 302949:
	org.graalvm.compiler.graph.Graph.grow(Graph.java:1073)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1052)
	org.graalvm.compiler.graph.Node.initialize(Node.java:623)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302967:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1130)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:986)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:982)
TRACE 302974:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:437)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 302978:
	org.graalvm.compiler.graph.Node.replaceAtUsages(Node.java:755)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:206)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:100)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:82)
TRACE 302989:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.WriteBarrierAdditionPhase.run(WriteBarrierAdditionPhase.java:39)
	org.graalvm.compiler.phases.common.WriteBarrierAdditionPhase.run(WriteBarrierAdditionPhase.java:34)
TRACE 303014:
	org.graalvm.compiler.replacements.SnippetTemplate.replaceMemoryUsages(SnippetTemplate.java:1455)
	org.graalvm.compiler.replacements.SnippetTemplate.rewireMemoryGraph(SnippetTemplate.java:1408)
	org.graalvm.compiler.replacements.SnippetTemplate.instantiate(SnippetTemplate.java:1506)
	org.graalvm.compiler.replacements.SnippetTemplate.instantiate(SnippetTemplate.java:1471)
TRACE 303016:
	com.oracle.truffle.api.object.Location.get(Location.java:83)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNode.getAttrCached(GetPropertyNode.java:52)
	com.oracle.truffle.r.nodes.attributes.GetPropertyNodeGen.execute(GetPropertyNodeGen.java:45)
	com.oracle.truffle.r.nodes.access.AccessSlotNode.getSlotS4Cached(AccessSlotNode.java:68)
TRACE 303054:
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:675)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:1937)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:282)
TRACE 303062:
	org.graalvm.compiler.graph.NodeClass.updateEdgeListCopy(NodeClass.java:825)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:811)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:818)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
TRACE 303089:
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock(FixPointIntervalBuilder.java:128)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build(FixPointIntervalBuilder.java:94)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.buildIntervals(LSStackSlotAllocator.java:219)
	org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.allocate(LSStackSlotAllocator.java:149)
TRACE 303100:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
TRACE 303102:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugin.execute(InvocationPlugin.java:185)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:817)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:738)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:718)
TRACE 303105:
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:133)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1017)
	org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:979)
TRACE 303120:
	org.graalvm.compiler.replacements.nodes.Plugin_ArrayEqualsNode_equals.execute(PluginFactory_ArrayEqualsNode.java:34)
	org.graalvm.compiler.java.BytecodeParser.tryInvocationPlugin(BytecodeParser.java:2204)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1914)
	org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(BytecodeParser.java:1679)
TRACE 303152:
	org.graalvm.compiler.nodes.calc.IntegerLessThanNode.canonical(IntegerLessThanNode.java:82)
	org.graalvm.compiler.nodes.calc.IntegerLessThanNode.canonical(IntegerLessThanNode.java:55)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303161:
	java.util.HashMap.putVal(HashMap.java:629)
	java.util.HashMap.put(HashMap.java:612)
	java.util.HashSet.add(HashSet.java:220)
	com.oracle.truffle.r.runtime.nodes.EvaluatedArgumentsVisitor.visit(EvaluatedArgumentsVisitor.java:217)
TRACE 303162:
	org.graalvm.compiler.core.amd64.AMD64CompressAddressLowering.improve(AMD64CompressAddressLowering.java:52)
	org.graalvm.compiler.core.amd64.AMD64AddressLowering.lower(AMD64AddressLowering.java:54)
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:64)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303173:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303176:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:191)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join(AbstractObjectStamp.java:163)
	org.graalvm.compiler.nodes.java.InstanceOfNode.tryFold(InstanceOfNode.java:190)
TRACE 303178:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.equals(RegStackValueSet.java:132)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:106)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
TRACE 303179:
	org.graalvm.compiler.lir.LIRInstructionClass.hasState(LIRInstructionClass.java:238)
	org.graalvm.compiler.lir.LIRInstruction.hasState(LIRInstruction.java:243)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:445)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
TRACE 303182:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.determinePreciseArrayElementType(LoadIndexedNode.java:111)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:103)
TRACE 303188:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:414)
	org.graalvm.collections.EconomicMapImpl.findAndRemoveHash(EconomicMapImpl.java:351)
	org.graalvm.collections.EconomicMapImpl.removeKey(EconomicMapImpl.java:630)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.mergeStates(ReentrantBlockIterator.java:198)
TRACE 303194:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processEnd(ConditionalEliminationPhase.java:607)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:508)
TRACE 303204:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray(UnsafeArrayTypeWriter.java:100)
	org.graalvm.compiler.nodes.GraphEncoder.getEncoding(GraphEncoder.java:312)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:165)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:113)
TRACE 303210:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:387)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:264)
TRACE 303217:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303218:
	org.graalvm.compiler.nodes.type.StampTool.meetOrNull(StampTool.java:69)
	org.graalvm.compiler.nodes.ValuePhiNode.inferStamp(ValuePhiNode.java:73)
	org.graalvm.compiler.replacements.SnippetTemplate.propagateStamp(SnippetTemplate.java:1562)
	org.graalvm.compiler.replacements.SnippetTemplate.updateStamps(SnippetTemplate.java:1584)
TRACE 303221:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1025)
	org.graalvm.compiler.graph.Node.clone(Node.java:1066)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:944)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
TRACE 303222:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.getMetaAccess(CanonicalizerPhase.java:541)
	org.graalvm.compiler.nodes.memory.ReadNode.canonicalizeRead(ReadNode.java:113)
	org.graalvm.compiler.nodes.memory.FloatingReadNode.canonical(FloatingReadNode.java:94)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
TRACE 303259:
	com.oracle.truffle.r.nodes.function.PostProcessArgumentsNode.execute(PostProcessArgumentsNode.java:83)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:338)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 303264:
	com.oracle.truffle.r.runtime.context.RContext.getInstance(RContext.java:787)
	com.oracle.truffle.r.runtime.data.Closure.getCallTarget(Closure.java:122)
	com.oracle.truffle.r.runtime.data.Closure.eval(Closure.java:140)
	com.oracle.truffle.r.nodes.InlineCacheNode.evalPromise(InlineCacheNode.java:97)
TRACE 303273:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:303)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:353)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:205)
TRACE 303308:
	com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition(FilterNode.java:102)
	com.oracle.truffle.r.nodes.unary.FilterNode.executeRest(FilterNode.java:94)
	com.oracle.truffle.r.nodes.unary.FilterNodeGen.execute(FilterNodeGen.java:44)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
TRACE 303313:
	com.oracle.truffle.r.nodes.function.signature.MissingNode.execute(MissingNode.java:231)
	com.oracle.truffle.r.nodes.function.signature.MissingNode.execute(MissingNode.java:57)
	com.oracle.truffle.r.runtime.nodes.RNode.executeByte(RNode.java:94)
	com.oracle.truffle.r.nodes.unary.ConvertBooleanNodeGen.executeByte_byte2(ConvertBooleanNodeGen.java:151)
TRACE 303316:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:382)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 303318:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:52)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 303335:
	com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute(PromiseNode.java:166)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.executeFallback(OptVariablePromiseBaseNode.java:138)
	com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute(OptVariablePromiseBaseNode.java:97)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303336:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:261)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:256)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:608)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.allEndsVisited(ReentrantBlockIterator.java:177)
TRACE 303349:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:678)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processAbstractBegin(ConditionalEliminationPhase.java:887)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:456)
TRACE 303388:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:799)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:818)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 303403:
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:62)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303413:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4302)
	org.graalvm.compiler.java.BytecodeParser.genPutField(BytecodeParser.java:4773)
TRACE 303416:
	org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd(GraphDecoder.java:956)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:709)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303418:
	org.graalvm.compiler.nodes.IfNode.setCondition(IfNode.java:109)
	org.graalvm.compiler.nodes.IfNode.eliminateNegation(IfNode.java:250)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:223)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1277)
TRACE 303429:
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNode.executeOriginalPipeline(ValueForwardingNode.java:92)
	com.oracle.truffle.r.nodes.builtin.casts.ValueForwardingNodeGen.execute(ValueForwardingNodeGen.java:74)
TRACE 303432:
	com.oracle.truffle.r.runtime.VirtualEvalFrame.setBoolean(VirtualEvalFrame.java:98)
	com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute(SetVisibilityNode.java:67)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.visibleExecute(ReadVariableNode.java:116)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.visibleExecute(WrapArgumentBaseNode.java:63)
TRACE 303437:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1242)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:641)
TRACE 303438:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:67)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:282)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
TRACE 303444:
	org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>(Interval.java:354)
	org.graalvm.compiler.lir.alloc.lsra.Interval.<init>(Interval.java:734)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.createInterval(LinearScan.java:363)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.getOrCreateInterval(LinearScan.java:431)
TRACE 303454:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:802)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:53)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:46)
TRACE 303466:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildBeforeOpId(Interval.java:940)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:537)
TRACE 303476:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.mergeObjectStates(PartialEscapeClosure.java:862)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:768)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:369)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.doMergeWithoutDead(EffectsClosure.java:404)
TRACE 303479:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:157)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:235)
TRACE 303480:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
	org.graalvm.compiler.nodes.FixedWithNextNode.setNext(FixedWithNextNode.java:46)
TRACE 303485:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:448)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.fastPartialEvaluation(PartialEvaluator.java:729)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.createGraph(PartialEvaluator.java:330)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:457)
TRACE 303489:
	java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1043)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:91)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
TRACE 303492:
	com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest(ConditionalMapNode.java:82)
	com.oracle.truffle.r.nodes.unary.ConditionalMapNodeGen.execute(ConditionalMapNodeGen.java:44)
	com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute(ChainedCastNode.java:47)
	com.oracle.truffle.r.nodes.unary.CastNode.doCast(CastNode.java:50)
TRACE 303494:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove(MoveResolver.java:295)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSAMoveResolver.createMove(SSAMoveResolver.java:163)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:278)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:350)
TRACE 303523:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:812)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:785)
TRACE 303529:
	org.graalvm.compiler.phases.common.WriteBarrierAdditionPhase.run(WriteBarrierAdditionPhase.java:42)
	org.graalvm.compiler.phases.common.WriteBarrierAdditionPhase.run(WriteBarrierAdditionPhase.java:34)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 303566:
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd(EdgeMoveOptimizer.java:170)
	org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.access$000(EdgeMoveOptimizer.java:78)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:70)
	org.graalvm.compiler.lir.EdgeMoveOptimizer.run(EdgeMoveOptimizer.java:57)
TRACE 303606:
	com.oracle.truffle.r.nodes.access.vector.PositionCheckNode.execute(PositionCheckNode.java:219)
	com.oracle.truffle.r.nodes.access.vector.PositionsCheckNode.executeCheck(PositionsCheckNode.java:96)
	com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.apply(CachedExtractVectorNode.java:146)
	com.oracle.truffle.r.nodes.access.vector.ExtractVectorNode.doExtractDefaultCached(ExtractVectorNode.java:128)
TRACE 303607:
	org.graalvm.compiler.graph.NodeClass.registerAtSuccessorsAsPredecessor(NodeClass.java:1362)
	org.graalvm.compiler.graph.Node.initialize(Node.java:626)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 303610:
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:131)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:267)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:743)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$2.apply(GraphEffectList.java:188)
TRACE 303617:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
	com.oracle.truffle.r.runtime.nodes.RNode.voidExecute(RNode.java:66)
TRACE 303624:
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl(BinaryBooleanScalarNode.java:124)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.doCached(BinaryBooleanScalarNode.java:114)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNodeGen$LogicalScalarCastNodeGen.executeCast(BinaryBooleanScalarNodeGen.java:71)
	com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode.binary(BinaryBooleanScalarNode.java:85)
TRACE 303635:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.nodes.function.opt.OptForcedEagerPromiseNode.execute(OptForcedEagerPromiseNode.java:151)
TRACE 303637:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:357)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:238)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:212)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:104)
TRACE 303648:
	sun.text.normalizer.NormalizerBase$NFDMode.normalize(NormalizerBase.java:297)
	sun.text.normalizer.NormalizerBase$Mode.normalize(NormalizerBase.java:209)
	sun.text.normalizer.NormalizerBase.next(NormalizerBase.java:1460)
	sun.text.normalizer.NormalizerBase.nextNormalize(NormalizerBase.java:1493)
TRACE 303663:
	org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.queueSuccessors(InliningIterator.java:105)
	org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.apply(InliningIterator.java:86)
	org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable.<init>(CallsiteHolderExplorable.java:85)
	org.graalvm.compiler.phases.common.inlining.walker.InliningData.<init>(InliningData.java:137)
TRACE 303670:
	com.oracle.truffle.r.nodes.function.WrapArgumentNode.handleShareable(WrapArgumentNode.java:60)
	com.oracle.truffle.r.nodes.function.WrapArgumentBaseNode.execute(WrapArgumentBaseNode.java:69)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.getEagerValue(PromiseHelperNode.java:624)
	com.oracle.truffle.r.nodes.function.PromiseHelperNode$GenerateValueForEagerPromiseNode.generateValue(PromiseHelperNode.java:577)
TRACE 303690:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:90)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:280)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 303716:
	java.util.Collections$UnmodifiableCollection$1.hasNext(Collections.java:1043)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.getStringIdentifiersAndValues(REnvTruffleFrameAccess.java:258)
	com.oracle.truffle.r.runtime.env.frame.REnvTruffleFrameAccess.ls(REnvTruffleFrameAccess.java:201)
	com.oracle.truffle.r.runtime.env.REnvironment.ls(REnvironment.java:1057)
TRACE 303726:
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode(PromiseNode.java:573)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArguments(PromiseNode.java:541)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.execute(PromiseNode.java:458)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
TRACE 303734:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1014)
	com.oracle.truffle.r.nodes.function.GetMissingValueNode$ResolvedGetMissingValueNode.execute(GetMissingValueNode.java:92)
	com.oracle.truffle.r.nodes.function.signature.MissingNode$MissingCheckLevel.execute(MissingNode.java:116)
	com.oracle.truffle.r.nodes.function.signature.MissingNode.execute(MissingNode.java:231)
TRACE 303742:
	org.graalvm.compiler.nodes.StructuredGraph$1$1.hasNext(StructuredGraph.java:641)
	org.graalvm.compiler.truffle.compiler.phases.DeoptimizeOnExceptionPhase.run(DeoptimizeOnExceptionPhase.java:54)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
TRACE 303753:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.analyzeBlock(ConstantLoadOptimization.java:257)
TRACE 303775:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4248)
	org.graalvm.compiler.java.BytecodeParser.genNewInstance(BytecodeParser.java:4505)
TRACE 303783:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
TRACE 303798:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:726)
	com.oracle.truffle.r.nodes.builtin.base.UpdateAttributes.doOtherNull(UpdateAttributes.java:313)
	com.oracle.truffle.r.nodes.builtin.base.UpdateAttributesNodeGen.execute(UpdateAttributesNodeGen.java:52)
TRACE 303834:
	org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph(GraphDecoder.java:1534)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:145)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:660)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
TRACE 303839:
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:267)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
	org.graalvm.compiler.loop.LoopEx.isOutsideLoop(LoopEx.java:127)
TRACE 303855:
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:338)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callProxy(OptimizedCallTarget.java:475)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callRoot(OptimizedCallTarget.java:450)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary(OptimizedCallTarget.java:420)
TRACE 303906:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:126)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:81)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:254)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
TRACE 303915:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:254)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:245)
	org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode(GraphDecoder.java:1390)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1329)
TRACE 303926:
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp(BinaryArithmeticNode.java:75)
	org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.canonical(BinaryArithmeticNode.java:90)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:172)
	org.graalvm.compiler.nodes.calc.AddNode.canonical(AddNode.java:47)
TRACE 303942:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:310)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1302)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1327)
TRACE 303948:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303952:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet(AbstractObjectStamp.java:142)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:244)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:808)
TRACE 303972:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:351)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:321)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:885)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:134)
TRACE 303975:
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:933)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:893)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1209)
TRACE 303978:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:74)
	org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run(DeoptimizationGroupingPhase.java:55)
TRACE 304005:
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet(AbstractObjectStamp.java:124)
	org.graalvm.compiler.nodes.type.StampTool.meetOrNull(StampTool.java:69)
	org.graalvm.compiler.nodes.ValuePhiNode.inferStamp(ValuePhiNode.java:73)
TRACE 304022:
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:662)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:642)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:652)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.agnosticInliningOrGraphPE(PartialEvaluator.java:741)
TRACE 304039:
	org.graalvm.compiler.java.BciBlockMapping.iterateOverBytecodes(BciBlockMapping.java:764)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:667)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1446)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1001)
TRACE 304046:
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:168)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:36)
	org.graalvm.compiler.nodes.PhiNode.addInput(PhiNode.java:158)
TRACE 304058:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.loop.phases.LoopPartialUnrollPhase.run(LoopPartialUnrollPhase.java:59)
TRACE 304063:
	java.util.Hashtable.get(Hashtable.java:366)
	java.util.Properties.getProperty(Properties.java:969)
	java.lang.System.getProperty(System.java:720)
	org.graalvm.nativeimage.ImageInfo.inImageRuntimeCode(ImageInfo.java:132)
TRACE 304121:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1337)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1247)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:639)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:508)
TRACE 304179:
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:261)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:69)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:97)
TRACE 304213:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:797)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:818)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:923)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1238)
TRACE 304222:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:531)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:466)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:399)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
TRACE 304228:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:279)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:890)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:616)
TRACE 304233:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1153)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:952)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:834)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
TRACE 304234:
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder(ComputeBlockOrder.java:106)
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder(ComputeBlockOrder.java:94)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR0(LIRCompilerBackend.java:143)
	org.graalvm.compiler.core.gen.LIRCompilerBackend.emitLIR(LIRCompilerBackend.java:113)
TRACE 304235:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:283)
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:283)
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:267)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
TRACE 304239:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:778)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.replacements.DefaultJavaLoweringProvider.createArrayAddress(DefaultJavaLoweringProvider.java:461)
TRACE 304248:
	org.graalvm.compiler.nodes.calc.ConditionalNode.canonical(ConditionalNode.java:142)
	org.graalvm.compiler.nodes.calc.ConditionalNode.canonical(ConditionalNode.java:56)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:391)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
TRACE 304254:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:300)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:411)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:325)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:302)
TRACE 304271:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1059)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 304276:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:256)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doLogicalCached(UnaryArithmeticReduceNode.java:285)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:429)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304283:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:315)
	org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder$BlockClosure.processInstructionBottomUp(FixPointIntervalBuilder.java:205)
TRACE 304288:
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper(AMD64BaseAssembler.java:648)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper(AMD64BaseAssembler.java:541)
	org.graalvm.compiler.asm.amd64.AMD64Assembler.movq(AMD64Assembler.java:2374)
	org.graalvm.compiler.asm.amd64.AMD64Assembler.movq(AMD64Assembler.java:2357)
TRACE 304296:
	com.oracle.truffle.r.nodes.builtin.base.Combine.createResultVector(Combine.java:417)
	com.oracle.truffle.r.nodes.builtin.base.Combine.foldContents(Combine.java:349)
	com.oracle.truffle.r.nodes.builtin.base.Combine.combineCached(Combine.java:182)
	com.oracle.truffle.r.nodes.builtin.base.CombineNodeGen.executeAndSpecialize(CombineNodeGen.java:202)
TRACE 304308:
	com.oracle.truffle.r.nodes.builtin.base.Sample.doSample(Sample.java:147)
	com.oracle.truffle.r.nodes.builtin.base.SampleNodeGen.executeAndSpecialize(SampleNodeGen.java:131)
	com.oracle.truffle.r.nodes.builtin.base.SampleNodeGen.execute(SampleNodeGen.java:77)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg4.call(RBuiltinNode.java:213)
TRACE 304314:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:827)
TRACE 304319:
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt(UnaryArithmeticReduceNode.java:243)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doIntCached(UnaryArithmeticReduceNode.java:274)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeAndSpecialize(UnaryArithmeticReduceNodeGen.java:383)
	com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNodeGen.executeReduce(UnaryArithmeticReduceNodeGen.java:283)
TRACE 304337:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1454)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:955)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:980)
	org.graalvm.compiler.replacements.PEGraphDecoder.deleteInvoke(PEGraphDecoder.java:1146)
TRACE 304344:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:77)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:38)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:71)
TRACE 304346:
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached(RandFunctionsNodes.java:262)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionDoubleExecutorNodeGen.execute(RandFunctionsNodesFactory.java:392)
	com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionExecutorBase.evaluateWithCached(RandFunctionsNodes.java:147)
	com.oracle.truffle.r.library.stats.RandFunctionsNodesFactory$RandFunctionExecutorBaseNodeGen.execute(RandFunctionsNodesFactory.java:130)
TRACE 304377:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:465)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:52)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 304409:
	com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached(IsNA.java:145)
	com.oracle.truffle.r.nodes.builtin.base.IsNANodeGen.execute(IsNANodeGen.java:139)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:174)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1158)
TRACE 304468:
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:177)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:73)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:209)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:146)
TRACE 304523:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:273)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 304532:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:895)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:197)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:156)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304612:
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:289)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization$$Lambda$19.1274658873.accept(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.constopt.VariableMap.forEach(VariableMap.java:73)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.apply(ConstantLoadOptimization.java:142)
TRACE 304648:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform(BinaryMapNode.java:363)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight(BinaryMapNode.java:561)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:152)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:83)
TRACE 304714:
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:206)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
	jdk.vm.ci.meta.ModifiersProvider.isAbstract(ModifiersProvider.java:138)
CPU SAMPLES BEGIN (total = 25169) Tue Jan  5 13:22:10 2021
rank   self  accum   count trace method
   1 24.91% 24.91%    6269 301641 java.io.FileInputStream.open0
   2  5.49% 30.40%    1382 301654 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   3  3.73% 34.13%     940 301782 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   4  2.59% 36.72%     651 302015 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   5  1.58% 38.30%     398 302054 jdk.vm.ci.hotspot.CompilerToVM.installCode
   6  1.54% 39.84%     387 301851 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
   7  1.38% 41.22%     347 301662 java.lang.Throwable.fillInStackTrace
   8  1.33% 42.55%     335 301665 java.lang.Throwable.fillInStackTrace
   9  1.18% 43.73%     297 301674 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
  10  1.14% 44.86%     286 302008 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  11  0.86% 45.72%     216 301215 sun.nio.fs.UnixNativeDispatcher.access0
  12  0.82% 46.54%     206 300068 java.lang.ClassLoader.defineClass1
  13  0.81% 47.35%     203 302531 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  14  0.62% 47.97%     156 304139 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  15  0.56% 48.52%     140 302175 org.graalvm.collections.EconomicMapImpl.findLinear
  16  0.54% 49.06%     136 301703 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  17  0.51% 49.57%     128 301749 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  18  0.50% 50.08%     127 304144 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
  19  0.50% 50.58%     126 301027 java.lang.String.intern
  20  0.49% 51.07%     123 301100 java.lang.String.intern
  21  0.48% 51.55%     122 302003 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  22  0.48% 52.03%     121 302014 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  23  0.43% 52.47%     109 301818 java.lang.System.identityHashCode
  24  0.43% 52.89%     108 304299 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  25  0.38% 53.28%      96 302092 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  26  0.38% 53.65%      95 301707 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  27  0.38% 54.03%      95 304142 com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand
  28  0.37% 54.40%      93 301983 com.oracle.truffle.api.TruffleFile.checkAccess
  29  0.35% 54.75%      88 300794 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  30  0.32% 55.07%      81 301342 sun.nio.fs.UnixNativeDispatcher.realpath0
  31  0.32% 55.39%      81 301668 sun.nio.fs.UnixNativeDispatcher.access
  32  0.31% 55.70%      78 301894 org.graalvm.collections.EconomicMapImpl.getHashIndex
  33  0.29% 55.99%      72 302240 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  34  0.27% 56.26%      68 302842 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  35  0.26% 56.52%      66 302390 org.graalvm.collections.EconomicMapImpl.getHashIndex
  36  0.24% 56.76%      60 301873 java.lang.System.identityHashCode
  37  0.23% 56.99%      58 304413 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  38  0.23% 57.22%      57 300978 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
  39  0.23% 57.44%      57 301843 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  40  0.23% 57.67%      57 304432 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  41  0.22% 57.89%      56 302456 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  42  0.22% 58.11%      55 302516 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  43  0.21% 58.33%      54 302013 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  44  0.21% 58.54%      53 302839 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  45  0.20% 58.74%      51 300937 java.lang.System.identityHashCode
  46  0.20% 58.94%      51 302359 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
  47  0.20% 59.14%      50 302857 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  48  0.20% 59.34%      50 304563 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.setFromSameType
  49  0.19% 59.53%      48 302344 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  50  0.19% 59.72%      48 303044 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  51  0.19% 59.91%      48 304238 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  52  0.19% 60.10%      47 300959 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
  53  0.19% 60.28%      47 301840 java.lang.Object.hashCode
  54  0.18% 60.47%      46 300945 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
  55  0.18% 60.65%      45 301672 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  56  0.18% 60.82%      45 304704 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  57  0.17% 61.00%      44 301990 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  58  0.17% 61.17%      44 303128 org.graalvm.compiler.graph.Graph.findDuplicate
  59  0.17% 61.35%      43 302389 java.lang.Object.hashCode
  60  0.16% 61.50%      40 302540 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
  61  0.16% 61.66%      40 302703 org.graalvm.collections.EconomicMapImpl.getHashIndex
  62  0.15% 61.82%      39 301901 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
  63  0.15% 61.97%      38 302028 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  64  0.15% 62.12%      38 304297 com.oracle.truffle.r.nodes.builtin.base.Combine.processContentElement
  65  0.15% 62.27%      37 302115 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
  66  0.15% 62.41%      37 302955 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  67  0.14% 62.56%      36 301187 java.lang.String.intern
  68  0.14% 62.70%      36 301700 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  69  0.14% 62.84%      36 304266 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
  70  0.14% 62.98%      35 300948 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
  71  0.14% 63.12%      35 301728 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  72  0.14% 63.26%      35 302698 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  73  0.14% 63.40%      35 304703 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  74  0.14% 63.54%      35 304706 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
  75  0.13% 63.67%      33 301214 java.lang.String.intern
  76  0.13% 63.80%      33 301322 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
  77  0.13% 63.93%      32 302019 org.graalvm.compiler.nodes.LogicNegationNode.implies
  78  0.13% 64.05%      32 302723 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  79  0.12% 64.18%      31 301801 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  80  0.12% 64.30%      31 302095 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  81  0.12% 64.42%      31 304642 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
  82  0.12% 64.54%      30 300944 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  83  0.12% 64.66%      30 302191 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  84  0.12% 64.78%      30 303025 org.graalvm.compiler.graph.NodeClass.applyEdges
  85  0.12% 64.90%      29 301973 org.graalvm.compiler.graph.NodeClass.deepEquals0
  86  0.11% 65.01%      28 301804 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  87  0.11% 65.12%      28 302999 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  88  0.11% 65.23%      28 304453 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  89  0.11% 65.34%      27 304277 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
  90  0.10% 65.44%      26 300956 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  91  0.10% 65.54%      26 301144 java.lang.String.intern
  92  0.10% 65.65%      26 302968 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  93  0.10% 65.75%      25 302352 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
  94  0.10% 65.84%      24 300587 sun.misc.Unsafe.defineAnonymousClass
  95  0.10% 65.94%      24 301457 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
  96  0.10% 66.03%      24 301729 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  97  0.10% 66.13%      24 301849 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
  98  0.10% 66.22%      24 302365 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
  99  0.10% 66.32%      24 302581 org.graalvm.collections.EconomicMapImpl.find
 100  0.10% 66.42%      24 302671 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 101  0.10% 66.51%      24 303491 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 102  0.09% 66.60%      23 302821 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
 103  0.09% 66.69%      23 304697 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 104  0.09% 66.78%      22 300486 java.lang.ClassLoader.loadClass
 105  0.09% 66.87%      22 301171 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 106  0.09% 66.96%      22 301841 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 107  0.09% 67.04%      22 302073 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 108  0.09% 67.13%      22 302161 org.graalvm.collections.EconomicMapImpl.getHashIndex
 109  0.09% 67.22%      22 302335 org.graalvm.collections.EconomicMapImpl.compareKeys
 110  0.09% 67.31%      22 302345 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 111  0.09% 67.39%      22 302420 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 112  0.09% 67.48%      22 303125 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 113  0.09% 67.57%      22 303172 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 114  0.09% 67.65%      22 304399 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix
 115  0.08% 67.74%      21 301407 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 116  0.08% 67.82%      21 301515 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 117  0.08% 67.90%      21 301949 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 118  0.08% 67.99%      21 302159 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 119  0.08% 68.07%      21 302293 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 120  0.08% 68.16%      21 302426 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 121  0.08% 68.24%      21 304489 sun.misc.Unsafe.copyMemory
 122  0.08% 68.32%      21 304804 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight
 123  0.08% 68.40%      20 300284 java.util.zip.ZipFile.getEntry
 124  0.08% 68.48%      20 301177 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 125  0.08% 68.56%      20 301422 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 126  0.08% 68.64%      20 302489 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 127  0.08% 68.72%      20 303046 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 128  0.08% 68.79%      19 301066 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setAndInvalidate
 129  0.08% 68.87%      19 301172 java.lang.Object.hashCode
 130  0.08% 68.95%      19 302294 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 131  0.08% 69.02%      19 302616 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 132  0.08% 69.10%      19 302696 org.graalvm.compiler.graph.NodeClass.applyHelper
 133  0.08% 69.17%      19 304407 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 134  0.07% 69.24%      18 301682 sun.nio.fs.UnixNativeDispatcher.access
 135  0.07% 69.32%      18 301687 sun.nio.fs.UnixException.rethrowAsIOException
 136  0.07% 69.39%      18 301864 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 137  0.07% 69.46%      18 302023 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 138  0.07% 69.53%      18 302303 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 139  0.07% 69.60%      18 302536 com.oracle.truffle.r.runtime.RSource.fromSrcfile
 140  0.07% 69.67%      18 302691 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 141  0.07% 69.74%      18 302746 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 142  0.07% 69.82%      18 302841 org.graalvm.collections.EconomicMapImpl.add
 143  0.07% 69.89%      18 303261 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 144  0.07% 69.96%      18 304707 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight
 145  0.07% 70.03%      17 301356 com.oracle.truffle.r.runtime.nodes.RNode.voidExecute
 146  0.07% 70.09%      17 302160 jdk.vm.ci.hotspot.CompilerToVM.lookupType
 147  0.07% 70.16%      17 302211 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 148  0.07% 70.23%      17 302342 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 149  0.07% 70.30%      17 302427 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
 150  0.07% 70.36%      17 302457 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes
 151  0.07% 70.43%      17 302879 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 152  0.07% 70.50%      17 302894 org.graalvm.compiler.core.common.Fields.copy
 153  0.07% 70.57%      17 303036 org.graalvm.compiler.graph.NodeClass.dataEquals
 154  0.07% 70.63%      17 303256 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
 155  0.07% 70.70%      17 304415 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 156  0.06% 70.77%      16 300784 java.lang.Throwable.fillInStackTrace
 157  0.06% 70.83%      16 301004 java.lang.String.intern
 158  0.06% 70.89%      16 301723 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 159  0.06% 70.96%      16 301753 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
 160  0.06% 71.02%      16 301767 org.graalvm.compiler.nodes.GraphDecoder.decode
 161  0.06% 71.08%      16 302281 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 162  0.06% 71.15%      16 302541 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 163  0.06% 71.21%      16 303185 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 164  0.06% 71.27%      16 303487 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval
 165  0.06% 71.34%      16 304205 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_copyMatrix
 166  0.06% 71.40%      16 304637 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 167  0.06% 71.46%      15 301891 com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>
 168  0.06% 71.52%      15 301962 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 169  0.06% 71.58%      15 301965 java.lang.Class.isAssignableFrom
 170  0.06% 71.64%      15 302223 org.graalvm.collections.EconomicMapImpl.getHashIndex
 171  0.06% 71.70%      15 302322 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 172  0.06% 71.76%      15 302574 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 173  0.06% 71.82%      15 302607 org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField
 174  0.06% 71.88%      15 302737 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 175  0.06% 71.94%      15 304219 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 176  0.06% 71.99%      14 300966 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 177  0.06% 72.05%      14 300968 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 178  0.06% 72.10%      14 301000 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 179  0.06% 72.16%      14 301162 java.lang.Class.getSuperclass
 180  0.06% 72.22%      14 301887 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
 181  0.06% 72.27%      14 302091 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 182  0.06% 72.33%      14 302168 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 183  0.06% 72.38%      14 302267 org.graalvm.collections.EconomicMapImpl.find
 184  0.06% 72.44%      14 302508 java.lang.String.intern
 185  0.06% 72.49%      14 302642 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 186  0.06% 72.55%      14 302680 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 187  0.06% 72.61%      14 302692 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 188  0.06% 72.66%      14 302779 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 189  0.06% 72.72%      14 302846 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 190  0.06% 72.77%      14 302860 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 191  0.06% 72.83%      14 303646 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 192  0.06% 72.88%      14 304621 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 193  0.06% 72.94%      14 304636 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doMultiplesRight
 194  0.05% 72.99%      13 300837 java.util.zip.ZipFile.read
 195  0.05% 73.04%      13 300873 java.lang.invoke.MethodHandleNatives.resolve
 196  0.05% 73.09%      13 301199 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare
 197  0.05% 73.15%      13 301474 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 198  0.05% 73.20%      13 301766 java.lang.Object.clone
 199  0.05% 73.25%      13 301852 org.graalvm.compiler.graph.NodeWorkList.<init>
 200  0.05% 73.30%      13 301856 com.oracle.truffle.r.nodes.control.IfNode.voidExecute
 201  0.05% 73.35%      13 301967 com.oracle.truffle.r.runtime.RArguments.getCall
 202  0.05% 73.40%      13 302421 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 203  0.05% 73.46%      13 302432 org.graalvm.compiler.graph.NodeClass.applyEdges
 204  0.05% 73.51%      13 302584 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 205  0.05% 73.56%      13 303433 com.oracle.truffle.r.nodes.access.AccessArgumentNode.execute
 206  0.05% 73.61%      13 304237 com.oracle.truffle.r.nodes.binary.BinaryMapBooleanFunctionNode.applyLogical
 207  0.05% 73.66%      13 304240 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 208  0.05% 73.71%      13 304414 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 209  0.05% 73.77%      13 304419 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 210  0.05% 73.81%      12 300250 java.lang.Class.forName0
 211  0.05% 73.86%      12 300298 java.util.zip.ZipFile.read
 212  0.05% 73.91%      12 301817 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
 213  0.05% 73.96%      12 301897 java.lang.Object.clone
 214  0.05% 74.00%      12 301956 sun.misc.Unsafe.allocateInstance
 215  0.05% 74.05%      12 302238 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 216  0.05% 74.10%      12 302290 java.lang.Object.clone
 217  0.05% 74.15%      12 302459 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 218  0.05% 74.19%      12 302622 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 219  0.05% 74.24%      12 302675 org.graalvm.compiler.nodes.LogicNegationNode.implies
 220  0.05% 74.29%      12 303445 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets
 221  0.05% 74.34%      12 304138 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 222  0.04% 74.38%      11 300338 java.security.AccessController.doPrivileged
 223  0.04% 74.42%      11 300819 java.util.zip.ZipFile.getEntry
 224  0.04% 74.47%      11 301205 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
 225  0.04% 74.51%      11 301649 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 226  0.04% 74.56%      11 301854 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 227  0.04% 74.60%      11 302133 com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute
 228  0.04% 74.64%      11 302353 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 229  0.04% 74.69%      11 302399 com.oracle.truffle.api.TruffleFile.checkAccess
 230  0.04% 74.73%      11 302550 org.graalvm.compiler.lir.asm.CompilationResultBuilder.emit
 231  0.04% 74.77%      11 302586 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 232  0.04% 74.82%      11 302690 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 233  0.04% 74.86%      11 302736 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 234  0.04% 74.91%      11 303119 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 235  0.04% 74.95%      11 303127 org.graalvm.compiler.graph.InputEdges.update
 236  0.04% 74.99%      11 304218 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 237  0.04% 75.04%      11 304406 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 238  0.04% 75.08%      11 304499 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
 239  0.04% 75.12%      10 300972 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 240  0.04% 75.16%      10 301534 com.oracle.truffle.r.nodes.function.ArgumentMatcher.permuteArguments
 241  0.04% 75.20%      10 301722 java.lang.Object.clone
 242  0.04% 75.24%      10 301811 sun.misc.Unsafe.getAddress
 243  0.04% 75.28%      10 301882 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute
 244  0.04% 75.32%      10 301933 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 245  0.04% 75.36%      10 301996 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 246  0.04% 75.40%      10 302106 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 247  0.04% 75.44%      10 302230 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call
 248  0.04% 75.48%      10 302419 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 249  0.04% 75.52%      10 302509 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 250  0.04% 75.56%      10 302564 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 251  0.04% 75.60%      10 302602 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 252  0.04% 75.64%      10 302605 org.graalvm.compiler.nodes.GraphEncoder.encode
 253  0.04% 75.68%      10 302630 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 254  0.04% 75.72%      10 302747 java.lang.System.identityHashCode
 255  0.04% 75.76%      10 302781 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 256  0.04% 75.80%      10 302804 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 257  0.04% 75.84%      10 302816 org.graalvm.compiler.nodes.ValueNode.stamp
 258  0.04% 75.88%      10 302837 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 259  0.04% 75.91%      10 302996 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 260  0.04% 75.95%      10 303004 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 261  0.04% 75.99%      10 303168 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks
 262  0.04% 76.03%      10 303290 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute
 263  0.04% 76.07%      10 303389 java.util.ArrayList.forEach
 264  0.04% 76.11%      10 303614 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 265  0.04% 76.15%       9 300919 org.antlr.v4.runtime.atn.ATNState.getNumberOfTransitions
 266  0.04% 76.18%       9 301699 java.lang.Class.isPrimitive
 267  0.04% 76.22%       9 301705 sun.misc.Unsafe.getAddress
 268  0.04% 76.26%       9 301738 sun.misc.Unsafe.getAddress
 269  0.04% 76.29%       9 302174 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 270  0.04% 76.33%       9 302310 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 271  0.04% 76.36%       9 302455 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 272  0.04% 76.40%       9 302567 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 273  0.04% 76.44%       9 302575 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 274  0.04% 76.47%       9 302597 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 275  0.04% 76.51%       9 302688 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 276  0.04% 76.54%       9 302715 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 277  0.04% 76.58%       9 302752 com.oracle.truffle.r.library.methods.MethodsListDispatch$R_getClassFromCache.callGetClassFromCache
 278  0.04% 76.61%       9 302826 java.lang.Object.clone
 279  0.04% 76.65%       9 302833 org.graalvm.compiler.lir.ValueConsumer.visitValue
 280  0.04% 76.69%       9 302864 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 281  0.04% 76.72%       9 302920 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 282  0.04% 76.76%       9 302931 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 283  0.04% 76.79%       9 303144 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 284  0.04% 76.83%       9 303201 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 285  0.04% 76.86%       9 303236 org.graalvm.collections.EconomicMapImpl.find
 286  0.04% 76.90%       9 303244 org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode
 287  0.04% 76.94%       9 303393 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 288  0.04% 76.97%       9 303408 org.graalvm.compiler.core.match.MatchPattern.matchShape
 289  0.04% 77.01%       9 304158 com.oracle.truffle.r.runtime.rng.mt.MersenneTwister.genrandDouble
 290  0.04% 77.04%       9 304172 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 291  0.04% 77.08%       9 304408 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 292  0.04% 77.11%       9 304639 com.oracle.truffle.r.nodes.binary.BinaryMapArithmeticFunctionNode.applyDouble
 293  0.03% 77.15%       8 300975 org.antlr.v4.runtime.atn.PredictionContext.getCachedContext
 294  0.03% 77.18%       8 300997 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 295  0.03% 77.21%       8 301180 java.lang.Class.isArray
 296  0.03% 77.24%       8 301678 sun.nio.fs.UnixException.rethrowAsIOException
 297  0.03% 77.27%       8 301870 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 298  0.03% 77.31%       8 302038 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0
 299  0.03% 77.34%       8 302118 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 300  0.03% 77.37%       8 302150 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 301  0.03% 77.40%       8 302233 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDefault
 302  0.03% 77.43%       8 302396 sun.misc.Unsafe.getAddress
 303  0.03% 77.46%       8 302470 org.graalvm.compiler.phases.common.DeoptimizationGroupingPhase.run
 304  0.03% 77.50%       8 302759 org.graalvm.collections.EconomicMapImpl.compareKeys
 305  0.03% 77.53%       8 302818 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 306  0.03% 77.56%       8 302908 org.graalvm.compiler.core.common.cfg.PrintableDominatorOptimizationProblem.<init>
 307  0.03% 77.59%       8 302964 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 308  0.03% 77.62%       8 302998 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
 309  0.03% 77.66%       8 303007 org.graalvm.collections.EconomicMapImpl.add
 310  0.03% 77.69%       8 303010 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 311  0.03% 77.72%       8 303028 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 312  0.03% 77.75%       8 303055 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 313  0.03% 77.78%       8 303086 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 314  0.03% 77.81%       8 303170 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 315  0.03% 77.85%       8 303368 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 316  0.03% 77.88%       8 303380 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 317  0.03% 77.91%       8 303423 org.graalvm.compiler.graph.NodeInputList.update
 318  0.03% 77.94%       8 303533 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 319  0.03% 77.97%       8 303541 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 320  0.03% 78.00%       8 303578 org.graalvm.compiler.graph.NodeClass.unregisterAtSuccessorsAsPredecessor
 321  0.03% 78.04%       8 304152 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 322  0.03% 78.07%       8 304224 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 323  0.03% 78.10%       8 304272 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 324  0.03% 78.13%       8 304313 com.oracle.truffle.r.runtime.context.RContext.getInstance
 325  0.03% 78.16%       8 304357 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 326  0.03% 78.20%       8 304705 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform
 327  0.03% 78.22%       7 300071 java.lang.ClassLoader.findBootstrapClass
 328  0.03% 78.25%       7 300150 java.lang.ClassLoader.findBootstrapClass
 329  0.03% 78.28%       7 300705 java.security.AccessController.doPrivileged
 330  0.03% 78.31%       7 300957 org.antlr.v4.runtime.atn.SingletonPredictionContext.equals
 331  0.03% 78.33%       7 301197 sun.misc.Unsafe.copyMemory
 332  0.03% 78.36%       7 301198 java.lang.Object.hashCode
 333  0.03% 78.39%       7 301393 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 334  0.03% 78.42%       7 301431 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 335  0.03% 78.45%       7 301525 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 336  0.03% 78.47%       7 301693 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 337  0.03% 78.50%       7 301715 java.lang.Object.clone
 338  0.03% 78.53%       7 301906 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 339  0.03% 78.56%       7 301988 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 340  0.03% 78.58%       7 302261 com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch
 341  0.03% 78.61%       7 302347 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 342  0.03% 78.64%       7 302375 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 343  0.03% 78.67%       7 302383 org.graalvm.collections.EconomicMapImpl.getHashIndex
 344  0.03% 78.70%       7 302511 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 345  0.03% 78.72%       7 302559 sun.misc.Unsafe.getAddress
 346  0.03% 78.75%       7 302561 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 347  0.03% 78.78%       7 302656 java.lang.Class.isArray
 348  0.03% 78.81%       7 302662 org.graalvm.compiler.nodes.ValueNode.stamp
 349  0.03% 78.84%       7 302844 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 350  0.03% 78.86%       7 302878 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 351  0.03% 78.89%       7 302897 org.graalvm.compiler.phases.common.FixReadsPhase.run
 352  0.03% 78.92%       7 302934 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 353  0.03% 78.95%       7 302961 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 354  0.03% 78.97%       7 302977 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 355  0.03% 79.00%       7 302979 org.graalvm.compiler.graph.NodeWorkList.addAll
 356  0.03% 79.03%       7 303053 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand
 357  0.03% 79.06%       7 303123 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 358  0.03% 79.09%       7 303164 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 359  0.03% 79.11%       7 303216 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 360  0.03% 79.14%       7 303229 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.replaceConstantInputs
 361  0.03% 79.17%       7 303249 org.graalvm.compiler.nodes.ValueNode.getStackKind
 362  0.03% 79.20%       7 303252 org.graalvm.compiler.lir.ValueConsumer.visitValue
 363  0.03% 79.22%       7 303338 org.graalvm.compiler.nodes.FrameState.duplicateModified
 364  0.03% 79.25%       7 303381 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 365  0.03% 79.28%       7 303395 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock
 366  0.03% 79.31%       7 303499 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markInInterval
 367  0.03% 79.34%       7 303586 org.graalvm.collections.EconomicMapImpl.put
 368  0.03% 79.36%       7 303731 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 369  0.03% 79.39%       7 304251 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 370  0.03% 79.42%       7 304454 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 371  0.02% 79.44%       6 300826 java.lang.ClassLoader.findLoadedClass0
 372  0.02% 79.47%       6 301529 com.oracle.truffle.r.runtime.data.RAttributable.<init>
 373  0.02% 79.49%       6 301743 sun.misc.Unsafe.allocateInstance
 374  0.02% 79.51%       6 301813 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 375  0.02% 79.54%       6 301950 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl.lambda$visit$2
 376  0.02% 79.56%       6 301952 com.oracle.truffle.r.nodes.builtin.casts.PipelineToCastNode$ArgumentFilterFactoryImpl$6.test
 377  0.02% 79.59%       6 301974 java.lang.Object.clone
 378  0.02% 79.61%       6 302128 sun.misc.Unsafe.getAddress
 379  0.02% 79.63%       6 302178 org.graalvm.compiler.nodes.GraphEncoder.writeOrderId
 380  0.02% 79.66%       6 302204 org.graalvm.compiler.graph.NodeClass.dataEquals
 381  0.02% 79.68%       6 302222 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 382  0.02% 79.71%       6 302256 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 383  0.02% 79.73%       6 302373 org.graalvm.compiler.nodes.ValueNode.stamp
 384  0.02% 79.75%       6 302460 java.util.ArrayDeque.addLast
 385  0.02% 79.78%       6 302471 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 386  0.02% 79.80%       6 302582 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 387  0.02% 79.82%       6 302615 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 388  0.02% 79.85%       6 302659 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 389  0.02% 79.87%       6 302668 com.oracle.truffle.r.runtime.RSource.fromSrcfile
 390  0.02% 79.90%       6 302785 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 391  0.02% 79.92%       6 302800 sun.misc.Unsafe.getAddress
 392  0.02% 79.94%       6 302888 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 393  0.02% 79.97%       6 302889 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.execute
 394  0.02% 79.99%       6 302932 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 395  0.02% 80.02%       6 302935 org.graalvm.compiler.graph.Node.replaceAtUsages
 396  0.02% 80.04%       6 302945 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 397  0.02% 80.06%       6 302959 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 398  0.02% 80.09%       6 302965 org.graalvm.compiler.nodes.IfNode.simplify
 399  0.02% 80.11%       6 302986 org.graalvm.compiler.nodes.IfNode.simplify
 400  0.02% 80.13%       6 302990 org.graalvm.compiler.virtual.nodes.VirtualObjectState.applyToNonVirtual
 401  0.02% 80.16%       6 303041 java.util.Arrays.copyOf
 402  0.02% 80.18%       6 303048 org.graalvm.compiler.core.common.util.AbstractTypeReader.readPacked
 403  0.02% 80.21%       6 303056 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 404  0.02% 80.23%       6 303134 java.lang.System.identityHashCode
 405  0.02% 80.25%       6 303169 org.graalvm.compiler.lir.ValueConsumer.visitValue
 406  0.02% 80.28%       6 303225 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 407  0.02% 80.30%       6 303233 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 408  0.02% 80.33%       6 303245 org.graalvm.compiler.replacements.PEGraphDecoder.doInline
 409  0.02% 80.35%       6 303284 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.initBlockData
 410  0.02% 80.37%       6 303355 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge
 411  0.02% 80.40%       6 303365 org.graalvm.collections.EconomicMapImpl.find
 412  0.02% 80.42%       6 303462 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 413  0.02% 80.44%       6 303543 org.graalvm.compiler.graph.Graph.register
 414  0.02% 80.47%       6 303570 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 415  0.02% 80.49%       6 303626 org.graalvm.compiler.nodes.AbstractBeginNode.prevBegin
 416  0.02% 80.52%       6 303680 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 417  0.02% 80.54%       6 303718 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 418  0.02% 80.56%       6 303754 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 419  0.02% 80.59%       6 303918 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 420  0.02% 80.61%       6 304182 org.graalvm.compiler.nodes.AbstractMergeNode$$Lambda$917.47109014.get$Lambda
 421  0.02% 80.63%       6 304187 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 422  0.02% 80.66%       6 304275 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 423  0.02% 80.68%       6 304556 com.oracle.truffle.r.runtime.Collections$NonRecursiveHashSet.add
 424  0.02% 80.70%       5 300870 java.util.zip.ZipFile.getEntryTime
 425  0.02% 80.72%       5 300950 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 426  0.02% 80.74%       5 300971 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 427  0.02% 80.76%       5 301068 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 428  0.02% 80.78%       5 301083 org.antlr.v4.runtime.atn.ParserATNSimulator.computeReachSet
 429  0.02% 80.80%       5 301338 com.oracle.truffle.r.runtime.context.RContext.getInstance
 430  0.02% 80.82%       5 301455 java.lang.System.identityHashCode
 431  0.02% 80.84%       5 301504 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 432  0.02% 80.86%       5 301663 com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess
 433  0.02% 80.88%       5 301675 sun.nio.fs.UnixFileSystemProvider.checkAccess
 434  0.02% 80.90%       5 301686 java.lang.Class.isPrimitive
 435  0.02% 80.92%       5 301850 org.antlr.v4.runtime.misc.FlexibleHashMap.get
 436  0.02% 80.94%       5 301884 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs
 437  0.02% 80.96%       5 301925 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 438  0.02% 80.98%       5 302068 org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply
 439  0.02% 81.00%       5 302072 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 440  0.02% 81.02%       5 302151 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 441  0.02% 81.04%       5 302214 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 442  0.02% 81.06%       5 302225 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 443  0.02% 81.08%       5 302309 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 444  0.02% 81.10%       5 302362 org.graalvm.compiler.nodes.LogicNode.implies
 445  0.02% 81.12%       5 302368 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 446  0.02% 81.14%       5 302410 sun.nio.fs.UnixNativeDispatcher.access
 447  0.02% 81.16%       5 302573 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 448  0.02% 81.18%       5 302577 java.lang.Class.getSuperclass
 449  0.02% 81.20%       5 302627 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 450  0.02% 81.22%       5 302634 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 451  0.02% 81.24%       5 302702 org.graalvm.collections.EconomicMapImpl.createHash
 452  0.02% 81.26%       5 302743 org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues
 453  0.02% 81.28%       5 302773 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.exit
 454  0.02% 81.30%       5 302787 org.graalvm.compiler.graph.NodeClass.createNodeDuplicates
 455  0.02% 81.32%       5 302796 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 456  0.02% 81.34%       5 302832 org.graalvm.compiler.lir.ValueConsumer.visitValue
 457  0.02% 81.36%       5 302863 org.graalvm.compiler.lir.NullCheckOptimizer.foldNullChecks
 458  0.02% 81.38%       5 302913 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.markOutInterval
 459  0.02% 81.40%       5 302950 org.graalvm.compiler.nodes.GraphDecoder.decode
 460  0.02% 81.42%       5 302951 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 461  0.02% 81.44%       5 303011 org.graalvm.compiler.graph.NodeClass.dataEquals
 462  0.02% 81.46%       5 303038 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 463  0.02% 81.48%       5 303058 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 464  0.02% 81.50%       5 303070 com.oracle.truffle.r.nodes.access.vector.RecursiveExtractSubscriptNode.apply
 465  0.02% 81.52%       5 303097 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 466  0.02% 81.54%       5 303143 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 467  0.02% 81.56%       5 303192 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 468  0.02% 81.58%       5 303197 java.util.TimSort.binarySort
 469  0.02% 81.60%       5 303203 jdk.vm.ci.hotspot.CompilerToVM.getHostClass
 470  0.02% 81.62%       5 303207 org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock
 471  0.02% 81.64%       5 303208 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 472  0.02% 81.66%       5 303212 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 473  0.02% 81.68%       5 303230 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 474  0.02% 81.70%       5 303242 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 475  0.02% 81.72%       5 303263 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.visitDominatorTreeDeferLoopExits
 476  0.02% 81.74%       5 303309 jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue
 477  0.02% 81.76%       5 303446 java.util.Arrays.copyOf
 478  0.02% 81.78%       5 303498 org.graalvm.compiler.lir.LIRFrameState.forEachState
 479  0.02% 81.80%       5 303539 com.oracle.truffle.r.nodes.control.BreakNode.execute
 480  0.02% 81.81%       5 303550 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 481  0.02% 81.83%       5 303633 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 482  0.02% 81.85%       5 303668 org.graalvm.compiler.nodes.ValueNode.stamp
 483  0.02% 81.87%       5 303671 com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute
 484  0.02% 81.89%       5 303721 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.fillKillSet
 485  0.02% 81.91%       5 303739 org.graalvm.collections.EconomicMapImpl.findLinear
 486  0.02% 81.93%       5 303849 org.graalvm.compiler.nodes.LogicNode.implies
 487  0.02% 81.95%       5 303996 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 488  0.02% 81.97%       5 304025 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 489  0.02% 81.99%       5 304140 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 490  0.02% 82.01%       5 304186 org.graalvm.collections.EconomicMapImpl.findLinear
 491  0.02% 82.03%       5 304227 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 492  0.02% 82.05%       5 304269 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 493  0.02% 82.07%       5 304347 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 494  0.02% 82.09%       5 304490 sun.misc.Unsafe.copyMemory
 495  0.02% 82.11%       5 304628 com.oracle.truffle.r.runtime.data.RIntVector$FastPathAccess.getIntImpl
 496  0.02% 82.13%       5 304696 sun.misc.Unsafe.freeMemory
 497  0.02% 82.15%       4 300691 java.net.URLClassLoader.findClass
 498  0.02% 82.16%       4 300780 java.security.AccessController.doPrivileged
 499  0.02% 82.18%       4 300831 java.util.jar.JarFile.getMetaInfEntryNames
 500  0.02% 82.20%       4 300856 java.lang.ClassLoader.loadClass
 501  0.02% 82.21%       4 300871 java.util.zip.ZipFile.getEntryBytes
 502  0.02% 82.23%       4 300946 org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext
 503  0.02% 82.24%       4 300952 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 504  0.02% 82.26%       4 301305 java.util.zip.ZipFile.getNextEntry
 505  0.02% 82.28%       4 301357 com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call
 506  0.02% 82.29%       4 301433 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 507  0.02% 82.31%       4 301783 java.lang.Object.clone
 508  0.02% 82.32%       4 301836 org.graalvm.compiler.nodes.GraphDecoder.decode
 509  0.02% 82.34%       4 301878 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callBoundary
 510  0.02% 82.36%       4 301918 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 511  0.02% 82.37%       4 301926 java.lang.Object.clone
 512  0.02% 82.39%       4 301980 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 513  0.02% 82.40%       4 302065 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 514  0.02% 82.42%       4 302085 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 515  0.02% 82.43%       4 302097 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 516  0.02% 82.45%       4 302273 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forcePromises
 517  0.02% 82.47%       4 302299 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 518  0.02% 82.48%       4 302313 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.build
 519  0.02% 82.50%       4 302337 com.oracle.truffle.object.ShapeImpl.getPropertyArray
 520  0.02% 82.51%       4 302360 org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget.isValid
 521  0.02% 82.53%       4 302513 sun.misc.Unsafe.getAddress
 522  0.02% 82.55%       4 302539 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 523  0.02% 82.56%       4 302553 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 524  0.02% 82.58%       4 302588 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 525  0.02% 82.59%       4 302612 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 526  0.02% 82.61%       4 302629 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 527  0.02% 82.63%       4 302650 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 528  0.02% 82.64%       4 302658 jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSupertype
 529  0.02% 82.66%       4 302660 java.util.AbstractCollection.addAll
 530  0.02% 82.67%       4 302709 org.graalvm.compiler.graph.Node.replaceAtUsages
 531  0.02% 82.69%       4 302713 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 532  0.02% 82.70%       4 302716 org.graalvm.compiler.graph.Node.<init>
 533  0.02% 82.72%       4 302745 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 534  0.02% 82.74%       4 302820 org.graalvm.compiler.core.LIRGenerationPhase.run
 535  0.02% 82.75%       4 302836 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 536  0.02% 82.77%       4 302884 org.graalvm.collections.EconomicMapImpl.compareKeys
 537  0.02% 82.78%       4 302911 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 538  0.02% 82.80%       4 302928 org.graalvm.collections.EconomicMapImpl.find
 539  0.02% 82.82%       4 302940 org.graalvm.compiler.graph.Node.safeDelete
 540  0.02% 82.83%       4 302953 org.graalvm.compiler.graph.Node.safeDelete
 541  0.02% 82.85%       4 302956 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 542  0.02% 82.86%       4 302963 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 543  0.02% 82.88%       4 302969 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 544  0.02% 82.90%       4 302973 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
 545  0.02% 82.91%       4 302975 org.graalvm.collections.EconomicMapImpl.find
 546  0.02% 82.93%       4 302985 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 547  0.02% 82.94%       4 302987 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 548  0.02% 82.96%       4 302995 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 549  0.02% 82.98%       4 303023 org.graalvm.compiler.phases.common.FixReadsPhase$RawConditionalEliminationVisitor.processEnd
 550  0.02% 82.99%       4 303026 com.oracle.truffle.r.nodes.control.RBlockNode.executeGeneric
 551  0.02% 83.01%       4 303029 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 552  0.02% 83.02%       4 303034 org.graalvm.compiler.nodes.ValueNode.updateStamp
 553  0.02% 83.04%       4 303052 org.graalvm.compiler.options.NestedBooleanOptionKey.getValue
 554  0.02% 83.05%       4 303063 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 555  0.02% 83.07%       4 303066 org.graalvm.compiler.nodes.spi.NodeWithState.states
 556  0.02% 83.09%       4 303096 org.graalvm.collections.EconomicMapImpl.getHashIndex
 557  0.02% 83.10%       4 303115 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 558  0.02% 83.12%       4 303126 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 559  0.02% 83.13%       4 303130 org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.run
 560  0.02% 83.15%       4 303145 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 561  0.02% 83.17%       4 303149 org.graalvm.compiler.java.BciBlockMapping.fixLoopBits
 562  0.02% 83.18%       4 303171 java.util.BitSet.clone
 563  0.02% 83.20%       4 303177 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.foldPendingTest
 564  0.02% 83.21%       4 303213 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewStamp
 565  0.02% 83.23%       4 303314 com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode
 566  0.02% 83.25%       4 303344 org.graalvm.compiler.graph.NodeClass.valueNumber
 567  0.02% 83.26%       4 303346 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute
 568  0.02% 83.28%       4 303357 com.oracle.truffle.r.nodes.access.vector.SearchFirstStringNode.searchGeneric
 569  0.02% 83.29%       4 303422 org.graalvm.compiler.lir.gen.LIRGenerator$BlockScopeImpl.access$600
 570  0.02% 83.31%       4 303448 com.oracle.truffle.api.object.Location.get
 571  0.02% 83.32%       4 303450 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 572  0.02% 83.34%       4 303482 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 573  0.02% 83.36%       4 303496 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand
 574  0.02% 83.37%       4 303524 com.oracle.truffle.r.nodes.access.ConstantNode.execute
 575  0.02% 83.39%       4 303574 org.graalvm.compiler.graph.NodeClass.applyEdges
 576  0.02% 83.40%       4 303584 org.graalvm.compiler.nodes.java.LoadFieldNode.canonical
 577  0.02% 83.42%       4 303604 com.oracle.truffle.r.nodes.function.visibility.SetVisibilityNode.executeAfterCall
 578  0.02% 83.44%       4 303674 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>
 579  0.02% 83.45%       4 303678 org.graalvm.compiler.graph.NodeClass.applyEdges
 580  0.02% 83.47%       4 303682 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 581  0.02% 83.48%       4 303693 org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness
 582  0.02% 83.50%       4 303757 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 583  0.02% 83.52%       4 303824 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 584  0.02% 83.53%       4 304135 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 585  0.02% 83.55%       4 304180 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 586  0.02% 83.56%       4 304181 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 587  0.02% 83.58%       4 304217 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getDouble
 588  0.02% 83.59%       4 304301 org.graalvm.compiler.core.common.cfg.DominatorOptimizationProblem.setDominatorPath
 589  0.02% 83.61%       4 304330 com.oracle.truffle.r.runtime.data.nodes.VectorAccess.getInt
 590  0.02% 83.63%       4 304352 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 591  0.02% 83.64%       4 304358 org.graalvm.compiler.lir.LIRFrameState.forEachState
 592  0.02% 83.66%       4 304368 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 593  0.02% 83.67%       4 304396 com.oracle.truffle.r.ffi.impl.common.JavaUpCallsRFFIImpl.Rf_allocMatrix
 594  0.02% 83.69%       4 304403 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 595  0.02% 83.71%       4 304426 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 596  0.02% 83.72%       4 304434 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doSameLength
 597  0.02% 83.74%       4 304634 com.oracle.truffle.r.runtime.data.RDataFactory.createDoubleVector
 598  0.02% 83.75%       4 304803 com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute
 599  0.01% 83.77%       3 300278 java.lang.ClassLoader.findLoadedClass0
 600  0.01% 83.78%       3 300698 com.oracle.truffle.r.runtime.RRuntime.<clinit>
 601  0.01% 83.79%       3 300719 java.lang.ClassLoader.findLoadedClass0
 602  0.01% 83.80%       3 300821 java.lang.Class.getDeclaredFields0
 603  0.01% 83.81%       3 300938 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAddImpl
 604  0.01% 83.83%       3 300953 org.antlr.v4.runtime.misc.FlexibleHashMap.get
 605  0.01% 83.84%       3 300962 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 606  0.01% 83.85%       3 300963 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 607  0.01% 83.86%       3 300964 org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState
 608  0.01% 83.87%       3 300973 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 609  0.01% 83.88%       3 301001 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 610  0.01% 83.90%       3 301016 sun.misc.Unsafe.setMemory
 611  0.01% 83.91%       3 301024 java.lang.Class.getModifiers
 612  0.01% 83.92%       3 301061 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 613  0.01% 83.93%       3 301085 org.antlr.v4.runtime.misc.FlexibleHashMap.values
 614  0.01% 83.94%       3 301086 java.util.HashMap.putVal
 615  0.01% 83.96%       3 301133 com.oracle.truffle.r.runtime.nodes.RBaseNode.isRSyntaxNode
 616  0.01% 83.97%       3 301211 com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive
 617  0.01% 83.98%       3 301291 java.util.TimSort.mergeHi
 618  0.01% 83.99%       3 301316 com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue
 619  0.01% 84.00%       3 301324 com.oracle.truffle.api.nodes.Node.deepCopy
 620  0.01% 84.02%       3 301395 org.antlr.v4.runtime.atn.PredictionContext.mergeSingletons
 621  0.01% 84.03%       3 301420 com.oracle.truffle.r.runtime.nodes.RNode.voidExecute
 622  0.01% 84.04%       3 301467 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 623  0.01% 84.05%       3 301512 org.graalvm.compiler.java.BytecodeParser.parseAndInlineCallee
 624  0.01% 84.06%       3 301519 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 625  0.01% 84.08%       3 301539 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.setObjectAndInvalidate
 626  0.01% 84.09%       3 301652 java.lang.Object.hashCode
 627  0.01% 84.10%       3 301671 java.lang.Class.isPrimitive
 628  0.01% 84.11%       3 301757 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 629  0.01% 84.12%       3 301770 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
 630  0.01% 84.14%       3 301799 org.antlr.v4.runtime.atn.PredictionContext.merge
 631  0.01% 84.15%       3 301821 org.graalvm.compiler.nodes.GraphDecoder.decode
 632  0.01% 84.16%       3 301844 org.graalvm.compiler.nodes.java.LoadFieldNode.canonical
 633  0.01% 84.17%       3 301883 org.graalvm.compiler.nodes.FrameState.setOuterFrameState
 634  0.01% 84.18%       3 301908 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 635  0.01% 84.19%       3 301940 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 636  0.01% 84.21%       3 301953 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 637  0.01% 84.22%       3 302070 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects
 638  0.01% 84.23%       3 302113 sun.nio.cs.UTF_8.updatePositions
 639  0.01% 84.24%       3 302145 java.lang.Object.clone
 640  0.01% 84.25%       3 302232 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper
 641  0.01% 84.27%       3 302250 com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3
 642  0.01% 84.28%       3 302264 jdk.vm.ci.hotspot.CompilerToVM.asReflectionField
 643  0.01% 84.29%       3 302270 org.graalvm.compiler.nodes.ConstantNode.forConstant
 644  0.01% 84.30%       3 302288 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode
 645  0.01% 84.31%       3 302292 com.oracle.truffle.r.nodes.attributes.GetFixedPropertyNode.getAttrFallback
 646  0.01% 84.33%       3 302302 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks
 647  0.01% 84.34%       3 302315 org.graalvm.compiler.lir.dfa.LocationMarker.build
 648  0.01% 84.35%       3 302317 com.oracle.truffle.r.nodes.function.opt.OptVariablePromiseBaseNode.execute
 649  0.01% 84.36%       3 302333 com.oracle.truffle.r.nodes.function.RCallNode.callGroupGeneric
 650  0.01% 84.37%       3 302340 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.access$100
 651  0.01% 84.39%       3 302376 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState
 652  0.01% 84.40%       3 302404 org.graalvm.compiler.nodes.java.InstanceOfNode.implies
 653  0.01% 84.41%       3 302414 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 654  0.01% 84.42%       3 302442 com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute
 655  0.01% 84.43%       3 302477 java.lang.Object.clone
 656  0.01% 84.45%       3 302497 org.graalvm.compiler.nodes.calc.AddNode.canonical
 657  0.01% 84.46%       3 302499 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 658  0.01% 84.47%       3 302514 java.lang.Object.clone
 659  0.01% 84.48%       3 302517 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 660  0.01% 84.49%       3 302522 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 661  0.01% 84.50%       3 302547 org.graalvm.compiler.graph.Node.<init>
 662  0.01% 84.52%       3 302549 org.graalvm.compiler.nodes.StructuredGraph.getBytecodeSize
 663  0.01% 84.53%       3 302562 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 664  0.01% 84.54%       3 302570 org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant
 665  0.01% 84.55%       3 302578 org.graalvm.collections.EconomicMapImpl.find
 666  0.01% 84.56%       3 302594 org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>
 667  0.01% 84.58%       3 302600 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualAtLoopExit
 668  0.01% 84.59%       3 302625 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 669  0.01% 84.60%       3 302628 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance$GuardOrder.resortGuards
 670  0.01% 84.61%       3 302649 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 671  0.01% 84.62%       3 302676 com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNode.doObject
 672  0.01% 84.64%       3 302678 org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject
 673  0.01% 84.65%       3 302708 org.graalvm.compiler.core.common.type.ArithmeticStamp.<init>
 674  0.01% 84.66%       3 302711 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 675  0.01% 84.67%       3 302769 org.graalvm.compiler.phases.common.FloatingReadPhase$MemoryMapImpl.getLastLocationAccess
 676  0.01% 84.68%       3 302791 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 677  0.01% 84.70%       3 302840 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 678  0.01% 84.71%       3 302854 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 679  0.01% 84.72%       3 302855 org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator$Allocator.assignStackSlots
 680  0.01% 84.73%       3 302856 org.graalvm.compiler.lir.ValueConsumer.visitValue
 681  0.01% 84.74%       3 302872 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.<init>
 682  0.01% 84.76%       3 302899 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 683  0.01% 84.77%       3 302906 org.graalvm.compiler.lir.constopt.VariableMap.forEach
 684  0.01% 84.78%       3 302949 org.graalvm.compiler.graph.Graph.grow
 685  0.01% 84.79%       3 302967 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 686  0.01% 84.80%       3 302974 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 687  0.01% 84.81%       3 302978 org.graalvm.compiler.graph.Node.replaceAtUsages
 688  0.01% 84.83%       3 302989 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 689  0.01% 84.84%       3 303014 org.graalvm.compiler.replacements.SnippetTemplate.replaceMemoryUsages
 690  0.01% 84.85%       3 303016 com.oracle.truffle.api.object.Location.get
 691  0.01% 84.86%       3 303054 sun.nio.fs.UnixFileSystemProvider.checkAccess
 692  0.01% 84.87%       3 303062 org.graalvm.compiler.graph.NodeClass.updateEdgeListCopy
 693  0.01% 84.89%       3 303089 org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder.processBlock
 694  0.01% 84.90%       3 303100 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 695  0.01% 84.91%       3 303102 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugin.execute
 696  0.01% 84.92%       3 303105 org.graalvm.compiler.java.LocalLiveness.computeLiveness
 697  0.01% 84.93%       3 303120 org.graalvm.compiler.replacements.nodes.Plugin_ArrayEqualsNode_equals.execute
 698  0.01% 84.95%       3 303152 org.graalvm.compiler.nodes.calc.IntegerLessThanNode.canonical
 699  0.01% 84.96%       3 303161 java.util.HashMap.putVal
 700  0.01% 84.97%       3 303162 org.graalvm.compiler.core.amd64.AMD64CompressAddressLowering.improve
 701  0.01% 84.98%       3 303173 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 702  0.01% 84.99%       3 303176 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 703  0.01% 85.01%       3 303178 org.graalvm.compiler.lir.dfa.RegStackValueSet.equals
 704  0.01% 85.02%       3 303179 org.graalvm.compiler.lir.LIRInstructionClass.hasState
 705  0.01% 85.03%       3 303182 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 706  0.01% 85.04%       3 303188 org.graalvm.collections.EconomicMapImpl.getHashIndex
 707  0.01% 85.05%       3 303194 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 708  0.01% 85.06%       3 303204 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray
 709  0.01% 85.08%       3 303210 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 710  0.01% 85.09%       3 303217 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 711  0.01% 85.10%       3 303218 org.graalvm.compiler.nodes.type.StampTool.meetOrNull
 712  0.01% 85.11%       3 303221 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 713  0.01% 85.12%       3 303222 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.getMetaAccess
 714  0.01% 85.14%       3 303259 com.oracle.truffle.r.nodes.function.PostProcessArgumentsNode.execute
 715  0.01% 85.15%       3 303264 com.oracle.truffle.r.runtime.context.RContext.getInstance
 716  0.01% 85.16%       3 303273 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove
 717  0.01% 85.17%       3 303308 com.oracle.truffle.r.nodes.unary.FilterNode.evalCondition
 718  0.01% 85.18%       3 303313 com.oracle.truffle.r.nodes.function.signature.MissingNode.execute
 719  0.01% 85.20%       3 303316 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 720  0.01% 85.21%       3 303318 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 721  0.01% 85.22%       3 303335 com.oracle.truffle.r.nodes.function.PromiseNode$PromisedNode.execute
 722  0.01% 85.23%       3 303336 org.graalvm.collections.EconomicMapImpl.findLinear
 723  0.01% 85.24%       3 303349 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 724  0.01% 85.26%       3 303388 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 725  0.01% 85.27%       3 303403 org.graalvm.compiler.phases.common.AddressLoweringPhase.run
 726  0.01% 85.28%       3 303413 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 727  0.01% 85.29%       3 303416 org.graalvm.compiler.nodes.GraphDecoder.handleLoopExplosionEnd
 728  0.01% 85.30%       3 303418 org.graalvm.compiler.nodes.IfNode.setCondition
 729  0.01% 85.32%       3 303429 com.oracle.truffle.r.nodes.unary.ChainedCastNode.execute
 730  0.01% 85.33%       3 303432 com.oracle.truffle.r.runtime.VirtualEvalFrame.setBoolean
 731  0.01% 85.34%       3 303437 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 732  0.01% 85.35%       3 303438 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 733  0.01% 85.36%       3 303444 org.graalvm.compiler.lir.alloc.lsra.Interval$UsePosList.<init>
 734  0.01% 85.37%       3 303454 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 735  0.01% 85.39%       3 303466 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 736  0.01% 85.40%       3 303476 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.mergeObjectStates
 737  0.01% 85.41%       3 303479 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 738  0.01% 85.42%       3 303480 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 739  0.01% 85.43%       3 303485 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 740  0.01% 85.45%       3 303489 java.util.Collections$UnmodifiableCollection$1.hasNext
 741  0.01% 85.46%       3 303492 com.oracle.truffle.r.nodes.unary.ConditionalMapNode.executeRest
 742  0.01% 85.47%       3 303494 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.createMove
 743  0.01% 85.48%       3 303523 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 744  0.01% 85.49%       3 303529 org.graalvm.compiler.phases.common.WriteBarrierAdditionPhase.run
 745  0.01% 85.51%       3 303566 org.graalvm.compiler.lir.EdgeMoveOptimizer$Optimizer.optimizeMovesAtBlockEnd
 746  0.01% 85.52%       3 303606 com.oracle.truffle.r.nodes.access.vector.PositionCheckNode.execute
 747  0.01% 85.53%       3 303607 org.graalvm.compiler.graph.NodeClass.registerAtSuccessorsAsPredecessor
 748  0.01% 85.54%       3 303610 org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner
 749  0.01% 85.55%       3 303617 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 750  0.01% 85.57%       3 303624 com.oracle.truffle.r.nodes.binary.BinaryBooleanScalarNode$LogicalScalarCastNode.castImpl
 751  0.01% 85.58%       3 303635 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 752  0.01% 85.59%       3 303637 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 753  0.01% 85.60%       3 303648 sun.text.normalizer.NormalizerBase$NFDMode.normalize
 754  0.01% 85.61%       3 303663 org.graalvm.compiler.phases.common.inlining.walker.InliningIterator.queueSuccessors
 755  0.01% 85.63%       3 303670 com.oracle.truffle.r.nodes.function.WrapArgumentNode.handleShareable
 756  0.01% 85.64%       3 303690 org.graalvm.compiler.lir.ValueConsumer.visitValue
 757  0.01% 85.65%       3 303716 java.util.Collections$UnmodifiableCollection$1.hasNext
 758  0.01% 85.66%       3 303726 com.oracle.truffle.r.nodes.function.PromiseNode$InlineVarArgsNode.evaluateArgumentsExplode
 759  0.01% 85.67%       3 303734 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 760  0.01% 85.68%       3 303742 org.graalvm.compiler.nodes.StructuredGraph$1$1.hasNext
 761  0.01% 85.70%       3 303753 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 762  0.01% 85.71%       3 303775 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 763  0.01% 85.72%       3 303783 org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical
 764  0.01% 85.73%       3 303798 java.lang.String.intern
 765  0.01% 85.74%       3 303834 org.graalvm.compiler.nodes.GraphDecoder.cleanupGraph
 766  0.01% 85.76%       3 303839 org.graalvm.compiler.loop.LoopFragment.computeNodes
 767  0.01% 85.77%       3 303855 com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute
 768  0.01% 85.78%       3 303906 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 769  0.01% 85.79%       3 303915 org.graalvm.collections.EconomicMapImpl.find
 770  0.01% 85.80%       3 303926 org.graalvm.compiler.nodes.calc.BinaryArithmeticNode.getOp
 771  0.01% 85.82%       3 303942 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 772  0.01% 85.83%       3 303948 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 773  0.01% 85.84%       3 303952 org.graalvm.compiler.core.common.type.AbstractObjectStamp.meet
 774  0.01% 85.85%       3 303972 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 775  0.01% 85.86%       3 303975 org.graalvm.compiler.graph.NodeClass.createNodeDuplicates
 776  0.01% 85.88%       3 303978 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 777  0.01% 85.89%       3 304005 org.graalvm.compiler.core.common.type.Stamp.isEmpty
 778  0.01% 85.90%       3 304022 org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph
 779  0.01% 85.91%       3 304039 org.graalvm.compiler.java.BciBlockMapping.iterateOverBytecodes
 780  0.01% 85.92%       3 304046 org.graalvm.compiler.graph.NodeInputList.update
 781  0.01% 85.94%       3 304058 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 782  0.01% 85.95%       3 304063 java.util.Hashtable.get
 783  0.01% 85.96%       3 304121 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 784  0.01% 85.97%       3 304179 org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock
 785  0.01% 85.98%       3 304213 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 786  0.01% 85.99%       3 304222 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 787  0.01% 86.01%       3 304228 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 788  0.01% 86.02%       3 304233 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 789  0.01% 86.03%       3 304234 org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder
 790  0.01% 86.04%       3 304235 org.graalvm.compiler.core.match.MatchPattern.matchShape
 791  0.01% 86.05%       3 304239 org.graalvm.compiler.graph.Graph.findDuplicate
 792  0.01% 86.07%       3 304248 org.graalvm.compiler.nodes.calc.ConditionalNode.canonical
 793  0.01% 86.08%       3 304254 org.graalvm.compiler.nodes.IfNode.simplify
 794  0.01% 86.09%       3 304271 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
 795  0.01% 86.10%       3 304276 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 796  0.01% 86.11%       3 304283 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 797  0.01% 86.13%       3 304288 org.graalvm.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper
 798  0.01% 86.14%       3 304296 com.oracle.truffle.r.nodes.builtin.base.Combine.createResultVector
 799  0.01% 86.15%       3 304308 com.oracle.truffle.r.nodes.builtin.base.Sample.doSample
 800  0.01% 86.16%       3 304314 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 801  0.01% 86.17%       3 304319 com.oracle.truffle.r.nodes.unary.UnaryArithmeticReduceNode.doInt
 802  0.01% 86.19%       3 304337 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 803  0.01% 86.20%       3 304344 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
 804  0.01% 86.21%       3 304346 com.oracle.truffle.r.library.stats.RandFunctionsNodes$RandFunctionDoubleExecutorNode.cached
 805  0.01% 86.22%       3 304377 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 806  0.01% 86.23%       3 304409 com.oracle.truffle.r.nodes.builtin.base.IsNA.isNACached
 807  0.01% 86.24%       3 304468 org.graalvm.compiler.phases.common.CanonicalizerPhase.run
 808  0.01% 86.26%       3 304523 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 809  0.01% 86.27%       3 304532 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 810  0.01% 86.28%       3 304612 org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree
 811  0.01% 86.29%       3 304648 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode$10.perform
 812  0.01% 86.30%       3 304714 jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType
CPU SAMPLES END
