JAVA PROFILE 1.0.1, created Sat Jan 23 20:53:46 2021

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000018d, id = 200001, name="main", group="main")
THREAD START (obj=50000899, id = 200004, name="TruffleCompilerThread-26", group="main")
THREAD START (obj=5000018d, id = 200005, name="nfi-gc", group="main")
THREAD START (obj=50000931, id = 200006, name="HotSpotGraalManagement Bean Registration", group="main")
THREAD START (obj=5000018d, id = 200007, name="Native-Reference-Queue-Worker", group="main")
THREAD END (id = 200004)
THREAD START (obj=50000899, id = 200008, name="TruffleCompilerThread-30", group="main")
THREAD START (obj=50000899, id = 200009, name="TruffleCompilerThread-31", group="main")
THREAD START (obj=50000899, id = 200010, name="TruffleCompilerThread-32", group="main")
THREAD START (obj=50000899, id = 200011, name="TruffleCompilerThread-33", group="main")
THREAD START (obj=50000899, id = 200012, name="TruffleCompilerThread-34", group="main")
THREAD START (obj=50000899, id = 200013, name="TruffleCompilerThread-35", group="main")
THREAD START (obj=50000899, id = 200014, name="TruffleCompilerThread-36", group="main")
THREAD START (obj=50000899, id = 200015, name="TruffleCompilerThread-37", group="main")
THREAD END (id = 200008)
THREAD END (id = 200009)
THREAD END (id = 200012)
THREAD START (obj=50000899, id = 200016, name="TruffleCompilerThread-38", group="main")
THREAD START (obj=50000899, id = 200017, name="TruffleCompilerThread-39", group="main")
THREAD START (obj=50000899, id = 200018, name="TruffleCompilerThread-40", group="main")
THREAD START (obj=50000899, id = 200019, name="TruffleCompilerThread-41", group="main")
THREAD START (obj=50000899, id = 200020, name="TruffleCompilerThread-42", group="main")
THREAD END (id = 200013)
THREAD END (id = 200010)
THREAD END (id = 200015)
THREAD END (id = 200011)
THREAD END (id = 200019)
THREAD END (id = 200018)
THREAD END (id = 200017)
THREAD END (id = 200020)
THREAD END (id = 200014)
THREAD START (obj=50000899, id = 200021, name="TruffleCompilerThread-43", group="main")
THREAD START (obj=50000899, id = 200022, name="TruffleCompilerThread-44", group="main")
THREAD START (obj=50000899, id = 200023, name="TruffleCompilerThread-45", group="main")
THREAD START (obj=5000018d, id = 200024, name="process reaper", group="system")
THREAD START (obj=50003522, id = 200025, name="system", group="main")
THREAD END (id = 200025)
THREAD START (obj=50003522, id = 200026, name="system", group="main")
THREAD END (id = 200026)
THREAD END (id = 200016)
THREAD START (obj=50000899, id = 200027, name="TruffleCompilerThread-49", group="main")
THREAD START (obj=50000899, id = 200028, name="TruffleCompilerThread-50", group="main")
THREAD START (obj=50000899, id = 200029, name="TruffleCompilerThread-51", group="main")
THREAD START (obj=50000899, id = 200030, name="TruffleCompilerThread-52", group="main")
THREAD START (obj=50000899, id = 200031, name="TruffleCompilerThread-53", group="main")
THREAD START (obj=50000899, id = 200032, name="TruffleCompilerThread-54", group="main")
THREAD END (id = 200023)
THREAD END (id = 200022)
THREAD END (id = 200021)
THREAD END (id = 200028)
THREAD END (id = 200029)
THREAD END (id = 200030)
THREAD START (obj=50000899, id = 200033, name="TruffleCompilerThread-55", group="main")
THREAD START (obj=50000899, id = 200034, name="TruffleCompilerThread-56", group="main")
THREAD START (obj=50000899, id = 200035, name="TruffleCompilerThread-57", group="main")
THREAD END (id = 200032)
THREAD START (obj=50000899, id = 200036, name="TruffleCompilerThread-58", group="main")
THREAD START (obj=50000899, id = 200037, name="TruffleCompilerThread-59", group="main")
THREAD START (obj=50000899, id = 200038, name="TruffleCompilerThread-60", group="main")
THREAD START (obj=50000899, id = 200039, name="TruffleCompilerThread-61", group="main")
THREAD START (obj=50000899, id = 200040, name="TruffleCompilerThread-62", group="main")
THREAD START (obj=50000899, id = 200041, name="TruffleCompilerThread-63", group="main")
THREAD START (obj=50000899, id = 200042, name="TruffleCompilerThread-64", group="main")
THREAD START (obj=50003522, id = 200043, name="Thread-36", group="main")
THREAD START (obj=5000018d, id = 200044, name="pool-1-thread-1", group="main")
THREAD END (id = 200031)
THREAD END (id = 200040)
THREAD END (id = 200042)
THREAD END (id = 200033)
THREAD END (id = 200038)
THREAD END (id = 200041)
THREAD END (id = 200035)
THREAD END (id = 200039)
THREAD END (id = 200027)
THREAD END (id = 200036)
THREAD START (obj=50000899, id = 200045, name="TruffleCompilerThread-67", group="main")
THREAD START (obj=50000899, id = 200046, name="TruffleCompilerThread-68", group="main")
THREAD START (obj=50000899, id = 200047, name="TruffleCompilerThread-69", group="main")
THREAD START (obj=50000899, id = 200048, name="TruffleCompilerThread-70", group="main")
THREAD START (obj=50000899, id = 200049, name="TruffleCompilerThread-71", group="main")
THREAD START (obj=50000899, id = 200050, name="TruffleCompilerThread-72", group="main")
THREAD START (obj=50000899, id = 200051, name="TruffleCompilerThread-73", group="main")
THREAD START (obj=50000899, id = 200052, name="TruffleCompilerThread-74", group="main")
THREAD START (obj=50000899, id = 200053, name="TruffleCompilerThread-75", group="main")
THREAD START (obj=50000899, id = 200054, name="TruffleCompilerThread-76", group="main")
THREAD END (id = 200051)
THREAD END (id = 200047)
THREAD END (id = 200045)
THREAD START (obj=50000899, id = 200055, name="TruffleCompilerThread-77", group="main")
THREAD START (obj=50000899, id = 200056, name="TruffleCompilerThread-78", group="main")
THREAD START (obj=50000899, id = 200057, name="TruffleCompilerThread-79", group="main")
THREAD END (id = 200046)
THREAD START (obj=50000899, id = 200058, name="TruffleCompilerThread-80", group="main")
THREAD END (id = 200054)
THREAD START (obj=50000899, id = 200059, name="TruffleCompilerThread-81", group="main")
THREAD END (id = 200056)
THREAD END (id = 200049)
THREAD END (id = 200052)
THREAD END (id = 200034)
THREAD END (id = 200059)
THREAD START (obj=50000899, id = 200060, name="TruffleCompilerThread-82", group="main")
THREAD START (obj=50000899, id = 200061, name="TruffleCompilerThread-83", group="main")
THREAD START (obj=50000899, id = 200062, name="TruffleCompilerThread-84", group="main")
THREAD END (id = 200057)
THREAD END (id = 200055)
THREAD END (id = 200048)
THREAD START (obj=50000899, id = 200063, name="TruffleCompilerThread-85", group="main")
THREAD END (id = 200050)
THREAD START (obj=50000899, id = 200064, name="TruffleCompilerThread-86", group="main")
THREAD START (obj=50000899, id = 200065, name="TruffleCompilerThread-87", group="main")
THREAD END (id = 200053)
THREAD START (obj=50000899, id = 200066, name="TruffleCompilerThread-88", group="main")
THREAD START (obj=50000899, id = 200067, name="TruffleCompilerThread-89", group="main")
THREAD START (obj=50000899, id = 200068, name="TruffleCompilerThread-90", group="main")
THREAD START (obj=50000899, id = 200069, name="TruffleCompilerThread-91", group="main")
THREAD END (id = 200024)
THREAD END (id = 200060)
THREAD END (id = 200068)
THREAD START (obj=50000899, id = 200070, name="TruffleCompilerThread-92", group="main")
THREAD START (obj=50000899, id = 200071, name="TruffleCompilerThread-93", group="main")
THREAD END (id = 200037)
THREAD END (id = 200063)
THREAD END (id = 200058)
THREAD END (id = 200065)
THREAD END (id = 200061)
THREAD END (id = 200066)
THREAD END (id = 200062)
THREAD END (id = 200067)
THREAD END (id = 200070)
THREAD END (id = 200064)
THREAD START (obj=50000899, id = 200072, name="TruffleCompilerThread-94", group="main")
THREAD END (id = 200072)
THREAD END (id = 200071)
THREAD START (obj=50000899, id = 200073, name="TruffleCompilerThread-95", group="main")
THREAD START (obj=50000899, id = 200074, name="TruffleCompilerThread-96", group="main")
THREAD END (id = 200074)
THREAD END (id = 200073)
THREAD START (obj=50000899, id = 200075, name="TruffleCompilerThread-97", group="main")
THREAD END (id = 200075)
THREAD START (obj=5000018d, id = 200077, name="SIGINT handler", group="system")
THREAD START (obj=50000899, id = 200078, name="Thread-0", group="main")
THREAD END (id = 200078)
THREAD START (obj=5000018d, id = 200079, name="Thread-1", group="main")
THREAD END (id = 200079)
THREAD START (obj=5000018d, id = 200080, name="Thread-2", group="main")
THREAD END (id = 200080)
THREAD END (id = 200077)
TRACE 302801:
	java.io.FileInputStream.open0(FileInputStream.java:Unknown line)
	java.io.FileInputStream.open(FileInputStream.java:195)
	java.io.FileInputStream.<init>(FileInputStream.java:138)
	com.oracle.truffle.r.launcher.REPL$EventLoopThread.run(REPL.java:318)
TRACE 301907:
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:Unknown line)
	com.oracle.truffle.nfi.impl.NFIContext.executePrimitive(NFIContext.java:267)
	com.oracle.truffle.nfi.impl.LibFFISignature$CachedSignatureInfo.execute(LibFFISignature.java:244)
	com.oracle.truffle.nfi.impl.FunctionExecuteNode$SignatureExecuteNode.execute(FunctionExecuteNode.java:137)
TRACE 302287:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:755)
TRACE 301719:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:1022)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:899)
TRACE 301678:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:141)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:286)
TRACE 301673:
	jdk.vm.ci.hotspot.CompilerToVM.installCode(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.installCode(HotSpotCodeCacheProvider.java:137)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:194)
	org.graalvm.compiler.core.target.Backend.createInstalledCode(Backend.java:147)
TRACE 302564:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:90)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 301495:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getModifiers(HotSpotResolvedObjectTypeImpl.java:144)
TRACE 301243:
	jdk.vm.ci.hotspot.CompilerToVM.resolveTypeInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:728)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:671)
	org.graalvm.compiler.hotspot.meta.HotSpotJITClassInitializationPlugin.loadReferencedType(HotSpotJITClassInitializationPlugin.java:73)
TRACE 301374:
	jdk.vm.ci.hotspot.CompilerToVM.constantPoolRemapInstructionOperandFromCache(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:704)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:671)
	org.graalvm.compiler.hotspot.meta.HotSpotJITClassInitializationPlugin.loadReferencedType(HotSpotJITClassInitializationPlugin.java:73)
TRACE 302073:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 301704:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.Arrays.hashCode(Arrays.java:4146)
	java.util.Objects.hash(Objects.java:128)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.hashCode(ResolvedJavaMethodBytecode.java:133)
TRACE 301306:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSubklass(HotSpotResolvedObjectTypeImpl.java:250)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:207)
TRACE 301274:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:478)
	jdk.vm.ci.meta.ResolvedJavaType.resolveConcreteMethod(ResolvedJavaType.java:262)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:151)
TRACE 301304:
	jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupMethod(HotSpotConstantPool.java:581)
	org.graalvm.compiler.java.BytecodeParser.lookupMethodInPool(BytecodeParser.java:4345)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4339)
TRACE 303604:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:196)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:754)
TRACE 302586:
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:140)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
TRACE 301351:
	java.lang.System.identityHashCode(System.java:Unknown line)
	jdk.vm.ci.hotspot.DirectHotSpotObjectConstantImpl.getIdentityHashCode(DirectHotSpotObjectConstantImpl.java:66)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.hashCode(HotSpotObjectConstantImpl.java:169)
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:558)
TRACE 300806:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:719)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getHolder(HotSpotResolvedJavaMethodImpl.java:98)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.fromMetaspace(HotSpotResolvedJavaMethodImpl.java:116)
TRACE 301826:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
	org.graalvm.compiler.options.OptionValues.get(OptionValues.java:117)
TRACE 301265:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:592)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:156)
TRACE 301246:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:712)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:699)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 302137:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:266)
	java.lang.Exception.<init>(Exception.java:66)
TRACE 301319:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2231)
TRACE 302904:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:251)
	java.lang.Exception.<init>(Exception.java:54)
TRACE 301330:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4773)
TRACE 301264:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:60)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:309)
TRACE 301936:
	sun.nio.fs.UnixNativeDispatcher.access0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:454)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:744)
TRACE 302709:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:755)
TRACE 304144:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:696)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:839)
TRACE 302110:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:469)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:544)
TRACE 300070:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:756)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:468)
TRACE 302443:
	org.graalvm.compiler.graph.NodeClass.deepHashCode0(NodeClass.java:558)
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:621)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410)
TRACE 301874:
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType(CompilerToVM.java:711)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getHolder(HotSpotConstantPool.java:230)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:621)
TRACE 303046:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:706)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:918)
TRACE 302253:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:662)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
TRACE 302758:
	org.graalvm.compiler.core.common.util.Util.atPutGrow(Util.java:72)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildAtOpId(Interval.java:860)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
TRACE 301425:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
TRACE 302607:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1167)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:966)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:921)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
TRACE 302083:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284)
TRACE 301280:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:712)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:699)
	jdk.vm.ci.hotspot.HotSpotSignature.getParameterType(HotSpotSignature.java:166)
TRACE 302981:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
TRACE 301593:
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:305)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:280)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:140)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:286)
TRACE 301329:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1072)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:1000)
TRACE 301103:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:234)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.<init>(ReadVariableNode.java:229)
TRACE 302699:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:158)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:106)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 302551:
	jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.interpreterFrameSize(HotSpotCodeCacheProvider.java:195)
	org.graalvm.compiler.hotspot.HotSpotDebugInfoBuilder.computeFrameForState(HotSpotDebugInfoBuilder.java:141)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.build(DebugInfoBuilder.java:110)
TRACE 302431:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:572)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:275)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 301706:
	jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.hasNeverInlineDirective(HotSpotResolvedJavaMethodImpl.java:598)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:590)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:68)
TRACE 301925:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
TRACE 302810:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:448)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
TRACE 302726:
	org.graalvm.compiler.core.common.util.Util.atPutGrow(Util.java:72)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildAtOpId(Interval.java:860)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
TRACE 303430:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:390)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:47)
TRACE 301343:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
TRACE 302149:
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:134)
	org.graalvm.compiler.core.common.Fields.copy(Fields.java:121)
	org.graalvm.compiler.graph.Node.clone(Node.java:1121)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:921)
TRACE 302720:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase$IntervalBlockIterator.next(LinearScanOptimizeSpillPositionPhase.java:188)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeInterval(LinearScanOptimizeSpillPositionPhase.java:99)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.optimizeSpillPosition(LinearScanOptimizeSpillPositionPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase.run(LinearScanOptimizeSpillPositionPhase.java:62)
TRACE 302129:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:911)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302534:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:620)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
TRACE 301930:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:635)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:735)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 303596:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:284)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:252)
TRACE 303627:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:832)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:47)
TRACE 302145:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423)
TRACE 302373:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 301359:
	jdk.vm.ci.hotspot.CompilerToVM.getImplementor(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getSingleImplementor(HotSpotResolvedObjectTypeImpl.java:293)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:182)
	org.graalvm.compiler.core.common.type.TypeReference.createTrusted(TypeReference.java:105)
TRACE 301501:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.StoreIndexedNode.virtualize(StoreIndexedNode.java:106)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:303)
TRACE 301787:
	jdk.vm.ci.hotspot.CompilerToVM.ensureInitialized(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.ensureInitialized(HotSpotResolvedObjectTypeImpl.java:625)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:730)
	jdk.vm.ci.hotspot.HotSpotConstantPool.loadReferencedType(HotSpotConstantPool.java:671)
TRACE 301028:
	org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:59)
	org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302085:
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:659)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
TRACE 303613:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Range.intersects(Range.java:48)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersects(Interval.java:716)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:261)
TRACE 302986:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:2105)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:288)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:1003)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 301699:
	jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.uniqueConcreteMethod(HotSpotResolvedJavaMethodImpl.java:427)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:613)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:156)
TRACE 303712:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.equals(RegStackValueSet.java:132)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:106)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
TRACE 302448:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.isDefinitelyResolvedWithRespectTo(HotSpotResolvedObjectTypeImpl.java:862)
TRACE 302504:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:805)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301013:
	java.lang.System.identityHashCode(System.java:Unknown line)
	java.util.IdentityHashMap.hash(IdentityHashMap.java:295)
	java.util.IdentityHashMap.get(IdentityHashMap.java:329)
	org.antlr.v4.runtime.atn.PredictionContext.getCachedContext(PredictionContext.java:551)
TRACE 302428:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:477)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$300(LoweringPhase.java:324)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:388)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:547)
TRACE 303521:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:780)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
	org.graalvm.compiler.graph.Graph.unique(Graph.java:672)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList.lambda$replaceAtUsages$7(GraphEffectList.java:273)
TRACE 301894:
	sun.nio.fs.UnixNativeDispatcher.realpath0(UnixNativeDispatcher.java:Unknown line)
	sun.nio.fs.UnixNativeDispatcher.realpath(UnixNativeDispatcher.java:262)
	sun.nio.fs.UnixPath.toRealPath(UnixPath.java:834)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.toRealPath(FileSystems.java:866)
TRACE 302465:
	org.graalvm.compiler.graph.Graph.findNextLiveiterable(Graph.java:1015)
	org.graalvm.compiler.graph.Graph.getIterableNodeNext(Graph.java:1009)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:73)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 303620:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:192)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:754)
TRACE 301765:
	jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupAppendix(HotSpotConstantPool.java:561)
	org.graalvm.compiler.java.BytecodeParser.genDynamicInvokeHelper(BytecodeParser.java:1741)
	org.graalvm.compiler.java.BytecodeParser.genInvokeVirtual(BytecodeParser.java:1717)
TRACE 301796:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
TRACE 301802:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:624)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
TRACE 302617:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:706)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillIntersectingIntervals(LinearScanWalker.java:839)
TRACE 302476:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:114)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:99)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:242)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 301282:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:712)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:699)
	jdk.vm.ci.hotspot.HotSpotSignature.getReturnType(HotSpotSignature.java:198)
TRACE 301377:
	jdk.vm.ci.hotspot.CompilerToVM.lookupType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupTypeInternal(HotSpotJVMCIRuntime.java:712)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.lookupType(HotSpotJVMCIRuntime.java:699)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolve(HotSpotResolvedObjectTypeImpl.java:888)
TRACE 302364:
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:418)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:248)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 302663:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:451)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 301785:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
	org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)
TRACE 302907:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:456)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:744)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:2103)
TRACE 303062:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
TRACE 303662:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny(LinearScanWalker.java:206)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:755)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 301655:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:923)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 301914:
	jdk.vm.ci.hotspot.CompilerToVM.getSymbol(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupUtf8(HotSpotConstantPool.java:549)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl$FieldInfo.getName(HotSpotResolvedObjectTypeImpl.java:704)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getName(HotSpotResolvedJavaFieldImpl.java:124)
TRACE 302875:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:895)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 305966:
	com.oracle.truffle.r.nodes.builtin.base.Scan.getItems(Scan.java:303)
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrameInternal(Scan.java:359)
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrame(Scan.java:347)
	com.oracle.truffle.r.nodes.builtin.base.Scan.doScan(Scan.java:214)
TRACE 302605:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:158)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:110)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
TRACE 302132:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1082)
	org.graalvm.compiler.graph.Node.clone(Node.java:1122)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:921)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:870)
TRACE 302522:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:114)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:99)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
TRACE 303491:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:919)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
TRACE 302216:
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:247)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 303598:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny(LinearScanWalker.java:264)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:872)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1109)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 301021:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1573)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 303548:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303601:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate(LinearScan.java:713)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:42)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase.run(LinearScanPhase.java:35)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:121)
TRACE 302480:
	org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader.getS2(UnsafeArrayTypeReader.java:151)
	org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader.getS2(UnsafeArrayTypeReader.java:168)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader.getU2(UnsafeArrayTypeReader.java:138)
	org.graalvm.compiler.nodes.GraphDecoder.readOrderId(GraphDecoder.java:1602)
TRACE 303633:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:116)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.debugInfoProcedure(LinearScanAssignLocationsPhase.java:156)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.access$000(LinearScanAssignLocationsPhase.java:66)
TRACE 303649:
	org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt(Range.java:80)
	org.graalvm.compiler.lir.alloc.lsra.Interval.currentIntersectsAt(Interval.java:720)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:870)
TRACE 305962:
	com.oracle.truffle.r.runtime.conn.DelegateRConnection.readLines(DelegateRConnection.java:212)
	com.oracle.truffle.r.runtime.conn.DelegateReadRConnection.readLines(DelegateReadRConnection.java:34)
	com.oracle.truffle.r.runtime.conn.ConnectionSupport$BaseRConnection.readLinesInternal(ConnectionSupport.java:779)
	com.oracle.truffle.r.runtime.conn.ConnectionSupport$BaseRConnection.readLines(ConnectionSupport.java:1015)
TRACE 301771:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:901)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302063:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:114)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:99)
	org.graalvm.compiler.nodes.java.InstanceOfNode.implies(InstanceOfNode.java:242)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
TRACE 302282:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:827)
TRACE 302908:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1159)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:966)
TRACE 301782:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:340)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:191)
TRACE 302001:
	java.lang.Class.isArray(Class.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getLength(HotSpotJDKReflection.java:239)
	jdk.vm.ci.hotspot.HotSpotConstantReflectionProvider.readArrayLength(HotSpotConstantReflectionProvider.java:80)
	org.graalvm.compiler.nodes.ConstantNode.findLength(ConstantNode.java:569)
TRACE 302493:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
TRACE 302962:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:548)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:189)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 302968:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:276)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:480)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:452)
TRACE 302243:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:532)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.inliningGraphPE(PartialEvaluator.java:627)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.evaluate(PartialEvaluator.java:348)
	org.graalvm.compiler.truffle.compiler.TruffleCompilerImpl.compileAST(TruffleCompilerImpl.java:514)
TRACE 302499:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2231)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1903)
TRACE 302645:
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject(FrameSlotChangeMonitor.java:1052)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNodeBase.profiledGetValue(ReadVariableNodeBase.java:67)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode$Match.execute(ReadVariableNode.java:410)
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
TRACE 302239:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:408)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
TRACE 302462:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:941)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:154)
TRACE 302529:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:274)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
TRACE 302612:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1277)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1258)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:368)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:122)
TRACE 303638:
	java.util.BitSet.clone(BitSet.java:1102)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:373)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:94)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
TRACE 305957:
	com.oracle.truffle.r.runtime.conn.DelegateReadRConnection.readLines(DelegateReadRConnection.java:34)
	com.oracle.truffle.r.runtime.conn.ConnectionSupport$BaseRConnection.readLinesInternal(ConnectionSupport.java:779)
	com.oracle.truffle.r.runtime.conn.ConnectionSupport$BaseRConnection.readLines(ConnectionSupport.java:1015)
	com.oracle.truffle.r.nodes.builtin.base.Scan.getItems(Scan.java:299)
TRACE 302094:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:277)
TRACE 302217:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getKlassRefIndexAt(HotSpotConstantPool.java:450)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:623)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
TRACE 301041:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:194)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
TRACE 302344:
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:88)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.hasNext(TypedGraphNodeIterator.java:101)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:466)
TRACE 302702:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:250)
TRACE 301040:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
	org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
TRACE 302228:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:182)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:792)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 303011:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1229)
TRACE 302508:
	org.graalvm.collections.EconomicMapImpl.findWithCollision(EconomicMapImpl.java:308)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:292)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
TRACE 302577:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:361)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
TRACE 302657:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:340)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302977:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:781)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$33.418884951.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:158)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:106)
TRACE 301017:
	org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget(ParserATNSimulator.java:1765)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1541)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301022:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
TRACE 301348:
	jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:646)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime$2.test(HotSpotJVMCIRuntime.java:641)
	org.graalvm.compiler.hotspot.meta.HotSpotInvocationPlugins.canBeIntrinsified(HotSpotInvocationPlugins.java:113)
TRACE 301971:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:466)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:189)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 304030:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processGuard(ConditionalEliminationPhase.java:364)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:540)
TRACE 301405:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.createStamp(LoadIndexedNode.java:101)
	org.graalvm.compiler.nodes.java.LoadIndexedNode.inferStamp(LoadIndexedNode.java:120)
TRACE 302589:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects(PartialEscapeClosure.java:464)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:420)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:411)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:241)
TRACE 303655:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed(LinearScanWalker.java:198)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:754)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303679:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:299)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
TRACE 304080:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:75)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:168)
TRACE 302181:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:105)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$12(LinearScanLifetimeAnalysisPhase.java:800)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$35.304256985.doState(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:300)
TRACE 302363:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType(AbstractObjectStamp.java:294)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.hasValues(AbstractObjectStamp.java:87)
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:220)
TRACE 302578:
	java.lang.System.identityHashCode(System.java:Unknown line)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationBlockState$ReadCacheEntry.hashCode(PEReadEliminationBlockState.java:71)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
TRACE 303096:
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue(LocationMarkerPhase.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarker$2.visitValue(LocationMarker.java:167)
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:158)
TRACE 303271:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:858)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:379)
TRACE 303677:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildBeforeOpId(Interval.java:940)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:537)
TRACE 301317:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.runtime.data.RDataFactory.createSymbolInterned(RDataFactory.java:1219)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:947)
TRACE 302707:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:287)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
TRACE 302334:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1324)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:664)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 302342:
	org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex(FrequencyEncoder.java:101)
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:457)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:407)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:249)
TRACE 302464:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:456)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:468)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
TRACE 302888:
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:77)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:262)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.processBlock(EffectsClosure.java:71)
	org.graalvm.compiler.phases.graph.ReentrantBlockIterator.apply(ReentrantBlockIterator.java:125)
TRACE 302895:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:54)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:49)
TRACE 303515:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:791)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:795)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:900)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
TRACE 304522:
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
TRACE 305963:
	java.lang.StringCoding.decode(StringCoding.java:229)
	java.lang.String.<init>(String.java:463)
	com.oracle.truffle.r.runtime.conn.DelegateRConnection.readLines(DelegateRConnection.java:196)
	com.oracle.truffle.r.runtime.conn.DelegateReadRConnection.readLines(DelegateReadRConnection.java:34)
TRACE 302058:
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap(NodeWorkList.java:194)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:135)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$Tool.addToWorkList(CanonicalizerPhase.java:557)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:488)
TRACE 303527:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:197)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:108)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:120)
TRACE 301923:
	java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:946)
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:352)
	com.oracle.truffle.api.library.DynamicDispatchLibraryGen$UncachedDispatch.dispatch(DynamicDispatchLibraryGen.java:301)
	com.oracle.truffle.api.library.LibraryFactory.dispatch(LibraryFactory.java:447)
TRACE 302627:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:941)
	org.graalvm.compiler.nodes.StructuredGraph.reduceTrivialMerge(StructuredGraph.java:934)
TRACE 303053:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 303193:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:456)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:468)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:189)
TRACE 304244:
	jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotCodeCacheProvider.getMaxCallTargetOffset(HotSpotCodeCacheProvider.java:186)
	org.graalvm.compiler.hotspot.HotSpotForeignCallLinkageImpl.getMaxCallTargetOffset(HotSpotForeignCallLinkageImpl.java:180)
	org.graalvm.compiler.core.amd64.AMD64LIRGenerator.emitForeignCallOp(AMD64LIRGenerator.java:570)
TRACE 301908:
	jdk.vm.ci.hotspot.CompilerToVM.getHostClass(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getHostClass(HotSpotResolvedObjectTypeImpl.java:445)
	org.graalvm.compiler.java.BytecodeParser.emitCheckForInvokeSuperSpecial(BytecodeParser.java:1991)
	org.graalvm.compiler.java.BytecodeParser.appendInvoke(BytecodeParser.java:1874)
TRACE 301928:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:466)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302211:
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:418)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:250)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 302396:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:548)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302910:
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:43)
	org.graalvm.compiler.graph.NodeWorkList.<init>(NodeWorkList.java:34)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.<init>(NodeWorkList.java:87)
	org.graalvm.compiler.graph.Graph.createIterativeNodeWorkList(Graph.java:1047)
TRACE 303295:
	org.graalvm.compiler.graph.NodeClass.applyHelper(NodeClass.java:1283)
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1274)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1258)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:368)
TRACE 301212:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.runtime.ArgumentsSignature.<init>(ArgumentsSignature.java:112)
	com.oracle.truffle.r.runtime.ArgumentsSignature.get(ArgumentsSignature.java:88)
TRACE 302450:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:665)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 303043:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:825)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:47)
TRACE 303458:
	org.graalvm.compiler.lir.LIRInstructionClass.forEachAlive(LIRInstructionClass.java:251)
	org.graalvm.compiler.lir.LIRInstruction.forEachAlive(LIRInstruction.java:277)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:99)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.allocateStackSlots(SimpleStackSlotAllocator.java:77)
TRACE 301954:
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:438)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:248)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 301998:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1132)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:1043)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:349)
TRACE 302350:
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:401)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:249)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 302960:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:541)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:451)
TRACE 303134:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:984)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:921)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
TRACE 303241:
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1335)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:182)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:792)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
TRACE 303500:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:477)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchBlock(NodeLIRBuilder.java:452)
	org.graalvm.compiler.core.LIRGenerationPhase.matchBlock(LIRGenerationPhase.java:94)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:74)
TRACE 303867:
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:288)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:149)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 301338:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2284)
	org.graalvm.compiler.java.BytecodeParser.inline(BytecodeParser.java:2447)
TRACE 302571:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4296)
	org.graalvm.compiler.java.BytecodeParser.genInstanceOf(BytecodeParser.java:4533)
TRACE 302926:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
	org.graalvm.compiler.nodes.util.GraphUtil.markFixedNodes(GraphUtil.java:157)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:124)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:290)
TRACE 303204:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:284)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.numberInstructions(LinearScanLifetimeAnalysisPhase.java:146)
TRACE 303218:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:299)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 306417:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:50)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:36)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:56)
TRACE 301386:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:298)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:469)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:544)
TRACE 301394:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:151)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:739)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 302295:
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue(LocationMarkerPhase.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarker$3.visitValue(LocationMarker.java:181)
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:293)
TRACE 302779:
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:664)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 302964:
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:448)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
TRACE 303459:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:350)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
TRACE 303463:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:426)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
TRACE 303049:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:787)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 303207:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:71)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303341:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock(SchedulePhase.java:602)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:275)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 303355:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase$$Lambda$19.1512275002.accept(<Unknown Source>:Unknown line)
	java.lang.Iterable.forEach(Iterable.java:75)
TRACE 303402:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1277)
	org.graalvm.compiler.graph.NodeClass.applySuccessors(NodeClass.java:1254)
	org.graalvm.compiler.graph.Node.applySuccessors(Node.java:377)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.iterateSuccessorsAndInputs(DeadCodeEliminationPhase.java:121)
TRACE 303472:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.performReplacement(CanonicalizerPhase.java:473)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:414)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
TRACE 303995:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:87)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:239)
TRACE 304197:
	org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo(Interval.java:776)
	org.graalvm.compiler.lir.alloc.lsra.Interval.to(Interval.java:597)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.noAllocationPossible(LinearScanWalker.java:984)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
TRACE 302002:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:577)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:590)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.getType(HotSpotJDKReflection.java:187)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.getType(HotSpotObjectConstantImpl.java:62)
TRACE 302509:
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:448)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
TRACE 302887:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1366)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1441)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1392)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
TRACE 303050:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:154)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:739)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 303599:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:402)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:87)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:77)
	org.graalvm.compiler.core.LIRGenerationPhase.run(LIRGenerationPhase.java:48)
TRACE 303797:
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:233)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:172)
TRACE 301300:
	jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.shouldBeInlined(HotSpotResolvedJavaMethodImpl.java:606)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:71)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2245)
TRACE 301677:
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:447)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:418)
	com.oracle.truffle.api.nodes.NodeUtil.visitChild(NodeUtil.java:447)
	com.oracle.truffle.api.nodes.NodeUtil.forEachChildRecursive(NodeUtil.java:418)
TRACE 302372:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:147)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:739)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 302532:
	org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies(UnaryOpLogicNode.java:114)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:99)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
TRACE 302837:
	java.lang.ClassValue$ClassValueMap.probeHomeLocation(ClassValue.java:544)
	java.lang.ClassValue.get(ClassValue.java:102)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0(HotSpotJVMCIRuntime.java:567)
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass(HotSpotJVMCIRuntime.java:590)
TRACE 303008:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 303067:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:96)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:291)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 303906:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals(LinearScanLifetimeAnalysisPhase.java:856)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.run(LinearScanLifetimeAnalysisPhase.java:95)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:47)
TRACE 304451:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:369)
TRACE 302732:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:365)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:230)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 302940:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:253)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:605)
TRACE 303507:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:299)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:843)
TRACE 303757:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:303)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
TRACE 306409:
	com.oracle.truffle.api.profiles.ValueProfile$Equality.profile(ValueProfile.java:212)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:51)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:36)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:56)
TRACE 300687:
	java.lang.ClassLoader.loadClass(ClassLoader.java:430)
	java.lang.ClassLoader.loadClass(ClassLoader.java:405)
	sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:352)
	java.lang.ClassLoader.loadClass(ClassLoader.java:351)
TRACE 300691:
	java.lang.Throwable.fillInStackTrace(Throwable.java:Unknown line)
	java.lang.Throwable.fillInStackTrace(Throwable.java:784)
	java.lang.Throwable.<init>(Throwable.java:288)
	java.lang.Exception.<init>(Exception.java:84)
TRACE 301285:
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic(HotSpotResolvedJavaFieldImpl.java:164)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isSyntheticEnumSwitchMap(JavaConstantFieldProvider.java:148)
	org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider.isStableField(JavaConstantFieldProvider.java:122)
	org.graalvm.compiler.hotspot.meta.HotSpotConstantFieldProvider.isStableField(HotSpotConstantFieldProvider.java:60)
TRACE 302317:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423)
TRACE 302388:
	org.graalvm.compiler.graph.Graph.register(Graph.java:1054)
	org.graalvm.compiler.graph.Node.initialize(Node.java:654)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 302427:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1380)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1356)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:837)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:816)
TRACE 303035:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper(NodeClass.java:1437)
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1428)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:1012)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:1037)
TRACE 304148:
	org.graalvm.compiler.nodes.ValueNode.getStackKind(ValueNode.java:105)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.toSlotKind(DebugInfoBuilder.java:337)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals(DebugInfoBuilder.java:306)
	org.graalvm.compiler.core.gen.DebugInfoBuilder.computeFrameForState(DebugInfoBuilder.java:280)
TRACE 301945:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp(CanonicalizerPhase.java:524)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:353)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
TRACE 302530:
	java.util.Arrays.hashCode(Arrays.java:4146)
	java.util.Objects.hash(Objects.java:128)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.hashCode(ResolvedJavaMethodBytecode.java:133)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
TRACE 302919:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:344)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:191)
TRACE 303001:
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1453)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1431)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1392)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
TRACE 303236:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
TRACE 303608:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 303628:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 305967:
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrameInternal(Scan.java:386)
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrame(Scan.java:347)
	com.oracle.truffle.r.nodes.builtin.base.Scan.doScan(Scan.java:214)
	com.oracle.truffle.r.nodes.builtin.base.ScanNodeGen.execute(ScanNodeGen.java:65)
TRACE 300224:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getEntry(ZipFile.java:316)
	java.util.jar.JarFile.getEntry(JarFile.java:240)
	java.util.jar.JarFile.getJarEntry(JarFile.java:223)
TRACE 300862:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:749)
TRACE 301937:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1072)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:733)
TRACE 302055:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:774)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:795)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:900)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
TRACE 302240:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:843)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:816)
TRACE 302502:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:475)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
TRACE 303012:
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:195)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:170)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 303071:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:773)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$32.1154281711.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.visitEachComponent(AMD64AddressValue.java:96)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:291)
TRACE 303349:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:776)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:374)
TRACE 303516:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:478)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:827)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
TRACE 305972:
	com.oracle.truffle.r.nodes.builtin.base.Scan.getQuotedItems(Scan.java:290)
	com.oracle.truffle.r.nodes.builtin.base.Scan.getItems(Scan.java:303)
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrameInternal(Scan.java:359)
	com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrame(Scan.java:347)
TRACE 301972:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:512)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNodes(ConditionalEliminationPhase.java:498)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:486)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.enter(ConditionalEliminationPhase.java:302)
TRACE 302403:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1368)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1441)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:853)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:788)
TRACE 302588:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findLeafConcreteSubtype(HotSpotResolvedObjectTypeImpl.java:168)
TRACE 302980:
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:776)
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:795)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:900)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
TRACE 303080:
	org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops(GraphUtil.java:513)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph(SimplifyingGraphDecoder.java:136)
	org.graalvm.compiler.replacements.PEGraphDecoder.cleanupGraph(PEGraphDecoder.java:783)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:739)
TRACE 303503:
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	org.graalvm.compiler.replacements.PEGraphDecoder.getInvocationPlugin(PEGraphDecoder.java:1003)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:950)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:892)
TRACE 303612:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
TRACE 303674:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1444)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1392)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1365)
TRACE 303760:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
TRACE 304403:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling(LinearScanWalker.java:539)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:711)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:918)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1109)
TRACE 300589:
	sun.misc.Unsafe.defineAnonymousClass(Unsafe.java:Unknown line)
	java.lang.invoke.InnerClassLambdaMetafactory.spinInnerClass(InnerClassLambdaMetafactory.java:326)
	java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite(InnerClassLambdaMetafactory.java:194)
	java.lang.invoke.LambdaMetafactory.metafactory(LambdaMetafactory.java:304)
TRACE 302233:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	org.graalvm.compiler.core.common.type.TypeReference.filterInterfaceTypesOut(TypeReference.java:145)
	org.graalvm.compiler.core.common.type.TypeReference.create(TypeReference.java:93)
TRACE 302891:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization(SimplifyingGraphDecoder.java:330)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:184)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:792)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
TRACE 303041:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10(LinearScanLifetimeAnalysisPhase.java:781)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$33.418884951.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRFrameState.visitValues(LIRFrameState.java:158)
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:110)
TRACE 303044:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.ReturnSpecial.execute(Return.java:64)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:326)
	com.oracle.truffle.r.nodes.function.RCallSpecialNode.execute(RCallSpecialNode.java:388)
TRACE 303697:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:293)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
	org.graalvm.compiler.lir.LIRInstruction.visitEachInput(LIRInstruction.java:324)
TRACE 303989:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:827)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
TRACE 304241:
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.add(NodeWorkList.java:153)
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:53)
TRACE 304395:
	org.graalvm.compiler.core.common.util.Util.atPutGrow(Util.java:72)
	org.graalvm.compiler.lir.alloc.lsra.Interval.getSplitChildAtOpId(Interval.java:860)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:116)
TRACE 304796:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.trimClone(LinearScanLifetimeAnalysisPhase.java:431)
TRACE 305674:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:215)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:108)
TRACE 301875:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:364)
	com.oracle.truffle.r.nodes.RASTBuilder.constant(RASTBuilder.java:86)
TRACE 301960:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:267)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
TRACE 302105:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock(ControlFlowGraph.java:456)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:468)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:174)
TRACE 302376:
	jdk.vm.ci.hotspot.CompilerToVM.isCompilable(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeInlined(HotSpotResolvedJavaMethodImpl.java:593)
	org.graalvm.compiler.replacements.InlineDuringParsingPlugin.shouldInlineInvoke(InlineDuringParsingPlugin.java:68)
	org.graalvm.compiler.java.BytecodeParser.tryInline(BytecodeParser.java:2245)
TRACE 302936:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1069)
	org.graalvm.compiler.graph.Node.clone(Node.java:1133)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:921)
TRACE 303000:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:451)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
TRACE 303036:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1444)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1392)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
TRACE 303405:
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:586)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.run(LoweringPhase.java:373)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
TRACE 303473:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:351)
	com.oracle.truffle.r.runtime.data.VectorDataLibraryGen$UncachedDispatch.isWriteable(VectorDataLibraryGen.java:5124)
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.setData(RAbstractVector.java:102)
	com.oracle.truffle.r.runtime.data.RLogicalVector.setData(RLogicalVector.java:86)
TRACE 303861:
	jdk.vm.ci.meta.JavaField.getJavaKind(JavaField.java:51)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:411)
	jdk.vm.ci.hotspot.HotSpotJDKReflection.readFieldValue(HotSpotJDKReflection.java:118)
	jdk.vm.ci.hotspot.HotSpotObjectConstantImpl.readFieldValue(HotSpotObjectConstantImpl.java:187)
TRACE 303918:
	org.graalvm.compiler.virtual.phases.ea.EffectList.apply(EffectList.java:179)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.applyEffects(EffectsClosure.java:205)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:108)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.run(PartialEscapePhase.java:120)
TRACE 304104:
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase$Closure.process(StackMoveOptimizationPhase.java:90)
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase.run(StackMoveOptimizationPhase.java:75)
	org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase.run(StackMoveOptimizationPhase.java:59)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:121)
TRACE 300073:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1008)
	java.lang.ClassLoader.loadClass(ClassLoader.java:407)
	java.lang.ClassLoader.loadClass(ClassLoader.java:405)
TRACE 301837:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreateClosure(ClosureCache.java:64)
	com.oracle.truffle.r.runtime.data.ClosureCache.getOrCreatePromiseClosure(ClosureCache.java:47)
TRACE 302225:
	org.graalvm.compiler.nodes.GraphEncoder.writeObjectId(GraphEncoder.java:457)
	org.graalvm.compiler.nodes.GraphEncoder.writeProperties(GraphEncoder.java:407)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:249)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
TRACE 302498:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.add(EconomicSetNodeEventListener.java:91)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.changed(EconomicSetNodeEventListener.java:75)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
TRACE 302671:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:541)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
TRACE 302684:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType(AbstractObjectStamp.java:294)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.hasValues(AbstractObjectStamp.java:87)
	org.graalvm.compiler.core.common.type.Stamp.isEmpty(Stamp.java:128)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.join0(AbstractObjectStamp.java:222)
TRACE 302864:
	org.graalvm.compiler.nodes.IfNode.simplify(IfNode.java:291)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:426)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 302993:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:466)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 303367:
	org.graalvm.compiler.hotspot.HotSpotReferenceMapBuilder.finish(HotSpotReferenceMapBuilder.java:124)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:99)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:57)
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
TRACE 303660:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny(LinearScanWalker.java:185)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocFreeRegister(LinearScanWalker.java:753)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1106)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303934:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeLoopInformation(ControlFlowGraph.java:627)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:86)
TRACE 304072:
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:62)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:147)
TRACE 306168:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:519)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:50)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:277)
	com.oracle.truffle.r.nodes.binary.BinaryArithmeticNode.doNumericVectorCached(BinaryArithmeticNode.java:95)
TRACE 300282:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:348)
	sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
TRACE 301044:
	org.antlr.v4.runtime.misc.FlexibleHashMap.expand(FlexibleHashMap.java:195)
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:98)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
TRACE 301867:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:354)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:191)
TRACE 301955:
	jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.getNameAndTypeRefIndexAt(HotSpotConstantPool.java:392)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:618)
	org.graalvm.compiler.java.BytecodeParser.tryFastInlineAccessor(BytecodeParser.java:2284)
TRACE 302479:
	org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward(PredicatedProxyNodeIterator.java:44)
	org.graalvm.compiler.graph.iterators.NodeIterator.hasNext(NodeIterator.java:40)
	org.graalvm.compiler.graph.iterators.NodeIterable.count(NodeIterable.java:70)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:266)
TRACE 302600:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:776)
TRACE 303059:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:293)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 303347:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.phases.common.AddressLoweringPhase.run(AddressLoweringPhase.java:70)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303386:
	org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>(GraphEncoder.java:388)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:230)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 303740:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper(NodeClass.java:1404)
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1395)
	org.graalvm.compiler.graph.Node.initialize(Node.java:656)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 304005:
	org.graalvm.compiler.asm.Label.bind(Label.java:81)
	org.graalvm.compiler.asm.Assembler.bind(Assembler.java:176)
	org.graalvm.compiler.lir.StandardOp$LabelOp.emitCode(StandardOp.java:165)
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp(CompilationResultBuilder.java:594)
TRACE 304198:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:268)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:239)
TRACE 304257:
	org.graalvm.compiler.lir.LIRValueUtil.stripCast(LIRValueUtil.java:127)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.operandNumber(LinearScan.java:281)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.intervalFor(LinearScan.java:442)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.getOrCreateInterval(LinearScan.java:448)
TRACE 300788:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:60)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:734)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 301940:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4296)
	org.graalvm.compiler.java.BytecodeParser.genCheckCast(BytecodeParser.java:4444)
TRACE 302435:
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1682)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.getConstantFieldInfo(TruffleConstantFieldProvider.java:95)
	org.graalvm.compiler.truffle.compiler.TruffleConstantFieldProvider.readConstantField(TruffleConstantFieldProvider.java:69)
	org.graalvm.compiler.nodes.util.ConstantFoldUtil.tryConstantFold(ConstantFoldUtil.java:47)
TRACE 302575:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	java.lang.Enum.getDeclaringClass(Enum.java:199)
	java.util.EnumSet.of(EnumSet.java:259)
	org.graalvm.compiler.phases.common.util.EconomicSetNodeEventListener.<init>(EconomicSetNodeEventListener.java:52)
TRACE 302587:
	org.graalvm.compiler.nodes.StructuredGraph.maybeCompress(StructuredGraph.java:532)
	org.graalvm.compiler.core.GraalCompiler.emitFrontEnd(GraalCompiler.java:233)
	org.graalvm.compiler.core.GraalCompiler.compile(GraalCompiler.java:145)
	org.graalvm.compiler.core.GraalCompiler.compileGraph(GraalCompiler.java:130)
TRACE 302603:
	java.lang.Object.clone(Object.java:Unknown line)
	java.util.Arrays$ArrayList.toArray(Arrays.java:3823)
	java.util.ArrayList.<init>(ArrayList.java:178)
	org.graalvm.compiler.nodes.virtual.CommitAllocationNode.<init>(CommitAllocationNode.java:77)
TRACE 302896:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:992)
TRACE 302922:
	java.util.AbstractList$ListItr.<init>(AbstractList.java:391)
	java.util.AbstractList.listIterator(AbstractList.java:327)
	java.util.SubList$1.<init>(AbstractList.java:699)
	java.util.SubList.listIterator(AbstractList.java:698)
TRACE 302958:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:250)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 302963:
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:675)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:776)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:677)
TRACE 302999:
	jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupField(HotSpotConstantPool.java:630)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)
	org.graalvm.compiler.java.BytecodeParser.genPutField(BytecodeParser.java:4879)
TRACE 303089:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray(UnsafeArrayTypeWriter.java:100)
	org.graalvm.compiler.nodes.GraphEncoder.getEncoding(GraphEncoder.java:320)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:173)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 303179:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:469)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 303556:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:480)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
TRACE 303751:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectActiveAny(LinearScanWalker.java:254)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:871)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1109)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 300750:
	java.util.zip.ZipFile.getEntry(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:370)
	java.util.jar.JarFile.getInputStream(JarFile.java:452)
	sun.misc.URLClassPath$JarLoader$2.getInputStream(URLClassPath.java:987)
TRACE 301035:
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.PredictionMode.hasSLLConflictTerminatingPrediction(PredictionMode.java:241)
	org.antlr.v4.runtime.atn.ParserATNSimulator.computeTargetState(ParserATNSimulator.java:602)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:454)
TRACE 301454:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:664)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 302408:
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty(InvocationPlugins.java:1089)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:939)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:892)
TRACE 302456:
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue(LocationMarkerPhase.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarker$2.visitValue(LocationMarker.java:167)
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:293)
TRACE 302459:
	org.graalvm.compiler.graph.NodeClass.valueNumber(NodeClass.java:586)
	org.graalvm.compiler.graph.Graph$1.hashCode(Graph.java:142)
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410)
	org.graalvm.collections.EconomicMapImpl.findHash(EconomicMapImpl.java:284)
TRACE 302545:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:548)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotAddressLowering.preProcess(AMD64HotSpotAddressLowering.java:129)
TRACE 302889:
	org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getConstantReflection(CoreProvidersDelegate.java:53)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:54)
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
TRACE 302932:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:103)
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:744)
TRACE 302933:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 302952:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1431)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:1012)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:1037)
	org.graalvm.compiler.graph.Node.replaceAtUsagesAndDelete(Node.java:795)
TRACE 303018:
	sun.nio.fs.UnixNativeDispatcher.access(UnixNativeDispatcher.java:454)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:306)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:744)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:2103)
TRACE 303057:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:205)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:170)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 303172:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1069)
	org.graalvm.compiler.graph.Node.clone(Node.java:1133)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:921)
TRACE 303180:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:587)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:189)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 303436:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed(LinearScanWalker.java:246)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:870)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1109)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303681:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:222)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:172)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:257)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:76)
TRACE 303743:
	org.graalvm.compiler.graph.Graph$MapReplacement.replacement(Graph.java:1229)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:915)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:870)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
TRACE 303930:
	org.graalvm.compiler.graph.NodeList.iterator(NodeList.java:341)
	org.graalvm.compiler.nodes.GraphEncoder.writeEdges(GraphEncoder.java:436)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:248)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
TRACE 303997:
	org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage(NodeClass.java:1431)
	org.graalvm.compiler.graph.Node.clearInputs(Node.java:1012)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:1037)
	org.graalvm.compiler.graph.Node.replaceAndDelete(Node.java:981)
TRACE 304190:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:293)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 304431:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1069)
	org.graalvm.compiler.graph.Node.initialize(Node.java:654)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 304548:
	org.graalvm.compiler.nodes.spi.NodeWithState.states(NodeWithState.java:37)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:210)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
	org.graalvm.compiler.loop.LoopFragment.contains(LoopFragment.java:98)
TRACE 304913:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:159)
	com.oracle.truffle.r.nodes.access.WriteLocalFrameVariableNodeGen.execute_generic3(WriteLocalFrameVariableNodeGen.java:113)
TRACE 301073:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1529)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 301210:
	java.lang.Class.isPrimitive(Class.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:677)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph$1.equals(Graph.java:137)
TRACE 301818:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.prototypeMarkWord(HotSpotResolvedObjectTypeImpl.java:916)
	org.graalvm.compiler.hotspot.replacements.HotSpotAllocationSnippets$Templates.lower(HotSpotAllocationSnippets.java:683)
	org.graalvm.compiler.hotspot.meta.DefaultHotSpotLoweringProvider.lower(DefaultHotSpotLoweringProvider.java:334)
TRACE 301918:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1398)
	org.graalvm.compiler.graph.Node.initialize(Node.java:656)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.uniqueHelper(Graph.java:684)
TRACE 302139:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:879)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302183:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302251:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:780)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:374)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:348)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 302324:
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1549)
	org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder(BciBlockMapping.java:1239)
	org.graalvm.compiler.java.BciBlockMapping.build(BciBlockMapping.java:752)
	org.graalvm.compiler.java.BciBlockMapping.create(BciBlockMapping.java:1574)
TRACE 302327:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies(ControlFlowGraph.java:587)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:83)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.lambda$run$0(ConvertDeoptimizeToGuardPhase.java:90)
TRACE 302419:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth(ControlFlowGraph.java:393)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRaw(ControlFlowGraph.java:384)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:318)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
TRACE 302634:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke(OptimizedCallTarget.java:497)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:460)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
TRACE 302712:
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:323)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode.canonical(IntegerEqualsNode.java:102)
TRACE 303040:
	org.graalvm.compiler.replacements.PEGraphDecoder.getInvocationPlugin(PEGraphDecoder.java:1003)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInvocationPlugin(PEGraphDecoder.java:950)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyInvoke(PEGraphDecoder.java:892)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:860)
TRACE 303563:
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1646)
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:924)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyCallTarget(PEGraphDecoder.java:876)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:859)
TRACE 303796:
	jdk.vm.ci.meta.ModifiersProvider.isFinalFlagSet(ModifiersProvider.java:74)
	jdk.vm.ci.meta.ResolvedJavaType.isLeaf(ResolvedJavaType.java:79)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.canBeStaticallyBound(HotSpotResolvedJavaMethodImpl.java:246)
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:919)
TRACE 303942:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:776)
TRACE 304377:
	org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage(NodeClass.java:1398)
	org.graalvm.compiler.graph.Node.initialize(Node.java:656)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
	org.graalvm.compiler.graph.Graph.add(Graph.java:446)
TRACE 304436:
	org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining(PEGraphDecoder.java:1221)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:553)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 300899:
	java.util.zip.ZipFile.getEntryTime(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.getZipEntry(ZipFile.java:586)
	java.util.zip.ZipFile.access$900(ZipFile.java:60)
	java.util.zip.ZipFile$ZipEntryIterator.next(ZipFile.java:539)
TRACE 301197:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.hasAnnotations(HotSpotResolvedJavaFieldImpl.java:180)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.getAnnotations(HotSpotResolvedJavaFieldImpl.java:194)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.getAnnotations(GraalTruffleRuntime.java:1047)
TRACE 301406:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
	org.graalvm.compiler.truffle.compiler.phases.inlining.GraphManager.peRoot(GraphManager.java:93)
TRACE 301443:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:831)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 301986:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.common.CanonicalizerPhase.run(CanonicalizerPhase.java:191)
TRACE 302117:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:647)
	org.graalvm.compiler.graph.Node.replaceAtPredecessor(Node.java:968)
TRACE 302206:
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect(OptimizedCallTarget.java:459)
	org.graalvm.compiler.truffle.runtime.OptimizedDirectCallNode.call(OptimizedDirectCallNode.java:71)
	com.oracle.truffle.r.nodes.function.call.CallRFunctionNode.execute(CallRFunctionNode.java:63)
	com.oracle.truffle.r.nodes.function.RCallNode$DispatchedCallNode.execute(RCallNode.java:1234)
TRACE 302215:
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute(S3DispatchFunctions.java:197)
	com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctionsFactory$UseMethodNodeGen.execute(S3DispatchFunctionsFactory.java:31)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg2.call(RBuiltinNode.java:192)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1165)
TRACE 302383:
	org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToNonVirtual(EscapeObjectState.java:75)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:665)
	org.graalvm.compiler.replacements.SnippetTemplate.rewireFrameStatesBeforeFSA(SnippetTemplate.java:1889)
	org.graalvm.compiler.replacements.SnippetTemplate.rewireFrameStates(SnippetTemplate.java:1848)
TRACE 302563:
	jdk.vm.ci.hotspot.CompilerToVM.getExceptionTableLength(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:274)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getExceptionHandlers(ResolvedJavaMethodBytecode.java:101)
	org.graalvm.compiler.java.BciBlockMapping.<init>(BciBlockMapping.java:711)
TRACE 302649:
	org.graalvm.compiler.graph.NodeWorkList.addAll(NodeWorkList.java:55)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:274)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
TRACE 303287:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1380)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1356)
	org.graalvm.compiler.graph.Node.replaceFirstInput(Node.java:991)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$5.apply(GraphEffectList.java:298)
TRACE 303354:
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:196)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:38)
	org.graalvm.compiler.nodes.AbstractMergeNode.addForwardEnd(AbstractMergeNode.java:71)
	org.graalvm.compiler.nodes.GraphDecoder.handlePhiFunctions(GraphDecoder.java:1218)
TRACE 303576:
	org.graalvm.compiler.graph.NodeClass.applyEdges(NodeClass.java:1268)
	org.graalvm.compiler.graph.NodeClass.applyInputs(NodeClass.java:1258)
	org.graalvm.compiler.graph.Node.applyInputs(Node.java:368)
	org.graalvm.compiler.graph.Graph.addInputs(Graph.java:503)
TRACE 303794:
	com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute(FunctionBodyNode.java:68)
	com.oracle.truffle.r.nodes.function.FunctionDefinitionNode.execute(FunctionDefinitionNode.java:289)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.executeRootNode(OptimizedCallTarget.java:592)
	org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.profiledPERoot(OptimizedCallTarget.java:563)
TRACE 303829:
	org.graalvm.compiler.graph.NodeClass.replaceFirstEdge(NodeClass.java:1380)
	org.graalvm.compiler.graph.NodeClass.replaceFirstInput(NodeClass.java:1356)
	org.graalvm.compiler.graph.Node.replaceAtUsage(Node.java:837)
	org.graalvm.compiler.graph.Node.replaceAtAllUsages(Node.java:830)
TRACE 304616:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.getOperandNumber(LinearScanLifetimeAnalysisPhase.java:301)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanLifetimeAnalysisPhase.addRegisterHint(SSALinearScanLifetimeAnalysisPhase.java:81)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$6(LinearScanLifetimeAnalysisPhase.java:746)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$29.1526838511.visitValue(<Unknown Source>:Unknown line)
TRACE 301323:
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:773)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:374)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:348)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 301478:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:466)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:174)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:151)
TRACE 301489:
	org.graalvm.compiler.nodes.LogicNode.implies(LogicNode.java:98)
	org.graalvm.compiler.nodes.UnaryOpLogicNode.implies(UnaryOpLogicNode.java:107)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
TRACE 301733:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:157)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:236)
TRACE 302065:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:242)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.allocateRegisters(LinearScanRegisterAllocationPhase.java:66)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanRegisterAllocationPhase.run(LinearScanRegisterAllocationPhase.java:45)
TRACE 302510:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	org.graalvm.compiler.core.common.type.StampFactory.forDeclaredType(StampFactory.java:305)
TRACE 302800:
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:450)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$300(LoweringPhase.java:324)
	org.graalvm.compiler.phases.common.LoweringPhase$Round$ProcessFrame.preprocess(LoweringPhase.java:388)
	org.graalvm.compiler.phases.common.LoweringPhase.processBlock(LoweringPhase.java:547)
TRACE 302918:
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:125)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:102)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase.run(FrameStateAssignmentPhase.java:128)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303063:
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid(RBlockNode.java:35)
	org.graalvm.compiler.truffle.runtime.OptimizedBlockNode.executeGeneric(OptimizedBlockNode.java:79)
	com.oracle.truffle.r.nodes.control.RBlockNode.visibleExecute(RBlockNode.java:62)
TRACE 303074:
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:256)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:273)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:100)
TRACE 303328:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1508)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:672)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 303824:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1371)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1441)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:853)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:788)
TRACE 304041:
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:83)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:54)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase.run(LocationMarkerPhase.java:50)
	org.graalvm.compiler.lir.phases.LIRPhase.apply(LIRPhase.java:121)
TRACE 304142:
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1453)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1431)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:853)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:788)
TRACE 304151:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.colorLirOperand(LinearScanAssignLocationsPhase.java:116)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase$1.doValue(LinearScanAssignLocationsPhase.java:188)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:256)
TRACE 304250:
	org.graalvm.compiler.graph.NodeClass.deepEquals0(NodeClass.java:635)
	org.graalvm.compiler.graph.NodeClass.dataEquals(NodeClass.java:735)
	org.graalvm.compiler.graph.Node.valueEquals(Node.java:1416)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:776)
TRACE 304458:
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$CollectVirtualObjectsClosure2.apply(PartialEscapeClosure.java:155)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:659)
	org.graalvm.compiler.nodes.FrameState.applyToNonVirtual(FrameState.java:669)
TRACE 304489:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.mergeObjectStates(PartialEscapeClosure.java:925)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.merge(PartialEscapeClosure.java:831)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure$ReadEliminationMergeProcessor.merge(PEReadEliminationClosure.java:379)
	org.graalvm.compiler.virtual.phases.ea.EffectsClosure.doMergeWithoutDead(EffectsClosure.java:524)
TRACE 304586:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:447)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitAndSpillInterval(LinearScanWalker.java:706)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:918)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1109)
TRACE 304592:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks(SchedulePhase.java:277)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:207)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304672:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged(CanonicalizerPhase.java:299)
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:647)
TRACE 306415:
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand(RandomFunctions.java:94)
	com.oracle.truffle.r.runtime.nmath.distr.Unif$Runif.exec(Unif.java:59)
	com.oracle.truffle.r.runtime.nmath.distr.UnifFactory$RunifNodeGen.execute(UnifFactory.java:36)
	com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandFunction2_Double.execute(RandomFunctions.java:56)
TRACE 301263:
	jdk.vm.ci.hotspot.CompilerToVM.iterateFrames(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotStackIntrospection.iterateFrames(HotSpotStackIntrospection.java:40)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateImpl(GraalTruffleRuntime.java:564)
	org.graalvm.compiler.truffle.runtime.GraalTruffleRuntime.iterateFrames(GraalTruffleRuntime.java:519)
TRACE 301337:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1040)
TRACE 301745:
	sun.misc.Unsafe.getAddress(Unsafe.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getConstMethod(HotSpotResolvedJavaMethodImpl.java:153)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getMaxLocals(HotSpotResolvedJavaMethodImpl.java:388)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getMaxLocals(ResolvedJavaMethodBytecode.java:81)
TRACE 301853:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	org.graalvm.compiler.java.BytecodeParser.lookupType(BytecodeParser.java:4296)
	org.graalvm.compiler.java.BytecodeParser.createExceptionDispatch(BytecodeParser.java:3314)
TRACE 301896:
	jdk.vm.ci.hotspot.CompilerToVM.resolveMethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.resolveMethod(HotSpotResolvedObjectTypeImpl.java:478)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.findUniqueConcreteMethod(HotSpotResolvedObjectTypeImpl.java:602)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:156)
TRACE 302134:
	com.oracle.truffle.r.runtime.data.model.RAbstractVector.setData(RAbstractVector.java:99)
	com.oracle.truffle.r.runtime.data.RLogicalVector.setData(RLogicalVector.java:86)
	com.oracle.truffle.r.runtime.data.RLogicalVector.<init>(RLogicalVector.java:62)
	com.oracle.truffle.r.runtime.data.RDataFactory.createLogicalVector(RDataFactory.java:957)
TRACE 302141:
	org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone(Node.java:1082)
	org.graalvm.compiler.graph.Node.clone(Node.java:1123)
	org.graalvm.compiler.graph.NodeClass.createNodeDuplicates(NodeClass.java:921)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:870)
TRACE 302191:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:258)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:47)
TRACE 302309:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1171)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:921)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:703)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:296)
TRACE 302328:
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked(UnsafeArrayTypeWriter.java:227)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.write(UnsafeArrayTypeWriter.java:221)
	org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.putUV(UnsafeArrayTypeWriter.java:210)
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:309)
TRACE 302347:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.containsKey(EconomicMapImpl.java:605)
	org.graalvm.collections.EconomicMapImpl.contains(EconomicMapImpl.java:861)
TRACE 302413:
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:346)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1461)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1401)
TRACE 302658:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:159)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 302683:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator(ControlFlowGraph.java:736)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computePostdominators(ControlFlowGraph.java:719)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:92)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
TRACE 302841:
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo(NodeIterable.java:54)
	org.graalvm.compiler.graph.iterators.NodeIterable.snapshot(NodeIterable.java:49)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:818)
	org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase.propagateFixed(ConvertDeoptimizeToGuardPhase.java:216)
TRACE 302861:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:342)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1461)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1401)
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1365)
TRACE 302925:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:346)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1461)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1401)
TRACE 303286:
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises(RCallNode.java:1081)
	com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute(RCallNode.java:1165)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:921)
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:703)
TRACE 303466:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
TRACE 303558:
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:291)
	org.graalvm.compiler.core.match.MatchPattern.matchShape(MatchPattern.java:276)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:92)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:480)
TRACE 303600:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings(LinearScanResolveDataFlowPhase.java:78)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:202)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303610:
	com.oracle.truffle.r.nodes.builtin.base.Return.doReturn(Return.java:96)
	com.oracle.truffle.r.nodes.builtin.base.Return.returnFunction(Return.java:108)
	com.oracle.truffle.r.nodes.builtin.base.ReturnNodeGen.execute(ReturnNodeGen.java:36)
	com.oracle.truffle.r.nodes.builtin.RBuiltinNode$Arg1.call(RBuiltinNode.java:179)
TRACE 303682:
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent(AMD64AddressValue.java:86)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:254)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
TRACE 303688:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:87)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:103)
TRACE 303975:
	java.util.TimSort.binarySort(TimSort.java:300)
	java.util.TimSort.sort(TimSort.java:239)
	java.util.Arrays.sort(Arrays.java:1512)
	java.util.ArrayList.sort(ArrayList.java:1462)
TRACE 303991:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9(LinearScanLifetimeAnalysisPhase.java:773)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase$$Lambda$32.1154281711.visitValue(<Unknown Source>:Unknown line)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:293)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachUse(LIRInstructionClass.java:263)
TRACE 304114:
	org.graalvm.compiler.nodes.GraphDecoder.readProperties(GraphDecoder.java:1289)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1444)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:853)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:788)
TRACE 304406:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:451)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
TRACE 304410:
	org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues(RegStackValueSet.java:159)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:97)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:57)
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
TRACE 304477:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized(PartialEscapeClosure.java:513)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeWithCommit(PartialEscapeBlockState.java:259)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeBlockState.materializeBefore(PartialEscapeBlockState.java:202)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.ensureMaterialized(PartialEscapeClosure.java:502)
TRACE 306064:
	sun.misc.Unsafe.copyMemory(Unsafe.java:Unknown line)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:139)
	com.oracle.truffle.r.runtime.ffi.util.NativeMemory.copyMemory(NativeMemory.java:130)
	com.oracle.truffle.r.runtime.data.NativeDataAccess$NativeMirror.allocateNative(NativeDataAccess.java:327)
TRACE 301201:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:264)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:378)
	org.graalvm.compiler.java.BytecodeParser.createTarget(BytecodeParser.java:3127)
TRACE 301287:
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1535)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1586)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
TRACE 302053:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:480)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:208)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
TRACE 302355:
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
	jdk.vm.ci.meta.ResolvedJavaType.getElementalType(ResolvedJavaType.java:230)
	org.graalvm.compiler.word.WordOperationPlugin.interceptType(WordOperationPlugin.java:131)
TRACE 302566:
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:119)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:102)
	org.graalvm.compiler.phases.common.FrameStateAssignmentPhase.run(FrameStateAssignmentPhase.java:128)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302582:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:344)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 302721:
	org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve(BytecodeParser.java:4394)
	org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4359)
	org.graalvm.compiler.java.BytecodeParser.genGetField(BytecodeParser.java:4773)
	org.graalvm.compiler.java.BytecodeParser.loadLocalObject(BytecodeParser.java:4021)
TRACE 302855:
	org.graalvm.compiler.lir.framemap.FrameMap.newReferenceMapBuilder(FrameMap.java:278)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:96)
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.processState(LocationMarkerPhase.java:57)
	org.graalvm.compiler.lir.dfa.LocationMarker$1.doState(LocationMarker.java:160)
TRACE 302872:
	org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject(FrequencyEncoder.java:84)
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:199)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:170)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
TRACE 303092:
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:256)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachDef(LIRInstructionClass.java:259)
	org.graalvm.compiler.lir.LIRInstruction.forEachOutput(LIRInstruction.java:285)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:101)
TRACE 303361:
	org.graalvm.compiler.lir.ValueConsumer.visitValue(ValueConsumer.java:51)
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:303)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
TRACE 303373:
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward(NodeClass.java:1016)
	org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.hasNext(NodeClass.java:1004)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:541)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:475)
TRACE 303479:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:798)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 303609:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions(Interval.java:164)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage(LinearScanWalker.java:483)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitWhenPartialRegisterAvailable(LinearScanWalker.java:673)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.allocLockedRegister(LinearScanWalker.java:944)
TRACE 303872:
	jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromMetaspace(HotSpotJVMCIRuntime.java:594)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.fromMetaspace(HotSpotResolvedObjectTypeImpl.java:98)
	jdk.vm.ci.hotspot.CompilerToVM.getComponentType(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotResolvedObjectTypeImpl.getComponentType(HotSpotResolvedObjectTypeImpl.java:157)
TRACE 304022:
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:2103)
	com.oracle.truffle.api.TruffleFile.exists(TruffleFile.java:288)
	com.oracle.truffle.r.runtime.context.RContext.getSafeTruffleFile(RContext.java:1003)
	com.oracle.truffle.r.runtime.RSource.fromSrcfile(RSource.java:188)
TRACE 304099:
	org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness(LocalLiveness.java:331)
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:103)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1041)
TRACE 304531:
	org.graalvm.compiler.nodes.ValueNode.stamp(ValueNode.java:63)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant(IntegerEqualsNode.java:241)
	org.graalvm.compiler.nodes.calc.CompareNode$CompareOp.canonical(CompareNode.java:133)
	org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonical(IntegerEqualsNode.java:233)
TRACE 304809:
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:256)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:252)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:233)
TRACE 306026:
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar(BinaryMapNode.java:519)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.executeAndSpecialize(VectorMapBinaryInternalNodeGen.java:109)
	com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNodeGen.execute(VectorMapBinaryInternalNodeGen.java:74)
	com.oracle.truffle.r.nodes.primitive.BinaryMapVectorNode.apply(BinaryMapNode.java:277)
TRACE 301230:
	java.lang.Object.clone(Object.java:Unknown line)
	org.graalvm.compiler.java.FrameStateBuilder.<init>(FrameStateBuilder.java:264)
	org.graalvm.compiler.java.FrameStateBuilder.copy(FrameStateBuilder.java:378)
	org.graalvm.compiler.java.BytecodeParser.handleException(BytecodeParser.java:1315)
TRACE 302366:
	org.graalvm.compiler.nodes.GraphEncoder.prepare(GraphEncoder.java:197)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:170)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 302458:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType(AbstractObjectStamp.java:294)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.hasValues(AbstractObjectStamp.java:87)
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:151)
	org.graalvm.compiler.nodes.type.StampTool.isPointerAlwaysNull(StampTool.java:139)
TRACE 302664:
	org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLoweringProvider.lower(AMD64HotSpotLoweringProvider.java:95)
	org.graalvm.compiler.nodes.spi.Lowerable.lower(Lowerable.java:40)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.process(LoweringPhase.java:448)
	org.graalvm.compiler.phases.common.LoweringPhase$Round.access$300(LoweringPhase.java:324)
TRACE 302745:
	org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getMetaAccess(CoreProvidersDelegate.java:48)
	org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getMetaAccess(CoreProvidersDelegate.java:48)
	org.graalvm.compiler.nodes.memory.ReadNode.canonicalizeRead(ReadNode.java:113)
	org.graalvm.compiler.nodes.memory.ReadNode.canonical(ReadNode.java:90)
TRACE 302959:
	org.graalvm.compiler.virtual.phases.ea.ObjectState.createEscapeObjectState(ObjectState.java:151)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:438)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:422)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:411)
TRACE 302969:
	org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode(NodeLIRBuilder.java:509)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doRoot(NodeLIRBuilder.java:500)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:404)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:87)
TRACE 303070:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:295)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:469)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:544)
TRACE 303256:
	org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes(ScheduledNodeIterator.java:66)
	org.graalvm.compiler.phases.common.GuardLoweringPhase.processBlock(GuardLoweringPhase.java:130)
	org.graalvm.compiler.phases.common.GuardLoweringPhase.run(GuardLoweringPhase.java:115)
	org.graalvm.compiler.phases.common.GuardLoweringPhase.run(GuardLoweringPhase.java:58)
TRACE 303276:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:409)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:241)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNode(PartialEscapeClosure.java:206)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode(PEReadEliminationClosure.java:99)
TRACE 303314:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:268)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 303371:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings(PartialEscapeClosure.java:439)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeWithState(PartialEscapeClosure.java:422)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs(PartialEscapeClosure.java:411)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInternal(PartialEscapeClosure.java:241)
TRACE 303408:
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:795)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:900)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1211)
TRACE 303429:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
	org.graalvm.collections.EconomicMapImpl.grow(EconomicMapImpl.java:479)
TRACE 303508:
	org.graalvm.compiler.core.amd64.AMD64AddressLowering.improveConstDisp(AMD64AddressLowering.java:228)
	org.graalvm.compiler.core.amd64.AMD64AddressLowering.improveInput(AMD64AddressLowering.java:190)
	org.graalvm.compiler.core.amd64.AMD64AddressLowering.improve(AMD64AddressLowering.java:86)
	org.graalvm.compiler.core.amd64.AMD64CompressAddressLowering.improve(AMD64CompressAddressLowering.java:52)
TRACE 303557:
	jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotConstantPool.lookupType(HotSpotConstantPool.java:606)
	jdk.vm.ci.hotspot.HotSpotResolvedJavaMethodImpl.getExceptionHandlers(HotSpotResolvedJavaMethodImpl.java:289)
	org.graalvm.compiler.bytecode.ResolvedJavaMethodBytecode.getExceptionHandlers(ResolvedJavaMethodBytecode.java:101)
TRACE 303590:
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition(ConditionalEliminationPhase.java:716)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:411)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock(ConditionalEliminationPhase.java:512)
TRACE 303667:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Graph.unregister(Graph.java:1132)
	org.graalvm.compiler.graph.Node.markDeleted(Node.java:1043)
	org.graalvm.compiler.graph.Node.safeDelete(Node.java:1039)
TRACE 303701:
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:422)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.run(CanonicalizerPhase.java:281)
TRACE 303768:
	org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getConstantReflection(CoreProvidersDelegate.java:53)
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:124)
	org.graalvm.compiler.nodes.java.LoadFieldNode.canonical(LoadFieldNode.java:68)
	org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical(Canonicalizable.java:99)
TRACE 303809:
	org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind(PEGraphDecoder.java:728)
	org.graalvm.compiler.replacements.PEGraphDecoder$PEMethodScope.<init>(PEGraphDecoder.java:194)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:1069)
	org.graalvm.compiler.replacements.PEGraphDecoder.tryInline(PEGraphDecoder.java:1033)
TRACE 303938:
	org.graalvm.compiler.java.LocalLiveness.computeLiveness(LocalLiveness.java:133)
	org.graalvm.compiler.java.LocalLiveness.compute(LocalLiveness.java:93)
	org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1041)
	org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)
TRACE 303968:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:103)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:46)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 304010:
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes(DeadCodeEliminationPhase.java:145)
	org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.run(DeadCodeEliminationPhase.java:103)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
TRACE 304075:
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId(LinearScan.java:668)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase$1.visit(SSALinearScanResolveDataFlowPhase.java:76)
	org.graalvm.compiler.lir.ssa.SSAUtil.forEachPhiValuePair(SSAUtil.java:103)
	org.graalvm.compiler.lir.alloc.lsra.ssa.SSALinearScanResolveDataFlowPhase.resolveCollectMappings(SSALinearScanResolveDataFlowPhase.java:96)
TRACE 304232:
	org.graalvm.collections.EconomicMapImpl.compareKeys(EconomicMapImpl.java:275)
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:262)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.get(EconomicMapImpl.java:244)
TRACE 304330:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:284)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachAlive(LIRInstructionClass.java:267)
	org.graalvm.compiler.lir.LIRInstruction.visitEachAlive(LIRInstruction.java:328)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:148)
TRACE 304666:
	org.graalvm.collections.EconomicMapImpl.findLinear(EconomicMapImpl.java:260)
	org.graalvm.collections.EconomicMapImpl.find(EconomicMapImpl.java:255)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:423)
	org.graalvm.collections.EconomicMapImpl.add(EconomicMapImpl.java:867)
TRACE 304701:
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:374)
	org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs(GraphUtil.java:344)
	org.graalvm.compiler.nodes.util.GraphUtil.tryKillUnused(GraphUtil.java:941)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:139)
TRACE 304735:
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process(ConstantTreeAnalyzer.java:126)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyzeBlocks(ConstantTreeAnalyzer.java:99)
	org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.analyze(ConstantTreeAnalyzer.java:50)
	org.graalvm.compiler.lir.constopt.ConstantLoadOptimization$Optimization.createConstantTree(ConstantLoadOptimization.java:292)
TRACE 304763:
	org.graalvm.compiler.lir.LIRIntrospection.visitEach(LIRIntrospection.java:284)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachDef(LIRInstructionClass.java:275)
	org.graalvm.compiler.lir.LIRInstruction.visitEachOutput(LIRInstruction.java:336)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:139)
TRACE 304804:
	java.util.Arrays.copyOf(Arrays.java:3308)
	java.util.BitSet.ensureCapacity(BitSet.java:337)
	java.util.BitSet.or(BitSet.java:943)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets(LinearScanLifetimeAnalysisPhase.java:371)
TRACE 304880:
	org.graalvm.compiler.lir.LIRValueUtil.stripCast(LIRValueUtil.java:127)
	org.graalvm.compiler.lir.LIRValueUtil.asVariable(LIRValueUtil.java:58)
	org.graalvm.compiler.lir.alloc.lsra.LinearScan.operandNumber(LinearScan.java:288)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.getOperandNumber(LinearScanLifetimeAnalysisPhase.java:301)
TRACE 300906:
	java.lang.invoke.MethodHandleNatives.resolve(MethodHandleNatives.java:Unknown line)
	java.lang.invoke.MemberName$Factory.resolve(MemberName.java:975)
	java.lang.invoke.MemberName$Factory.resolveOrFail(MemberName.java:1000)
	java.lang.invoke.MethodHandles$Lookup.resolveOrFail(MethodHandles.java:1394)
TRACE 301223:
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs(PrepareArguments.java:117)
	com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.prepare(PrepareArguments.java:129)
	com.oracle.truffle.r.nodes.function.call.PrepareArgumentsFactory$PrepareArgumentsDefaultNodeGen.execute(PrepareArgumentsFactory.java:46)
	com.oracle.truffle.r.nodes.function.RCallNode$FunctionDispatch.dispatch(RCallNode.java:920)
TRACE 301766:
	java.lang.Class.isArray(Class.java:Unknown line)
	java.lang.Class.getSimpleName(Class.java:1306)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:91)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor$LookupResult.<init>(FrameSlotChangeMonitor.java:87)
TRACE 301821:
	java.lang.Object.clone(Object.java:Unknown line)
	com.oracle.truffle.api.nodes.Node.copy(Node.java:486)
	com.oracle.truffle.api.nodes.RootNode.copy(RootNode.java:187)
	com.oracle.truffle.api.nodes.NodeUtil.deepCopyImpl(NodeUtil.java:77)
TRACE 301952:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.WeakHashMap.hash(WeakHashMap.java:298)
	java.util.WeakHashMap.put(WeakHashMap.java:449)
	com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.initializeNonFunctionFrameDescriptor(FrameSlotChangeMonitor.java:978)
TRACE 302159:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:475)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:413)
TRACE 302404:
	org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue(LocationMarkerPhase.java:84)
	org.graalvm.compiler.lir.dfa.LocationMarker$3.visitValue(LocationMarker.java:181)
	org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp(LocationMarker.java:143)
	org.graalvm.compiler.lir.dfa.LocationMarker.processBlock(LocationMarker.java:113)
TRACE 302411:
	org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule(ParserATNSimulator.java:1687)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closure_(ParserATNSimulator.java:1536)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1513)
	org.antlr.v4.runtime.atn.ParserATNSimulator.closureCheckingStopState(ParserATNSimulator.java:1496)
TRACE 302430:
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:790)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
TRACE 302455:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:91)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:103)
TRACE 302525:
	org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve(BytecodeParser.java:4394)
	org.graalvm.compiler.java.BytecodeParser.lookupMethod(BytecodeParser.java:4338)
	org.graalvm.compiler.java.BytecodeParser.genInvokeStatic(BytecodeParser.java:1631)
	org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5406)
TRACE 302631:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 302700:
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1409)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:664)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
TRACE 302794:
	java.util.AbstractCollection.addAll(AbstractCollection.java:343)
	jdk.vm.ci.meta.Assumptions.record(Assumptions.java:393)
	org.graalvm.compiler.replacements.PEGraphDecoder.recordGraphElements(PEGraphDecoder.java:766)
	org.graalvm.compiler.replacements.PEGraphDecoder.doInline(PEGraphDecoder.java:1105)
TRACE 302825:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:309)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 303223:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:247)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 303320:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs(SchedulePhase.java:1167)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:966)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:921)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:817)
TRACE 303383:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updateUsages(Node.java:616)
	org.graalvm.compiler.graph.NodeInputList.update(NodeInputList.java:61)
TRACE 303427:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.createHash(EconomicMapImpl.java:568)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:450)
TRACE 303618:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:346)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1461)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1401)
TRACE 303630:
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:623)
	org.graalvm.compiler.phases.common.FixReadsPhase.run(FixReadsPhase.java:96)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)
	org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:147)
TRACE 303639:
	org.graalvm.compiler.core.common.alloc.RegisterAllocationConfig.getAllocatableRegisters(RegisterAllocationConfig.java:118)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.initVarsForAlloc(LinearScanWalker.java:1000)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1105)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:241)
TRACE 303798:
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:86)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
	org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator.updateLIR(SimpleStackSlotAllocator.java:103)
TRACE 303908:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:565)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:647)
	org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace(NodeClass.java:778)
TRACE 303976:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.moveInsertPosition(MoveResolver.java:461)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.insertMove(LinearScanWalker.java:293)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent(LinearScanWalker.java:1128)
TRACE 304002:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.lir.util.IndexedValueMap.equals(IndexedValueMap.java:113)
	org.graalvm.compiler.lir.dfa.RegStackValueSet.equals(RegStackValueSet.java:132)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
TRACE 304263:
	org.graalvm.compiler.asm.Buffer.emitByte(Buffer.java:109)
	org.graalvm.compiler.asm.Assembler.emitByte(Assembler.java:82)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper(AMD64BaseAssembler.java:710)
	org.graalvm.compiler.asm.amd64.AMD64BaseAssembler.emitOperandHelper(AMD64BaseAssembler.java:562)
TRACE 304265:
	java.lang.String.intern(String.java:Unknown line)
	com.oracle.truffle.r.runtime.Utils.intern(Utils.java:821)
	com.oracle.truffle.r.runtime.RSerialize$Input.setAttributes(RSerialize.java:1072)
	com.oracle.truffle.r.runtime.RSerialize$Input.readItem(RSerialize.java:809)
TRACE 304315:
	org.graalvm.compiler.lir.LIRInsertionBuffer.append(LIRInsertionBuffer.java:101)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.insertMove(MoveResolver.java:279)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:350)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
TRACE 304347:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:871)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
	org.graalvm.compiler.phases.schedule.SchedulePhase.run(SchedulePhase.java:157)
	org.graalvm.compiler.phases.Phase.run(Phase.java:49)
TRACE 304402:
	java.util.PriorityQueue.siftDownUsingComparator(PriorityQueue.java:726)
	java.util.PriorityQueue.siftDown(PriorityQueue.java:688)
	java.util.PriorityQueue.poll(PriorityQueue.java:596)
	org.graalvm.compiler.core.common.alloc.ComputeBlockOrder.computeCodeEmittingOrder(ComputeBlockOrder.java:104)
TRACE 304405:
	org.graalvm.compiler.asm.Assembler.bind(Assembler.java:176)
	org.graalvm.compiler.lir.StandardOp$LabelOp.emitCode(StandardOp.java:165)
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitOp(CompilationResultBuilder.java:594)
	org.graalvm.compiler.lir.asm.CompilationResultBuilder.emitBlock(CompilationResultBuilder.java:581)
TRACE 304415:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.loop.LoopsData.<init>(LoopsData.java:50)
TRACE 304560:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi(SchedulePhase.java:933)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:960)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:921)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
TRACE 304594:
	org.graalvm.compiler.lir.LIRFrameState.processValues(LIRFrameState.java:132)
	org.graalvm.compiler.lir.LIRFrameState.forEachState(LIRFrameState.java:87)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachState(LIRInstructionClass.java:282)
	org.graalvm.compiler.lir.LIRInstruction.forEachState(LIRInstruction.java:289)
TRACE 304646:
	org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions(Interval.java:137)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:157)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:235)
TRACE 304663:
	org.graalvm.compiler.nodes.LogicNegationNode.implies(LogicNegationNode.java:89)
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:294)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processIf(ConditionalEliminationPhase.java:469)
TRACE 304758:
	com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute(RCallNodeGen.java:703)
	com.oracle.truffle.r.nodes.function.RCallNode.call(RCallNode.java:296)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:168)
	com.oracle.truffle.r.runtime.nodes.RNode.visibleExecute(RNode.java:74)
TRACE 305066:
	org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode(GraphDecoder.java:1464)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1403)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:664)
TRACE 306300:
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate(RfAllocVectorNode.java:79)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.doIt(RfAllocVectorNode.java:66)
	com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNodeGen.executeObject(RfAllocVectorNodeGen.java:37)
	com.oracle.truffle.r.ffi.impl.upcalls.Rf_allocVectorCall.execute(Rf_allocVectorCall.java:74)
TRACE 306380:
	org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter(FilteredNodeIterable.java:58)
	org.graalvm.compiler.nodes.AbstractMergeNode.phis(AbstractMergeNode.java:144)
	org.graalvm.compiler.loop.LoopFragment.computeNodes(LoopFragment.java:261)
	org.graalvm.compiler.loop.LoopFragmentWhole.nodes(LoopFragmentWhole.java:68)
TRACE 300149:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1008)
	java.lang.ClassLoader.loadClass(ClassLoader.java:407)
	java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:817)
TRACE 301269:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.allocateInstance(NodeClass.java:833)
	org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode(GraphDecoder.java:1460)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1431)
TRACE 301273:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.reflect.annotation.AnnotationParser.annotationForMap(AnnotationParser.java:303)
	sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:293)
	sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)
TRACE 301301:
	sun.misc.Unsafe.allocateInstance(Unsafe.java:Unknown line)
	org.graalvm.compiler.graph.NodeClass.allocateInstance(NodeClass.java:833)
	org.graalvm.compiler.nodes.GraphDecoder.makeStubNode(GraphDecoder.java:1549)
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1513)
TRACE 301556:
	java.lang.Class.getSuperclass(Class.java:Unknown line)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getBuiltinClass(NodeWithArgumentCasts.java:132)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts$Casts.getCasts(NodeWithArgumentCasts.java:111)
	com.oracle.truffle.r.nodes.builtin.NodeWithArgumentCasts.getStaticCasts(NodeWithArgumentCasts.java:42)
TRACE 301729:
	sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:Unknown line)
	com.oracle.truffle.api.library.LibraryFactory.ensureLibraryInitialized(LibraryFactory.java:339)
	com.oracle.truffle.api.library.LibraryFactory.create(LibraryFactory.java:296)
	com.oracle.truffle.r.runtime.data.nodes.FastPathVectorAccess.createVectorDataLibrary(FastPathVectorAccess.java:54)
TRACE 302101:
	org.antlr.v4.runtime.misc.FlexibleHashMap.put(FlexibleHashMap.java:111)
	org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets(PredictionMode.java:552)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATNWithFullContext(ParserATNSimulator.java:684)
	org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:505)
TRACE 302353:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd(SimplifyingGraphDecoder.java:342)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleFloatingNodeBeforeAdd(PEGraphDecoder.java:1461)
	org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated(GraphDecoder.java:1401)
	org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs(GraphDecoder.java:1321)
TRACE 302370:
	jdk.vm.ci.meta.JavaField.getJavaKind(JavaField.java:51)
	org.graalvm.compiler.hotspot.meta.HotSpotNodePlugin.tryConstantFold(HotSpotNodePlugin.java:131)
	org.graalvm.compiler.hotspot.meta.HotSpotNodePlugin.tryReadField(HotSpotNodePlugin.java:124)
	org.graalvm.compiler.hotspot.meta.HotSpotNodePlugin.handleLoadField(HotSpotNodePlugin.java:99)
TRACE 302410:
	org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs(GraphDecoder.java:1513)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:672)
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
TRACE 302436:
	org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical(Canonicalizable.java:137)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize(CanonicalizerPhase.java:407)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode(CanonicalizerPhase.java:345)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processWorkSet(CanonicalizerPhase.java:322)
TRACE 302565:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:248)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 302570:
	org.graalvm.compiler.graph.Graph.findFirstLiveIterable(Graph.java:983)
	org.graalvm.compiler.graph.Graph.getIterableNodeStart(Graph.java:977)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.forward(TypedGraphNodeIterator.java:71)
	org.graalvm.compiler.graph.TypedGraphNodeIterator.findNext(TypedGraphNodeIterator.java:49)
TRACE 302584:
	org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition(ConditionalEliminationUtil.java:282)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.tryProveGuardCondition(ConditionalEliminationPhase.java:846)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processFixedGuard(ConditionalEliminationPhase.java:395)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processNode(ConditionalEliminationPhase.java:538)
TRACE 302651:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:545)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList(SchedulePhase.java:543)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock(SchedulePhase.java:451)
TRACE 302760:
	org.graalvm.compiler.lir.LIRFrameState.visitEachState(LIRFrameState.java:114)
	org.graalvm.compiler.lir.LIRInstructionClass.visitEachState(LIRInstructionClass.java:291)
	org.graalvm.compiler.lir.LIRInstruction.visitEachState(LIRInstruction.java:340)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeLocalLiveSets(LinearScanLifetimeAnalysisPhase.java:250)
TRACE 302819:
	org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace(NodeClass.java:796)
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:900)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1211)
TRACE 302857:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks(ControlFlowGraph.java:548)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:82)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:174)
	org.graalvm.compiler.phases.common.ConditionalEliminationPhase.run(ConditionalEliminationPhase.java:151)
TRACE 302883:
	org.graalvm.compiler.nodes.util.GraphUtil.markUsagesForKill(GraphUtil.java:235)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFGInner(GraphUtil.java:132)
	org.graalvm.compiler.nodes.util.GraphUtil.killCFG(GraphUtil.java:290)
	org.graalvm.compiler.nodes.StructuredGraph.removeSplitPropagate(StructuredGraph.java:825)
TRACE 302923:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:559)
	org.graalvm.compiler.graph.Graph.register(Graph.java:1069)
	org.graalvm.compiler.graph.Node.initialize(Node.java:654)
	org.graalvm.compiler.graph.Graph.addHelper(Graph.java:507)
TRACE 302954:
	org.graalvm.compiler.graph.Graph$NodeEventListener.event(Graph.java:553)
	org.graalvm.compiler.graph.Node.maybeNotifyInputChanged(Node.java:947)
	org.graalvm.compiler.graph.Node.updatePredecessor(Node.java:647)
	org.graalvm.compiler.nodes.FixedWithNextNode.setNext(FixedWithNextNode.java:46)
TRACE 302991:
	sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	sun.nio.fs.UnixFileSystemProvider.checkAccess(UnixFileSystemProvider.java:308)
	com.oracle.truffle.polyglot.FileSystems$NIOFileSystem.checkAccess(FileSystems.java:744)
	com.oracle.truffle.api.TruffleFile.checkAccess(TruffleFile.java:2103)
TRACE 303229:
	org.graalvm.compiler.nodes.GraphEncoder.encode(GraphEncoder.java:241)
	org.graalvm.compiler.nodes.GraphEncoder.encodeSingleGraph(GraphEncoder.java:172)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.createGraph(CachingPEGraphDecoder.java:120)
	org.graalvm.compiler.replacements.CachingPEGraphDecoder.lookupEncodedGraph(CachingPEGraphDecoder.java:157)
TRACE 303253:
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges(ControlFlowGraph.java:375)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeDominators(ControlFlowGraph.java:345)
	org.graalvm.compiler.nodes.cfg.ControlFlowGraph.compute(ControlFlowGraph.java:89)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:189)
TRACE 303267:
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode(SimplifyingGraphDecoder.java:232)
	org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode(PEGraphDecoder.java:1432)
	org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode(SimplifyingGraphDecoder.java:182)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:792)
TRACE 303285:
	org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs(GraphDecoder.java:1372)
	org.graalvm.compiler.nodes.GraphDecoder.decodeFloatingNode(GraphDecoder.java:1441)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:853)
	org.graalvm.compiler.nodes.GraphDecoder.processNextNode(GraphDecoder.java:788)
TRACE 303391:
	org.graalvm.compiler.core.match.MatchPattern.matchUsage(MatchPattern.java:247)
	org.graalvm.compiler.core.match.MatchPattern.matchUsage(MatchPattern.java:233)
	org.graalvm.compiler.core.match.MatchStatement.generate(MatchStatement.java:98)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions(NodeLIRBuilder.java:480)
TRACE 303412:
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack(SchedulePhase.java:966)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes(SchedulePhase.java:921)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative(SchedulePhase.java:830)
	org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.run(SchedulePhase.java:198)
TRACE 303526:
	java.util.Objects.equals(Objects.java:59)
	org.graalvm.compiler.lir.util.IndexedValueMap.equals(IndexedValueMap.java:113)
	org.graalvm.compiler.lir.dfa.RegStackValueSet.equals(RegStackValueSet.java:132)
	org.graalvm.compiler.lir.dfa.LocationMarker.updateOutBlock(LocationMarker.java:97)
TRACE 303721:
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType(AbstractObjectStamp.java:294)
	org.graalvm.compiler.core.common.type.AbstractObjectStamp.hasValues(AbstractObjectStamp.java:87)
	org.graalvm.compiler.nodes.type.StampTool.typeReferenceOrNull(StampTool.java:228)
	org.graalvm.compiler.nodes.java.MethodCallTargetNode.devirtualizeCall(MethodCallTargetNode.java:140)
TRACE 303744:
	com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal(ReadVariableNode.java:270)
	com.oracle.truffle.r.nodes.access.variables.LookupNode.execute(ReadVariableNode.java:107)
	com.oracle.truffle.r.nodes.function.RCallNodeGen.execute(RCallNodeGen.java:159)
	com.oracle.truffle.r.nodes.function.PromiseNode$InlinedSuppliedArgumentNode.execute(PromiseNode.java:239)
TRACE 303752:
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:172)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations(LinearScanAssignLocationsPhase.java:257)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.run(LinearScanAssignLocationsPhase.java:76)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanAllocationPhase.apply(LinearScanAllocationPhase.java:55)
TRACE 303769:
	java.util.ArrayDeque.addLast(ArrayDeque.java:252)
	java.util.ArrayDeque.add(ArrayDeque.java:423)
	org.graalvm.compiler.lir.dfa.UniqueWorkList.add(UniqueWorkList.java:58)
	org.graalvm.compiler.lir.dfa.LocationMarker.build(LocationMarker.java:76)
TRACE 303813:
	com.oracle.truffle.r.runtime.data.RBaseObject.<init>(RBaseObject.java:42)
	com.oracle.truffle.r.runtime.data.RAttributable.<init>(RAttributable.java:42)
	com.oracle.truffle.r.runtime.data.RSharingAttributeStorage.<init>(RSharingAttributeStorage.java:58)
	com.oracle.truffle.r.runtime.data.model.RAbstractContainer.<init>(RAbstractContainer.java:60)
TRACE 303876:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.appendInsertionBuffer(MoveResolver.java:266)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:516)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow0(LinearScanResolveDataFlowPhase.java:205)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:136)
TRACE 303944:
	jdk.vm.ci.hotspot.CompilerToVM.invalidateHotSpotNmethod(CompilerToVM.java:Unknown line)
	jdk.vm.ci.hotspot.HotSpotNmethod.invalidate(HotSpotNmethod.java:110)
	org.graalvm.compiler.truffle.runtime.hotspot.HotSpotOptimizedCallTarget.onAssumptionInvalidated(HotSpotOptimizedCallTarget.java:123)
	org.graalvm.compiler.truffle.runtime.OptimizedAssumption.invalidateImpl(OptimizedAssumption.java:194)
TRACE 304039:
	org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent(AMD64AddressValue.java:86)
	org.graalvm.compiler.lir.LIRIntrospection.forEach(LIRIntrospection.java:254)
	org.graalvm.compiler.lir.LIRInstructionClass.forEachUse(LIRInstructionClass.java:247)
	org.graalvm.compiler.lir.LIRInstruction.forEachInput(LIRInstruction.java:273)
TRACE 304093:
	org.graalvm.compiler.graph.NodeClass.equalEdges(NodeClass.java:1221)
	org.graalvm.compiler.graph.NodeClass.equalInputs(NodeClass.java:1199)
	org.graalvm.compiler.graph.Graph.findDuplicate(Graph.java:776)
	org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryGlobalValueNumbering(CanonicalizerPhase.java:374)
TRACE 304224:
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState(RedundantMoveElimination.java:400)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.solveDataFlow(RedundantMoveElimination.java:296)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.doOptimize(RedundantMoveElimination.java:159)
	org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.access$000(RedundantMoveElimination.java:107)
TRACE 304470:
	org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject(VirtualizerToolImpl.java:309)
	org.graalvm.compiler.nodes.java.NewInstanceNode.virtualize(NewInstanceNode.java:89)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.virtualize(PartialEscapeClosure.java:303)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processVirtualizable(PartialEscapeClosure.java:299)
TRACE 304494:
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings(MoveResolver.java:346)
	org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveAndAppendMoves(MoveResolver.java:514)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.optimizeEmptyBlocks(LinearScanResolveDataFlowPhase.java:171)
	org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveDataFlow(LinearScanResolveDataFlowPhase.java:134)
TRACE 304503:
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:196)
	org.graalvm.compiler.graph.NodeList.add(NodeList.java:38)
	org.graalvm.compiler.nodes.FrameState.addVirtualObjectMapping(FrameState.java:317)
	org.graalvm.compiler.virtual.phases.ea.GraphEffectList$1.apply(GraphEffectList.java:163)
TRACE 304581:
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:172)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:112)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo(IntervalWalker.java:235)
	org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walk(IntervalWalker.java:79)
TRACE 304752:
	org.graalvm.compiler.asm.amd64.AMD64Address.<init>(AMD64Address.java:102)
	org.graalvm.compiler.asm.amd64.AMD64Address.<init>(AMD64Address.java:95)
	org.graalvm.compiler.asm.amd64.AMD64Address.<init>(AMD64Address.java:70)
	org.graalvm.compiler.asm.amd64.AMD64Assembler.makeAddress(AMD64Assembler.java:3967)
TRACE 304795:
	org.graalvm.compiler.nodes.GraphDecoder.decode(GraphDecoder.java:529)
	org.graalvm.compiler.replacements.PEGraphDecoder.decode(PEGraphDecoder.java:738)
	org.graalvm.compiler.truffle.compiler.PartialEvaluator.doGraphPE(PartialEvaluator.java:567)
	org.graalvm.compiler.truffle.compiler.phases.inlining.GraphManager.peRoot(GraphManager.java:93)
TRACE 304832:
	org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>(PartialEscapeClosure.java:185)
	org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.<init>(PEReadEliminationClosure.java:89)
	org.graalvm.compiler.virtual.phases.ea.PartialEscapePhase.createEffectsClosure(PartialEscapePhase.java:132)
	org.graalvm.compiler.virtual.phases.ea.EffectsPhase.runAnalysis(EffectsPhase.java:101)
TRACE 304947:
	java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1682)
	org.graalvm.compiler.replacements.PEGraphDecoder.getSpecialCallTarget(PEGraphDecoder.java:924)
	org.graalvm.compiler.replacements.PEGraphDecoder.trySimplifyCallTarget(PEGraphDecoder.java:876)
	org.graalvm.compiler.replacements.PEGraphDecoder.handleInvoke(PEGraphDecoder.java:859)
TRACE 305068:
	org.graalvm.compiler.core.amd64.AMD64NodeMatchRules$1.evaluate(AMD64NodeMatchRules.java:184)
	org.graalvm.compiler.core.match.ComplexMatchValue.evaluate(ComplexMatchValue.java:65)
	org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock(NodeLIRBuilder.java:419)
	org.graalvm.compiler.core.LIRGenerationPhase.emitBlock(LIRGenerationPhase.java:87)
TRACE 305236:
	org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413)
	org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574)
	org.graalvm.collections.EconomicMapImpl.put(EconomicMapImpl.java:448)
	org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply(ReentrantNodeIterator.java:163)
TRACE 305394:
	org.graalvm.compiler.graph.NodeClass.addGraphDuplicate(NodeClass.java:896)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1240)
	org.graalvm.compiler.graph.Graph.addDuplicates(Graph.java:1211)
	org.graalvm.compiler.replacements.SnippetTemplate.inlineSnippet(SnippetTemplate.java:1692)
TRACE 305524:
	org.graalvm.compiler.nodes.FrameState.<init>(FrameState.java:159)
	org.graalvm.compiler.nodes.FrameState.<init>(FrameState.java:171)
	org.graalvm.compiler.nodes.FrameState.duplicate(FrameState.java:339)
	org.graalvm.compiler.replacements.SnippetTemplate.rewireFrameStatesBeforeFSA(SnippetTemplate.java:1883)
TRACE 305989:
	com.oracle.truffle.api.library.LibraryFactory.getUncached(LibraryFactory.java:351)
	com.oracle.truffle.r.runtime.data.VectorDataLibraryGen$UncachedDispatch.getStringAt(VectorDataLibraryGen.java:5463)
	com.oracle.truffle.r.runtime.data.RStringVector.getDataAt(RStringVector.java:301)
	com.oracle.truffle.r.library.utils.TypeConvert.readIntVector(TypeConvert.java:97)
TRACE 306154:
	com.oracle.truffle.r.nodes.builtin.base.Unlist.unlistHelperInt(Unlist.java:574)
	com.oracle.truffle.r.nodes.builtin.base.Unlist.unlistHelper(Unlist.java:373)
	com.oracle.truffle.r.nodes.builtin.base.Unlist.unlistList(Unlist.java:265)
	com.oracle.truffle.r.nodes.builtin.base.UnlistNodeGen.execute(UnlistNodeGen.java:112)
CPU SAMPLES BEGIN (total = 83379) Sat Jan 23 20:56:30 2021
rank   self  accum   count trace method
   1 15.26% 15.26%   12725 302801 java.io.FileInputStream.open0
   2 10.12% 25.38%    8435 301907 com.oracle.truffle.nfi.impl.NFIContext.executePrimitive
   3  6.72% 32.10%    5605 302287 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
   4  5.94% 38.04%    4949 301719 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
   5  4.05% 42.08%    3373 301678 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
   6  3.67% 45.75%    3058 301673 jdk.vm.ci.hotspot.CompilerToVM.installCode
   7  3.01% 48.76%    2513 302564 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
   8  1.79% 50.56%    1495 301495 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
   9  1.60% 52.16%    1334 301243 jdk.vm.ci.hotspot.CompilerToVM.resolveTypeInPool
  10  1.52% 53.68%    1270 301374 jdk.vm.ci.hotspot.CompilerToVM.constantPoolRemapInstructionOperandFromCache
  11  1.19% 54.87%     992 302073 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  12  1.10% 55.97%     921 301704 java.lang.Object.hashCode
  13  1.09% 57.07%     911 301306 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  14  1.03% 58.10%     859 301274 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
  15  0.96% 59.05%     799 301304 jdk.vm.ci.hotspot.CompilerToVM.lookupMethodInPool
  16  0.84% 59.89%     698 303604 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  17  0.77% 60.67%     646 302586 org.graalvm.compiler.lir.dfa.LocationMarker.processInstructionBottomUp
  18  0.69% 61.35%     573 301351 java.lang.System.identityHashCode
  19  0.67% 62.03%     560 300806 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  20  0.67% 62.69%     556 301826 org.graalvm.collections.EconomicMapImpl.findLinear
  21  0.57% 63.26%     475 301265 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  22  0.50% 63.76%     416 301246 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  23  0.45% 64.21%     375 302137 java.lang.Throwable.fillInStackTrace
  24  0.40% 64.61%     332 301319 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  25  0.38% 64.99%     319 302904 java.lang.Throwable.fillInStackTrace
  26  0.35% 65.34%     291 301330 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  27  0.33% 65.67%     276 301264 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
  28  0.32% 66.00%     270 301936 sun.nio.fs.UnixNativeDispatcher.access0
  29  0.32% 66.32%     267 302709 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  30  0.31% 66.63%     262 304144 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
  31  0.31% 66.94%     259 302110 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  32  0.30% 67.24%     253 300070 java.lang.ClassLoader.defineClass1
  33  0.30% 67.54%     248 302443 org.graalvm.compiler.graph.NodeClass.deepHashCode0
  34  0.30% 67.84%     246 301874 jdk.vm.ci.hotspot.CompilerToVM.getResolvedJavaType0
  35  0.29% 68.13%     244 303046 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
  36  0.27% 68.40%     224 302253 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  37  0.26% 68.66%     215 302758 org.graalvm.compiler.core.common.util.Util.atPutGrow
  38  0.24% 68.90%     204 301425 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  39  0.24% 69.14%     200 302607 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
  40  0.23% 69.37%     188 302083 java.lang.System.identityHashCode
  41  0.22% 69.59%     186 301280 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  42  0.22% 69.81%     186 302981 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
  43  0.21% 70.03%     179 301593 org.graalvm.compiler.core.gen.DebugInfoBuilder.computeLocals
  44  0.20% 70.23%     167 301329 java.lang.String.intern
  45  0.20% 70.43%     166 301103 java.lang.String.intern
  46  0.19% 70.62%     162 302699 org.graalvm.compiler.lir.ValueConsumer.visitValue
  47  0.19% 70.81%     161 302551 jdk.vm.ci.hotspot.CompilerToVM.interpreterFrameSize
  48  0.18% 71.00%     154 302431 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
  49  0.18% 71.18%     151 301706 jdk.vm.ci.hotspot.CompilerToVM.hasNeverInlineDirective
  50  0.18% 71.36%     150 301925 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
  51  0.18% 71.54%     150 302810 org.graalvm.collections.EconomicMapImpl.getHashIndex
  52  0.16% 71.70%     134 302726 org.graalvm.compiler.core.common.util.Util.atPutGrow
  53  0.16% 71.86%     133 303430 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.computeGlobalLiveSets
  54  0.15% 72.01%     128 301343 org.graalvm.collections.EconomicMapImpl.getHashIndex
  55  0.15% 72.16%     125 302149 org.graalvm.compiler.core.common.Fields.copy
  56  0.14% 72.31%     120 302720 org.graalvm.compiler.lir.alloc.lsra.LinearScanOptimizeSpillPositionPhase$IntervalBlockIterator.next
  57  0.14% 72.45%     116 302129 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  58  0.14% 72.58%     115 302534 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
  59  0.14% 72.72%     114 301930 org.graalvm.compiler.graph.NodeClass.deepEquals0
  60  0.14% 72.86%     114 303596 org.graalvm.compiler.lir.LIRIntrospection.visitEach
  61  0.13% 72.99%     111 303627 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
  62  0.13% 73.12%     110 302145 org.graalvm.collections.EconomicMapImpl.getHashIndex
  63  0.13% 73.25%     110 302373 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
  64  0.13% 73.38%     109 301359 jdk.vm.ci.hotspot.CompilerToVM.getImplementor
  65  0.13% 73.51%     106 301501 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  66  0.13% 73.64%     106 301787 jdk.vm.ci.hotspot.CompilerToVM.ensureInitialized
  67  0.12% 73.75%      97 301028 org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd
  68  0.12% 73.87%      97 302085 org.graalvm.compiler.nodes.FrameState.applyToNonVirtual
  69  0.12% 73.99%      97 303613 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
  70  0.11% 74.10%      95 302986 com.oracle.truffle.api.TruffleFile.checkAccess
  71  0.11% 74.21%      93 301699 jdk.vm.ci.hotspot.CompilerToVM.findUniqueConcreteMethod
  72  0.11% 74.32%      93 303712 org.graalvm.compiler.lir.dfa.RegStackValueSet.equals
  73  0.11% 74.43%      90 302448 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
  74  0.11% 74.54%      90 302504 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  75  0.11% 74.65%      88 301013 java.lang.System.identityHashCode
  76  0.11% 74.75%      88 302428 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
  77  0.11% 74.86%      88 303521 org.graalvm.compiler.graph.Graph.findDuplicate
  78  0.10% 74.96%      87 301894 sun.nio.fs.UnixNativeDispatcher.realpath0
  79  0.10% 75.07%      87 302465 org.graalvm.compiler.graph.Graph.findNextLiveiterable
  80  0.10% 75.17%      87 303620 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
  81  0.10% 75.27%      86 301765 jdk.vm.ci.hotspot.CompilerToVM.lookupAppendixInPool
  82  0.10% 75.38%      85 301796 org.graalvm.collections.EconomicMapImpl.getHashIndex
  83  0.10% 75.48%      85 301802 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
  84  0.10% 75.58%      85 302617 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
  85  0.10% 75.68%      82 302476 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
  86  0.10% 75.77%      81 301282 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  87  0.10% 75.87%      81 301377 jdk.vm.ci.hotspot.CompilerToVM.lookupType
  88  0.09% 75.97%      79 302364 org.graalvm.compiler.nodes.GraphEncoder.writeEdges
  89  0.09% 76.06%      79 302663 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
  90  0.09% 76.15%      78 301785 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
  91  0.09% 76.25%      78 302907 sun.nio.fs.UnixNativeDispatcher.access
  92  0.09% 76.34%      76 303062 org.graalvm.compiler.lir.LIRFrameState.visitEachState
  93  0.09% 76.43%      76 303662 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveAny
  94  0.09% 76.52%      75 301655 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processNodes
  95  0.09% 76.61%      71 301914 jdk.vm.ci.hotspot.CompilerToVM.getSymbol
  96  0.09% 76.69%      71 302875 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
  97  0.08% 76.77%      68 305966 com.oracle.truffle.r.nodes.builtin.base.Scan.getItems
  98  0.08% 76.85%      67 302605 org.graalvm.compiler.lir.ValueConsumer.visitValue
  99  0.08% 76.93%      64 302132 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 100  0.08% 77.01%      64 302522 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 101  0.08% 77.08%      64 303491 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 102  0.07% 77.16%      62 302216 org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex
 103  0.07% 77.23%      62 303598 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectInactiveAny
 104  0.07% 77.30%      61 301021 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 105  0.07% 77.38%      59 303548 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 106  0.07% 77.45%      59 303601 org.graalvm.compiler.lir.alloc.lsra.LinearScan.allocate
 107  0.07% 77.52%      58 302480 org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader.getS2
 108  0.07% 77.59%      58 303633 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 109  0.07% 77.65%      57 303649 org.graalvm.compiler.lir.alloc.lsra.Range.intersectsAt
 110  0.07% 77.72%      56 305962 com.oracle.truffle.r.runtime.conn.DelegateRConnection.readLines
 111  0.07% 77.79%      55 301771 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 112  0.07% 77.85%      55 302063 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 113  0.07% 77.92%      55 302282 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 114  0.07% 77.98%      55 302908 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 115  0.06% 78.05%      53 301782 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 116  0.06% 78.11%      53 302001 java.lang.Class.isArray
 117  0.06% 78.18%      53 302493 org.graalvm.compiler.nodes.LogicNegationNode.implies
 118  0.06% 78.24%      53 302962 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 119  0.06% 78.30%      53 302968 org.graalvm.compiler.core.match.MatchPattern.matchShape
 120  0.06% 78.37%      52 302243 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 121  0.06% 78.43%      52 302499 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 122  0.06% 78.49%      52 302645 com.oracle.truffle.r.runtime.env.frame.FrameSlotChangeMonitor.getObject
 123  0.06% 78.55%      51 302239 java.lang.System.identityHashCode
 124  0.06% 78.61%      51 302462 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 125  0.06% 78.67%      50 302529 org.graalvm.compiler.graph.NodeWorkList.addAll
 126  0.06% 78.73%      49 302612 org.graalvm.compiler.graph.NodeClass.applyEdges
 127  0.06% 78.79%      49 303638 java.util.BitSet.clone
 128  0.06% 78.85%      49 305957 com.oracle.truffle.r.runtime.conn.DelegateReadRConnection.readLines
 129  0.06% 78.91%      48 302094 org.graalvm.compiler.graph.NodeClass.dataEquals
 130  0.06% 78.96%      47 302217 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassRefIndexInPool
 131  0.06% 79.02%      46 301041 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 132  0.06% 79.07%      46 302344 org.graalvm.compiler.graph.TypedGraphNodeIterator.forward
 133  0.06% 79.13%      46 302702 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 134  0.05% 79.18%      45 301040 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 135  0.05% 79.24%      45 302228 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFixedNode
 136  0.05% 79.29%      45 303011 org.graalvm.collections.EconomicMapImpl.findLinear
 137  0.05% 79.34%      44 302508 org.graalvm.collections.EconomicMapImpl.findWithCollision
 138  0.05% 79.40%      44 302577 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 139  0.05% 79.45%      44 302657 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 140  0.05% 79.50%      44 302977 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 141  0.05% 79.55%      43 301017 org.antlr.v4.runtime.atn.ParserATNSimulator.getEpsilonTarget
 142  0.05% 79.60%      43 301022 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 143  0.05% 79.66%      43 301348 jdk.vm.ci.hotspot.CompilerToVM.isTrustedForIntrinsics
 144  0.05% 79.71%      43 301971 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 145  0.05% 79.76%      43 304030 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 146  0.05% 79.81%      42 301405 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 147  0.05% 79.86%      42 302589 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.collectLockedVirtualObjects
 148  0.05% 79.91%      42 303655 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeCollectInactiveFixed
 149  0.05% 79.96%      42 303679 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 150  0.05% 80.01%      42 304080 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 151  0.05% 80.06%      41 302181 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 152  0.05% 80.11%      41 302363 org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType
 153  0.05% 80.16%      41 302578 java.lang.System.identityHashCode
 154  0.05% 80.21%      41 303096 org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue
 155  0.05% 80.26%      41 303271 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 156  0.05% 80.31%      41 303677 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 157  0.05% 80.35%      40 301317 java.lang.String.intern
 158  0.05% 80.40%      40 302707 org.graalvm.collections.EconomicMapImpl.compareKeys
 159  0.05% 80.45%      39 302334 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 160  0.05% 80.50%      39 302342 org.graalvm.compiler.core.common.util.FrequencyEncoder.getIndex
 161  0.05% 80.54%      39 302464 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 162  0.05% 80.59%      39 302888 org.graalvm.compiler.virtual.phases.ea.PEReadEliminationClosure.processNode
 163  0.05% 80.64%      39 302895 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 164  0.05% 80.68%      39 303515 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 165  0.05% 80.73%      39 304522 org.graalvm.collections.EconomicMapImpl.find
 166  0.05% 80.78%      39 305963 java.lang.StringCoding.decode
 167  0.05% 80.82%      38 302058 org.graalvm.compiler.graph.NodeWorkList$IterativeNodeWorkList.inflateToBitMap
 168  0.05% 80.87%      38 303527 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 169  0.04% 80.91%      37 301923 java.util.concurrent.ConcurrentHashMap.get
 170  0.04% 80.96%      37 302627 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 171  0.04% 81.00%      37 303053 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 172  0.04% 81.04%      37 303193 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 173  0.04% 81.09%      37 304244 jdk.vm.ci.hotspot.CompilerToVM.getMaxCallTargetOffset
 174  0.04% 81.13%      36 301908 jdk.vm.ci.hotspot.CompilerToVM.getHostClass
 175  0.04% 81.18%      36 301928 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 176  0.04% 81.22%      36 302211 org.graalvm.compiler.nodes.GraphEncoder.writeEdges
 177  0.04% 81.26%      36 302396 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 178  0.04% 81.30%      36 302910 org.graalvm.compiler.graph.NodeWorkList.<init>
 179  0.04% 81.35%      36 303295 org.graalvm.compiler.graph.NodeClass.applyHelper
 180  0.04% 81.39%      35 301212 java.lang.String.intern
 181  0.04% 81.43%      35 302450 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 182  0.04% 81.47%      35 303043 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 183  0.04% 81.52%      35 303458 org.graalvm.compiler.lir.LIRInstructionClass.forEachAlive
 184  0.04% 81.56%      34 301954 org.graalvm.compiler.nodes.GraphEncoder.writeEdges
 185  0.04% 81.60%      34 301998 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 186  0.04% 81.64%      34 302350 org.graalvm.compiler.nodes.GraphEncoder.writeProperties
 187  0.04% 81.68%      34 302960 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 188  0.04% 81.72%      34 303134 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 189  0.04% 81.76%      34 303241 org.graalvm.compiler.replacements.PEGraphDecoder.canonicalizeFixedNode
 190  0.04% 81.80%      34 303500 org.graalvm.compiler.core.gen.NodeLIRBuilder.matchComplexExpressions
 191  0.04% 81.84%      34 303867 org.graalvm.compiler.lir.LIRInstructionClass.visitEachState
 192  0.04% 81.88%      33 301338 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 193  0.04% 81.92%      33 302571 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 194  0.04% 81.96%      33 302926 org.graalvm.collections.EconomicMapImpl.add
 195  0.04% 82.00%      33 303204 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 196  0.04% 82.04%      33 303218 org.graalvm.compiler.nodes.GraphEncoder.encode
 197  0.04% 82.08%      33 306417 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
 198  0.04% 82.12%      32 301386 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 199  0.04% 82.16%      32 301394 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 200  0.04% 82.19%      32 302295 org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue
 201  0.04% 82.23%      32 302779 org.graalvm.compiler.nodes.GraphDecoder.makeFixedNodeInputs
 202  0.04% 82.27%      32 302964 org.graalvm.collections.EconomicMapImpl.put
 203  0.04% 82.31%      32 303459 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 204  0.04% 82.35%      32 303463 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 205  0.04% 82.39%      31 303049 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 206  0.04% 82.42%      31 303207 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 207  0.04% 82.46%      31 303341 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlock
 208  0.04% 82.50%      31 303355 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 209  0.04% 82.53%      31 303402 org.graalvm.compiler.graph.NodeClass.applyEdges
 210  0.04% 82.57%      31 303472 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 211  0.04% 82.61%      31 303995 org.graalvm.compiler.lir.LIRFrameState.forEachState
 212  0.04% 82.65%      31 304197 org.graalvm.compiler.lir.alloc.lsra.Interval.calcTo
 213  0.04% 82.68%      30 302002 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromClass0
 214  0.04% 82.72%      30 302509 org.graalvm.collections.EconomicMapImpl.createHash
 215  0.04% 82.75%      30 302887 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 216  0.04% 82.79%      30 303050 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 217  0.04% 82.83%      30 303599 org.graalvm.compiler.core.gen.NodeLIRBuilder.doBlock
 218  0.04% 82.86%      30 303797 org.graalvm.compiler.lir.LIRInstructionClass.forEachUse
 219  0.03% 82.90%      29 301300 jdk.vm.ci.hotspot.CompilerToVM.shouldInlineMethod
 220  0.03% 82.93%      29 301677 com.oracle.truffle.api.nodes.NodeUtil.visitChild
 221  0.03% 82.97%      29 302372 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.cleanupGraph
 222  0.03% 83.00%      29 302532 org.graalvm.compiler.nodes.UnaryOpLogicNode.skipThroughPisAndProxies
 223  0.03% 83.04%      29 302837 java.lang.ClassValue$ClassValueMap.probeHomeLocation
 224  0.03% 83.07%      29 303008 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 225  0.03% 83.10%      29 303067 org.graalvm.compiler.lir.ValueConsumer.visitValue
 226  0.03% 83.14%      29 303906 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.buildIntervals
 227  0.03% 83.17%      29 304451 java.util.Arrays.copyOf
 228  0.03% 83.21%      28 302732 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 229  0.03% 83.24%      28 302940 org.graalvm.collections.EconomicMapImpl.getHashIndex
 230  0.03% 83.28%      28 303507 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 231  0.03% 83.31%      28 303757 org.graalvm.compiler.lir.ValueConsumer.visitValue
 232  0.03% 83.34%      28 306409 com.oracle.truffle.api.profiles.ValueProfile$Equality.profile
 233  0.03% 83.37%      27 300687 java.lang.ClassLoader.loadClass
 234  0.03% 83.41%      27 300691 java.lang.Throwable.fillInStackTrace
 235  0.03% 83.44%      27 301285 jdk.vm.ci.hotspot.HotSpotResolvedJavaFieldImpl.isSynthetic
 236  0.03% 83.47%      27 302317 org.graalvm.collections.EconomicMapImpl.compareKeys
 237  0.03% 83.50%      27 302388 org.graalvm.compiler.graph.Graph.register
 238  0.03% 83.54%      27 302427 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 239  0.03% 83.57%      27 303035 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsageHelper
 240  0.03% 83.60%      27 304148 org.graalvm.compiler.nodes.ValueNode.getStackKind
 241  0.03% 83.63%      25 301945 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryInferStamp
 242  0.03% 83.66%      25 302530 java.util.Arrays.hashCode
 243  0.03% 83.69%      25 302919 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 244  0.03% 83.72%      25 303001 org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode
 245  0.03% 83.75%      25 303236 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 246  0.03% 83.78%      25 303608 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 247  0.03% 83.81%      25 303628 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 248  0.03% 83.84%      25 305967 com.oracle.truffle.r.nodes.builtin.base.Scan.scanFrameInternal
 249  0.03% 83.87%      24 300224 java.util.zip.ZipFile.getEntry
 250  0.03% 83.90%      24 300862 java.util.zip.ZipFile.read
 251  0.03% 83.93%      24 301937 java.lang.String.intern
 252  0.03% 83.96%      24 302055 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 253  0.03% 83.99%      24 302240 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 254  0.03% 84.01%      24 302502 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 255  0.03% 84.04%      24 303012 org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject
 256  0.03% 84.07%      24 303071 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 257  0.03% 84.10%      24 303349 org.graalvm.compiler.graph.NodeClass.dataEquals
 258  0.03% 84.13%      24 303516 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 259  0.03% 84.16%      24 305972 com.oracle.truffle.r.nodes.builtin.base.Scan.getQuotedItems
 260  0.03% 84.19%      23 301972 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.processBlock
 261  0.03% 84.21%      23 302403 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 262  0.03% 84.24%      23 302588 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 263  0.03% 84.27%      23 302980 org.graalvm.compiler.graph.NodeClass.updateEdgesInPlace
 264  0.03% 84.30%      23 303080 org.graalvm.compiler.nodes.util.GraphUtil.normalizeLoops
 265  0.03% 84.32%      23 303503 java.util.concurrent.ConcurrentHashMap.computeIfAbsent
 266  0.03% 84.35%      23 303612 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.activateCurrent
 267  0.03% 84.38%      23 303674 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 268  0.03% 84.41%      23 303760 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 269  0.03% 84.43%      23 304403 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitForSpilling
 270  0.03% 84.46%      22 300589 sun.misc.Unsafe.defineAnonymousClass
 271  0.03% 84.49%      22 302233 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 272  0.03% 84.51%      22 302891 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleCanonicalization
 273  0.03% 84.54%      22 303041 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$10
 274  0.03% 84.57%      22 303044 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 275  0.03% 84.59%      22 303697 org.graalvm.compiler.lir.ValueConsumer.visitValue
 276  0.03% 84.62%      22 303989 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 277  0.03% 84.64%      22 304241 java.util.ArrayDeque.addLast
 278  0.03% 84.67%      22 304395 org.graalvm.compiler.core.common.util.Util.atPutGrow
 279  0.03% 84.70%      22 304796 java.util.Arrays.copyOf
 280  0.03% 84.72%      22 305674 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 281  0.03% 84.75%      21 301875 java.lang.String.intern
 282  0.03% 84.77%      21 301960 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 283  0.03% 84.80%      21 302105 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlock
 284  0.03% 84.82%      21 302376 jdk.vm.ci.hotspot.CompilerToVM.isCompilable
 285  0.03% 84.85%      21 302936 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 286  0.03% 84.88%      21 303000 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 287  0.03% 84.90%      21 303036 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 288  0.03% 84.93%      21 303405 org.graalvm.compiler.phases.common.LoweringPhase.processBlock
 289  0.03% 84.95%      21 303473 com.oracle.truffle.api.library.LibraryFactory.getUncached
 290  0.03% 84.98%      21 303861 jdk.vm.ci.meta.JavaField.getJavaKind
 291  0.03% 85.00%      21 303918 org.graalvm.compiler.virtual.phases.ea.EffectList.apply
 292  0.03% 85.03%      21 304104 org.graalvm.compiler.lir.amd64.phases.StackMoveOptimizationPhase$Closure.process
 293  0.02% 85.05%      20 300073 java.lang.ClassLoader.findBootstrapClass
 294  0.02% 85.07%      20 301837 java.lang.Object.hashCode
 295  0.02% 85.10%      20 302225 org.graalvm.compiler.nodes.GraphEncoder.writeObjectId
 296  0.02% 85.12%      20 302498 org.graalvm.collections.EconomicMapImpl.add
 297  0.02% 85.15%      20 302671 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 298  0.02% 85.17%      20 302684 org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType
 299  0.02% 85.19%      20 302864 org.graalvm.compiler.nodes.IfNode.simplify
 300  0.02% 85.22%      20 302993 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 301  0.02% 85.24%      20 303367 org.graalvm.compiler.hotspot.HotSpotReferenceMapBuilder.finish
 302  0.02% 85.27%      20 303660 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.freeExcludeActiveAny
 303  0.02% 85.29%      20 303934 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 304  0.02% 85.31%      20 304072 org.graalvm.compiler.phases.common.AddressLoweringPhase.run
 305  0.02% 85.34%      20 306168 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 306  0.02% 85.36%      19 300282 java.lang.Class.forName0
 307  0.02% 85.38%      19 301044 org.antlr.v4.runtime.misc.FlexibleHashMap.expand
 308  0.02% 85.41%      19 301867 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 309  0.02% 85.43%      19 301955 jdk.vm.ci.hotspot.CompilerToVM.lookupNameAndTypeRefIndexInPool
 310  0.02% 85.45%      19 302479 org.graalvm.compiler.graph.iterators.PredicatedProxyNodeIterator.forward
 311  0.02% 85.47%      19 302600 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 312  0.02% 85.50%      19 303059 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 313  0.02% 85.52%      19 303347 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 314  0.02% 85.54%      19 303386 org.graalvm.compiler.nodes.GraphEncoder$NodeOrder.<init>
 315  0.02% 85.57%      19 303740 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsageHelper
 316  0.02% 85.59%      19 304005 org.graalvm.compiler.asm.Label.bind
 317  0.02% 85.61%      19 304198 org.graalvm.compiler.lir.LIRFrameState.forEachState
 318  0.02% 85.63%      19 304257 org.graalvm.compiler.lir.LIRValueUtil.stripCast
 319  0.02% 85.66%      18 300788 java.util.zip.ZipFile.read
 320  0.02% 85.68%      18 301940 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 321  0.02% 85.70%      18 302435 java.util.concurrent.ConcurrentHashMap.computeIfAbsent
 322  0.02% 85.72%      18 302575 java.lang.Class.getSuperclass
 323  0.02% 85.74%      18 302587 org.graalvm.compiler.nodes.StructuredGraph.maybeCompress
 324  0.02% 85.76%      18 302603 java.lang.Object.clone
 325  0.02% 85.79%      18 302896 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 326  0.02% 85.81%      18 302922 java.util.AbstractList$ListItr.<init>
 327  0.02% 85.83%      18 302958 org.graalvm.compiler.nodes.GraphEncoder.encode
 328  0.02% 85.85%      18 302963 org.graalvm.compiler.graph.NodeClass.dataEquals
 329  0.02% 85.87%      18 302999 jdk.vm.ci.hotspot.CompilerToVM.resolveFieldInPool
 330  0.02% 85.89%      18 303089 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.toArray
 331  0.02% 85.91%      18 303179 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 332  0.02% 85.94%      18 303556 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 333  0.02% 85.96%      18 303751 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillCollectActiveAny
 334  0.02% 85.98%      17 300750 java.util.zip.ZipFile.getEntry
 335  0.02% 86.00%      17 301035 org.antlr.v4.runtime.atn.PredictionMode.getConflictingAltSubsets
 336  0.02% 86.02%      17 301454 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 337  0.02% 86.04%      17 302408 org.graalvm.compiler.nodes.graphbuilderconf.InvocationPlugins.isEmpty
 338  0.02% 86.06%      17 302456 org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue
 339  0.02% 86.08%      17 302459 org.graalvm.compiler.graph.NodeClass.valueNumber
 340  0.02% 86.10%      17 302545 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 341  0.02% 86.12%      17 302889 org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getConstantReflection
 342  0.02% 86.14%      17 302932 sun.nio.fs.UnixException.rethrowAsIOException
 343  0.02% 86.16%      17 302933 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 344  0.02% 86.18%      17 302952 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 345  0.02% 86.20%      17 303018 sun.nio.fs.UnixNativeDispatcher.access
 346  0.02% 86.22%      17 303057 org.graalvm.compiler.nodes.GraphEncoder.prepare
 347  0.02% 86.24%      17 303172 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 348  0.02% 86.26%      17 303180 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 349  0.02% 86.28%      17 303436 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.spillBlockInactiveFixed
 350  0.02% 86.30%      17 303681 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 351  0.02% 86.33%      17 303743 org.graalvm.compiler.graph.Graph$MapReplacement.replacement
 352  0.02% 86.35%      17 303930 org.graalvm.compiler.graph.NodeList.iterator
 353  0.02% 86.37%      17 303997 org.graalvm.compiler.graph.NodeClass.unregisterAtInputsAsUsage
 354  0.02% 86.39%      17 304190 org.graalvm.compiler.lir.ValueConsumer.visitValue
 355  0.02% 86.41%      17 304431 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 356  0.02% 86.43%      17 304548 org.graalvm.compiler.nodes.spi.NodeWithState.states
 357  0.02% 86.45%      17 304913 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 358  0.02% 86.47%      16 301073 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 359  0.02% 86.49%      16 301210 java.lang.Class.isPrimitive
 360  0.02% 86.50%      16 301818 sun.misc.Unsafe.getAddress
 361  0.02% 86.52%      16 301918 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 362  0.02% 86.54%      16 302139 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 363  0.02% 86.56%      16 302183 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 364  0.02% 86.58%      16 302251 org.graalvm.compiler.graph.Graph.findDuplicate
 365  0.02% 86.60%      16 302324 org.graalvm.compiler.java.BciBlockMapping.computeBlockOrder
 366  0.02% 86.62%      16 302327 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.computeFrequencies
 367  0.02% 86.64%      16 302419 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonDominatorRawSameDepth
 368  0.02% 86.66%      16 302634 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.doInvoke
 369  0.02% 86.68%      16 302712 org.graalvm.compiler.nodes.calc.IntegerEqualsNode$IntegerEqualsOp.canonicalizeSymmetricConstant
 370  0.02% 86.70%      16 303040 org.graalvm.compiler.replacements.PEGraphDecoder.getInvocationPlugin
 371  0.02% 86.72%      16 303563 java.util.concurrent.ConcurrentHashMap.computeIfAbsent
 372  0.02% 86.74%      16 303796 jdk.vm.ci.meta.ModifiersProvider.isFinalFlagSet
 373  0.02% 86.75%      16 303942 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 374  0.02% 86.77%      16 304377 org.graalvm.compiler.graph.NodeClass.registerAtInputsAsUsage
 375  0.02% 86.79%      16 304436 org.graalvm.compiler.replacements.PEGraphDecoder.finishInlining
 376  0.02% 86.81%      15 300899 java.util.zip.ZipFile.getEntryTime
 377  0.02% 86.83%      15 301197 sun.misc.Unsafe.getAddress
 378  0.02% 86.85%      15 301406 org.graalvm.compiler.nodes.GraphDecoder.decode
 379  0.02% 86.86%      15 301443 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 380  0.02% 86.88%      15 301986 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 381  0.02% 86.90%      15 302117 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 382  0.02% 86.92%      15 302206 org.graalvm.compiler.truffle.runtime.OptimizedCallTarget.callDirect
 383  0.02% 86.94%      15 302215 com.oracle.truffle.r.nodes.builtin.base.S3DispatchFunctions$UseMethod.execute
 384  0.02% 86.95%      15 302383 org.graalvm.compiler.nodes.virtual.EscapeObjectState.applyToNonVirtual
 385  0.02% 86.97%      15 302563 jdk.vm.ci.hotspot.CompilerToVM.getExceptionTableLength
 386  0.02% 86.99%      15 302649 org.graalvm.compiler.graph.NodeWorkList.addAll
 387  0.02% 87.01%      15 303287 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 388  0.02% 87.03%      15 303354 org.graalvm.compiler.graph.NodeList.add
 389  0.02% 87.04%      15 303576 org.graalvm.compiler.graph.NodeClass.applyEdges
 390  0.02% 87.06%      15 303794 com.oracle.truffle.r.nodes.function.FunctionBodyNode.visibleExecute
 391  0.02% 87.08%      15 303829 org.graalvm.compiler.graph.NodeClass.replaceFirstEdge
 392  0.02% 87.10%      15 304616 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.getOperandNumber
 393  0.02% 87.12%      14 301323 org.graalvm.compiler.graph.Graph.findDuplicate
 394  0.02% 87.13%      14 301478 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 395  0.02% 87.15%      14 301489 org.graalvm.compiler.nodes.LogicNode.implies
 396  0.02% 87.17%      14 301733 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 397  0.02% 87.18%      14 302065 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 398  0.02% 87.20%      14 302510 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 399  0.02% 87.22%      14 302800 org.graalvm.compiler.phases.common.LoweringPhase$Round.process
 400  0.02% 87.23%      14 302918 org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply
 401  0.02% 87.25%      14 303063 com.oracle.truffle.r.nodes.control.RBlockNode.executeVoid
 402  0.02% 87.27%      14 303074 org.graalvm.compiler.lir.LIRIntrospection.forEach
 403  0.02% 87.28%      14 303328 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 404  0.02% 87.30%      14 303824 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 405  0.02% 87.32%      14 304041 org.graalvm.compiler.lir.dfa.LocationMarker.build
 406  0.02% 87.33%      14 304142 org.graalvm.compiler.nodes.GraphDecoder.allocateFloatingNode
 407  0.02% 87.35%      14 304151 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 408  0.02% 87.37%      14 304250 org.graalvm.compiler.graph.NodeClass.deepEquals0
 409  0.02% 87.38%      14 304458 org.graalvm.collections.EconomicMapImpl.add
 410  0.02% 87.40%      14 304489 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure$MergeProcessor.mergeObjectStates
 411  0.02% 87.42%      14 304586 org.graalvm.compiler.lir.alloc.lsra.LinearScanWalker.splitBeforeUsage
 412  0.02% 87.43%      14 304592 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.calcLatestBlocks
 413  0.02% 87.45%      14 304672 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance$1.inputChanged
 414  0.02% 87.47%      14 306415 com.oracle.truffle.r.runtime.nmath.RandomFunctions$RandomNumberProvider.unifRand
 415  0.02% 87.48%      13 301263 jdk.vm.ci.hotspot.CompilerToVM.iterateFrames
 416  0.02% 87.50%      13 301337 sun.misc.Unsafe.getAddress
 417  0.02% 87.51%      13 301745 sun.misc.Unsafe.getAddress
 418  0.02% 87.53%      13 301853 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 419  0.02% 87.55%      13 301896 jdk.vm.ci.hotspot.CompilerToVM.resolveMethod
 420  0.02% 87.56%      13 302134 com.oracle.truffle.r.runtime.data.model.RAbstractVector.setData
 421  0.02% 87.58%      13 302141 org.graalvm.compiler.graph.Node.copyOrClearEdgesForClone
 422  0.02% 87.59%      13 302191 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 423  0.02% 87.61%      13 302309 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.execute
 424  0.02% 87.62%      13 302328 org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter.writePacked
 425  0.02% 87.64%      13 302347 org.graalvm.collections.EconomicMapImpl.findLinear
 426  0.02% 87.66%      13 302413 org.graalvm.compiler.graph.spi.Canonicalizable$Unary.canonical
 427  0.02% 87.67%      13 302658 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 428  0.02% 87.69%      13 302683 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.commonPostdominator
 429  0.02% 87.70%      13 302841 org.graalvm.compiler.graph.iterators.NodeIterable.snapshotTo
 430  0.02% 87.72%      13 302861 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 431  0.02% 87.73%      13 302925 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 432  0.02% 87.75%      13 303286 com.oracle.truffle.r.nodes.function.RCallNode$BuiltinCallNode.forceArgPromises
 433  0.02% 87.76%      13 303466 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 434  0.02% 87.78%      13 303558 org.graalvm.compiler.core.match.MatchPattern.matchShape
 435  0.02% 87.80%      13 303600 org.graalvm.compiler.lir.alloc.lsra.LinearScanResolveDataFlowPhase.resolveCollectMappings
 436  0.02% 87.81%      13 303610 com.oracle.truffle.r.nodes.builtin.base.Return.doReturn
 437  0.02% 87.83%      13 303682 org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent
 438  0.02% 87.84%      13 303688 org.graalvm.compiler.lir.LIRFrameState.forEachState
 439  0.02% 87.86%      13 303975 java.util.TimSort.binarySort
 440  0.02% 87.87%      13 303991 org.graalvm.compiler.lir.alloc.lsra.LinearScanLifetimeAnalysisPhase.lambda$buildIntervals$9
 441  0.02% 87.89%      13 304114 org.graalvm.compiler.nodes.GraphDecoder.readProperties
 442  0.02% 87.90%      13 304406 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 443  0.02% 87.92%      13 304410 org.graalvm.compiler.lir.dfa.RegStackValueSet.addLiveValues
 444  0.02% 87.94%      13 304477 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.updateStatesForMaterialized
 445  0.02% 87.95%      13 306064 sun.misc.Unsafe.copyMemory
 446  0.01% 87.97%      12 301201 java.lang.Object.clone
 447  0.01% 87.98%      12 301287 org.antlr.v4.runtime.atn.ParserATNSimulator.closure_
 448  0.01% 87.99%      12 302053 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortNodesLatestWithinBlock
 449  0.01% 88.01%      12 302355 jdk.vm.ci.hotspot.CompilerToVM.getComponentType
 450  0.01% 88.02%      12 302566 org.graalvm.compiler.phases.graph.ReentrantNodeIterator.apply
 451  0.01% 88.04%      12 302582 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.processNode
 452  0.01% 88.05%      12 302721 org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve
 453  0.01% 88.07%      12 302855 org.graalvm.compiler.lir.framemap.FrameMap.newReferenceMapBuilder
 454  0.01% 88.08%      12 302872 org.graalvm.compiler.core.common.util.FrequencyEncoder.addObject
 455  0.01% 88.10%      12 303092 org.graalvm.compiler.lir.LIRIntrospection.forEach
 456  0.01% 88.11%      12 303361 org.graalvm.compiler.lir.ValueConsumer.visitValue
 457  0.01% 88.12%      12 303373 org.graalvm.compiler.graph.NodeClass$RawEdgesIterator.forward
 458  0.01% 88.14%      12 303479 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 459  0.01% 88.15%      12 303609 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByStartAndUsePositions
 460  0.01% 88.17%      12 303872 jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.fromMetaspace
 461  0.01% 88.18%      12 304022 com.oracle.truffle.api.TruffleFile.checkAccess
 462  0.01% 88.20%      12 304099 org.graalvm.compiler.java.LocalLiveness.computeLocalLiveness
 463  0.01% 88.21%      12 304531 org.graalvm.compiler.nodes.ValueNode.stamp
 464  0.01% 88.22%      12 304809 org.graalvm.compiler.lir.LIRIntrospection.forEach
 465  0.01% 88.24%      12 306026 com.oracle.truffle.r.nodes.primitive.VectorMapBinaryInternalNode.doVectorScalar
 466  0.01% 88.25%      11 301230 java.lang.Object.clone
 467  0.01% 88.27%      11 302366 org.graalvm.compiler.nodes.GraphEncoder.prepare
 468  0.01% 88.28%      11 302458 org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType
 469  0.01% 88.29%      11 302664 org.graalvm.compiler.hotspot.amd64.AMD64HotSpotLoweringProvider.lower
 470  0.01% 88.31%      11 302745 org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getMetaAccess
 471  0.01% 88.32%      11 302959 org.graalvm.compiler.virtual.phases.ea.ObjectState.createEscapeObjectState
 472  0.01% 88.33%      11 302969 org.graalvm.compiler.core.gen.NodeLIRBuilder.emitNode
 473  0.01% 88.34%      11 303070 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 474  0.01% 88.36%      11 303256 org.graalvm.compiler.phases.graph.ScheduledNodeIterator.processNodes
 475  0.01% 88.37%      11 303276 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.processNodeInputs
 476  0.01% 88.38%      11 303314 org.graalvm.compiler.nodes.GraphEncoder.encode
 477  0.01% 88.40%      11 303371 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.addVirtualMappings
 478  0.01% 88.41%      11 303408 org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace
 479  0.01% 88.42%      11 303429 org.graalvm.collections.EconomicMapImpl.getHashIndex
 480  0.01% 88.44%      11 303508 org.graalvm.compiler.core.amd64.AMD64AddressLowering.improveConstDisp
 481  0.01% 88.45%      11 303557 jdk.vm.ci.hotspot.CompilerToVM.lookupKlassInPool
 482  0.01% 88.46%      11 303590 org.graalvm.compiler.phases.common.ConditionalEliminationPhase$Instance.registerNewCondition
 483  0.01% 88.48%      11 303667 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 484  0.01% 88.49%      11 303701 org.graalvm.compiler.phases.common.CanonicalizerPhase$Instance.tryCanonicalize
 485  0.01% 88.50%      11 303768 org.graalvm.compiler.nodes.spi.CoreProvidersDelegate.getConstantReflection
 486  0.01% 88.52%      11 303809 org.graalvm.compiler.replacements.PEGraphDecoder.loopExplosionKind
 487  0.01% 88.53%      11 303938 org.graalvm.compiler.java.LocalLiveness.computeLiveness
 488  0.01% 88.54%      11 303968 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 489  0.01% 88.56%      11 304010 org.graalvm.compiler.phases.common.DeadCodeEliminationPhase.deleteNodes
 490  0.01% 88.57%      11 304075 org.graalvm.compiler.lir.alloc.lsra.LinearScan.splitChildAtOpId
 491  0.01% 88.58%      11 304232 org.graalvm.collections.EconomicMapImpl.compareKeys
 492  0.01% 88.60%      11 304330 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 493  0.01% 88.61%      11 304666 org.graalvm.collections.EconomicMapImpl.findLinear
 494  0.01% 88.62%      11 304701 org.graalvm.compiler.nodes.util.GraphUtil.killWithUnusedFloatingInputs
 495  0.01% 88.64%      11 304735 org.graalvm.compiler.lir.constopt.ConstantTreeAnalyzer.process
 496  0.01% 88.65%      11 304763 org.graalvm.compiler.lir.LIRIntrospection.visitEach
 497  0.01% 88.66%      11 304804 java.util.Arrays.copyOf
 498  0.01% 88.67%      11 304880 org.graalvm.compiler.lir.LIRValueUtil.stripCast
 499  0.01% 88.69%      10 300906 java.lang.invoke.MethodHandleNatives.resolve
 500  0.01% 88.70%      10 301223 com.oracle.truffle.r.nodes.function.call.PrepareArguments$PrepareArgumentsDefault.executeArgs
 501  0.01% 88.71%      10 301766 java.lang.Class.isArray
 502  0.01% 88.72%      10 301821 java.lang.Object.clone
 503  0.01% 88.73%      10 301952 java.lang.Object.hashCode
 504  0.01% 88.75%      10 302159 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 505  0.01% 88.76%      10 302404 org.graalvm.compiler.lir.dfa.LocationMarkerPhase$Marker.shouldProcessValue
 506  0.01% 88.77%      10 302411 org.antlr.v4.runtime.atn.ParserATNSimulator.canDropLoopEntryEdgeInLeftRecursiveRule
 507  0.01% 88.78%      10 302430 org.graalvm.compiler.nodes.GraphDecoder.processNextNode
 508  0.01% 88.79%      10 302455 org.graalvm.compiler.lir.LIRFrameState.forEachState
 509  0.01% 88.81%      10 302525 org.graalvm.compiler.java.BytecodeParser.maybeEagerlyResolve
 510  0.01% 88.82%      10 302631 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 511  0.01% 88.83%      10 302700 org.graalvm.compiler.nodes.GraphDecoder.ensureNodeCreated
 512  0.01% 88.84%      10 302794 java.util.AbstractCollection.addAll
 513  0.01% 88.85%      10 302825 org.graalvm.compiler.nodes.GraphEncoder.encode
 514  0.01% 88.87%      10 303223 org.graalvm.compiler.nodes.GraphEncoder.encode
 515  0.01% 88.88%      10 303320 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processInputs
 516  0.01% 88.89%      10 303383 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 517  0.01% 88.90%      10 303427 org.graalvm.collections.EconomicMapImpl.getHashIndex
 518  0.01% 88.91%      10 303618 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 519  0.01% 88.93%      10 303630 org.graalvm.compiler.phases.common.FixReadsPhase.run
 520  0.01% 88.94%      10 303639 org.graalvm.compiler.core.common.alloc.RegisterAllocationConfig.getAllocatableRegisters
 521  0.01% 88.95%      10 303798 org.graalvm.compiler.lir.LIRFrameState.forEachState
 522  0.01% 88.96%      10 303908 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 523  0.01% 88.97%      10 303976 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 524  0.01% 88.99%      10 304002 java.util.Objects.equals
 525  0.01% 89.00%      10 304263 org.graalvm.compiler.asm.Buffer.emitByte
 526  0.01% 89.01%      10 304265 java.lang.String.intern
 527  0.01% 89.02%      10 304315 org.graalvm.compiler.lir.LIRInsertionBuffer.append
 528  0.01% 89.03%      10 304347 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.scheduleEarliestIterative
 529  0.01% 89.05%      10 304402 java.util.PriorityQueue.siftDownUsingComparator
 530  0.01% 89.06%      10 304405 org.graalvm.compiler.asm.Assembler.bind
 531  0.01% 89.07%      10 304415 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 532  0.01% 89.08%      10 304560 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStackPhi
 533  0.01% 89.09%      10 304594 org.graalvm.compiler.lir.LIRFrameState.processValues
 534  0.01% 89.11%      10 304646 org.graalvm.compiler.lir.alloc.lsra.Interval$RegisterBindingLists.addToListSortedByCurrentFromPositions
 535  0.01% 89.12%      10 304663 org.graalvm.compiler.nodes.LogicNegationNode.implies
 536  0.01% 89.13%      10 304758 com.oracle.truffle.r.nodes.function.RCallNodeGen$FunctionDispatchNodeGen.execute
 537  0.01% 89.14%      10 305066 org.graalvm.compiler.nodes.GraphDecoder.releaseFloatingNode
 538  0.01% 89.15%      10 306300 com.oracle.truffle.r.ffi.impl.nodes.RfAllocVectorNode.allocate
 539  0.01% 89.17%      10 306380 org.graalvm.compiler.graph.iterators.FilteredNodeIterable.filter
 540  0.01% 89.18%       9 300149 java.lang.ClassLoader.findBootstrapClass
 541  0.01% 89.19%       9 301269 sun.misc.Unsafe.allocateInstance
 542  0.01% 89.20%       9 301273 java.security.AccessController.doPrivileged
 543  0.01% 89.21%       9 301301 sun.misc.Unsafe.allocateInstance
 544  0.01% 89.22%       9 301556 java.lang.Class.getSuperclass
 545  0.01% 89.23%       9 301729 sun.misc.Unsafe.ensureClassInitialized
 546  0.01% 89.24%       9 302101 org.antlr.v4.runtime.misc.FlexibleHashMap.put
 547  0.01% 89.25%       9 302353 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.handleFloatingNodeBeforeAdd
 548  0.01% 89.26%       9 302370 jdk.vm.ci.meta.JavaField.getJavaKind
 549  0.01% 89.27%       9 302410 org.graalvm.compiler.nodes.GraphDecoder.makeSuccessorStubs
 550  0.01% 89.29%       9 302436 org.graalvm.compiler.graph.spi.Canonicalizable$Binary.canonical
 551  0.01% 89.30%       9 302565 org.graalvm.compiler.nodes.GraphEncoder.encode
 552  0.01% 89.31%       9 302570 org.graalvm.compiler.graph.Graph.findFirstLiveIterable
 553  0.01% 89.32%       9 302584 org.graalvm.compiler.phases.common.ConditionalEliminationUtil.tryProveGuardCondition
 554  0.01% 89.33%       9 302651 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.sortIntoList
 555  0.01% 89.34%       9 302760 org.graalvm.compiler.lir.LIRFrameState.visitEachState
 556  0.01% 89.35%       9 302819 org.graalvm.compiler.graph.NodeClass.updateInputSuccInPlace
 557  0.01% 89.36%       9 302857 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.identifyBlocks
 558  0.01% 89.37%       9 302883 org.graalvm.compiler.nodes.util.GraphUtil.markUsagesForKill
 559  0.01% 89.38%       9 302923 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 560  0.01% 89.39%       9 302954 org.graalvm.compiler.graph.Graph$NodeEventListener.event
 561  0.01% 89.40%       9 302991 sun.nio.fs.UnixException.rethrowAsIOException
 562  0.01% 89.41%       9 303229 org.graalvm.compiler.nodes.GraphEncoder.encode
 563  0.01% 89.43%       9 303253 org.graalvm.compiler.nodes.cfg.ControlFlowGraph.calcDominatorRanges
 564  0.01% 89.44%       9 303267 org.graalvm.compiler.nodes.SimplifyingGraphDecoder.canonicalizeFixedNode
 565  0.01% 89.45%       9 303285 org.graalvm.compiler.nodes.GraphDecoder.makeFloatingNodeInputs
 566  0.01% 89.46%       9 303391 org.graalvm.compiler.core.match.MatchPattern.matchUsage
 567  0.01% 89.47%       9 303412 org.graalvm.compiler.phases.schedule.SchedulePhase$Instance.processStack
 568  0.01% 89.48%       9 303526 java.util.Objects.equals
 569  0.01% 89.49%       9 303721 org.graalvm.compiler.core.common.type.AbstractObjectStamp.isConcreteType
 570  0.01% 89.50%       9 303744 com.oracle.truffle.r.nodes.access.variables.ReadVariableNode.executeInternal
 571  0.01% 89.51%       9 303752 org.graalvm.compiler.lir.alloc.lsra.LinearScanAssignLocationsPhase.assignLocations
 572  0.01% 89.52%       9 303769 java.util.ArrayDeque.addLast
 573  0.01% 89.53%       9 303813 com.oracle.truffle.r.runtime.data.RBaseObject.<init>
 574  0.01% 89.54%       9 303876 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.appendInsertionBuffer
 575  0.01% 89.55%       9 303944 jdk.vm.ci.hotspot.CompilerToVM.invalidateHotSpotNmethod
 576  0.01% 89.57%       9 304039 org.graalvm.compiler.lir.amd64.AMD64AddressValue.forEachComponent
 577  0.01% 89.58%       9 304093 org.graalvm.compiler.graph.NodeClass.equalEdges
 578  0.01% 89.59%       9 304224 org.graalvm.compiler.lir.RedundantMoveElimination$Optimization.updateState
 579  0.01% 89.60%       9 304470 org.graalvm.compiler.virtual.phases.ea.VirtualizerToolImpl.createVirtualObject
 580  0.01% 89.61%       9 304494 org.graalvm.compiler.lir.alloc.lsra.MoveResolver.resolveMappings
 581  0.01% 89.62%       9 304503 org.graalvm.compiler.graph.NodeList.add
 582  0.01% 89.63%       9 304581 org.graalvm.compiler.lir.alloc.lsra.IntervalWalker.walkTo
 583  0.01% 89.64%       9 304752 org.graalvm.compiler.asm.amd64.AMD64Address.<init>
 584  0.01% 89.65%       9 304795 org.graalvm.compiler.nodes.GraphDecoder.decode
 585  0.01% 89.66%       9 304832 org.graalvm.compiler.virtual.phases.ea.PartialEscapeClosure.<init>
 586  0.01% 89.67%       9 304947 java.util.concurrent.ConcurrentHashMap.computeIfAbsent
 587  0.01% 89.68%       9 305068 org.graalvm.compiler.core.amd64.AMD64NodeMatchRules$1.evaluate
 588  0.01% 89.70%       9 305236 org.graalvm.collections.EconomicMapImpl.getHashIndex
 589  0.01% 89.71%       9 305394 org.graalvm.compiler.graph.NodeClass.addGraphDuplicate
 590  0.01% 89.72%       9 305524 org.graalvm.compiler.nodes.FrameState.<init>
 591  0.01% 89.73%       9 305989 com.oracle.truffle.api.library.LibraryFactory.getUncached
 592  0.01% 89.74%       9 306154 com.oracle.truffle.r.nodes.builtin.base.Unlist.unlistHelperInt
CPU SAMPLES END
